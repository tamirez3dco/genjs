// three.js - http://github.com/mrdoob/three.js
'use strict';var THREE=THREE||{REVISION:"55"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(a){return this.slice(0,a.length)===a};String.prototype.endsWith=String.prototype.endsWith||function(a){var a=String(a),b=this.lastIndexOf(a);return(-1<b&&b)===this.length-a.length};
String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};
(function(){for(var a=0,b=["ms","moz","webkit","o"],c=0;c<b.length&&!window.requestAnimationFrame;++c)window.requestAnimationFrame=window[b[c]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[b[c]+"CancelAnimationFrame"]||window[b[c]+"CancelRequestAnimationFrame"];void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(b){var c=Date.now(),g=Math.max(0,16-(c-a)),f=window.setTimeout(function(){b(c+g)},g);a=c+g;return f});window.cancelAnimationFrame=window.cancelAnimationFrame||
function(a){window.clearTimeout(a)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;
THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;
THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1E3;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;
THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;
THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(a){void 0!==a&&this.set(a);return this};
THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,set:function(a){switch(typeof a){case "number":this.setHex(a);break;case "string":this.setStyle(a)}},setHex:function(a){a=Math.floor(a);this.r=(a>>16&255)/255;this.g=(a>>8&255)/255;this.b=(a&255)/255;return this},setRGB:function(a,b,c){this.r=a;this.g=b;this.b=c;return this},setHSV:function(a,b,c){var d,e,g;0===c?this.r=this.g=this.b=0:(d=Math.floor(6*a),e=6*a-d,a=c*(1-b),g=c*(1-b*e),b=c*(1-b*(1-e)),0===d?(this.r=c,this.g=b,this.b=a):1===
d?(this.r=g,this.g=c,this.b=a):2===d?(this.r=a,this.g=c,this.b=b):3===d?(this.r=a,this.g=g,this.b=c):4===d?(this.r=b,this.g=a,this.b=c):5===d&&(this.r=c,this.g=a,this.b=g));return this},setStyle:function(a){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(a))return a=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(a),this.r=Math.min(255,parseInt(a[1],10))/255,this.g=Math.min(255,parseInt(a[2],10))/255,this.b=Math.min(255,parseInt(a[3],10))/255,this;if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(a))return a=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(a),
this.r=Math.min(100,parseInt(a[1],10))/100,this.g=Math.min(100,parseInt(a[2],10))/100,this.b=Math.min(100,parseInt(a[3],10))/100,this;if(/^\#([0-9a-f]{6})$/i.test(a))return a=/^\#([0-9a-f]{6})$/i.exec(a),this.setHex(parseInt(a[1],16)),this;if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(a))return a=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(a),this.setHex(parseInt(a[1]+a[1]+a[2]+a[2]+a[3]+a[3],16)),this;if(/^(\w+)$/i.test(a))return this.setHex(THREE.ColorKeywords[a]),this},copy:function(a){this.r=a.r;
this.g=a.g;this.b=a.b;return this},copyGammaToLinear:function(a){this.r=a.r*a.r;this.g=a.g*a.g;this.b=a.b*a.b;return this},copyLinearToGamma:function(a){this.r=Math.sqrt(a.r);this.g=Math.sqrt(a.g);this.b=Math.sqrt(a.b);return this},convertGammaToLinear:function(){var a=this.r,b=this.g,c=this.b;this.r=a*a;this.g=b*b;this.b=c*c;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},getHex:function(){return 255*this.r<<16^
255*this.g<<8^255*this.b<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},getHSV:function(a){var b=this.r,c=this.g,d=this.b,e=Math.max(Math.max(b,c),d),g=Math.min(Math.min(b,c),d);if(g===e)g=b=0;else{var f=e-g,g=f/e,b=(b===e?(c-d)/f:c===e?2+(d-b)/f:4+(b-c)/f)/6;0>b&&(b+=1);1<b&&(b-=1)}void 0===a&&(a={h:0,s:0,v:0});a.h=b;a.s=g;a.v=e;return a},add:function(a){this.r+=a.r;this.g+=
a.g;this.b+=a.b;return this},addColors:function(a,b){this.r=a.r+b.r;this.g=a.g+b.g;this.b=a.b+b.b;return this},addScalar:function(a){this.r+=a;this.g+=a;this.b+=a;return this},multiply:function(a){this.r*=a.r;this.g*=a.g;this.b*=a.b;return this},multiplyScalar:function(a){this.r*=a;this.g*=a;this.b*=a;return this},lerp:function(a,b){this.r+=(a.r-this.r)*b;this.g+=(a.g-this.g)*b;this.b+=(a.b-this.b)*b;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};
THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,
darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,
grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,
lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,
palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,
tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Quaternion=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w;return this},setFromEuler:function(a,b){var c=Math.cos(a.x/2),d=Math.cos(a.y/2),e=Math.cos(a.z/2),g=Math.sin(a.x/2),f=Math.sin(a.y/2),i=Math.sin(a.z/2);void 0===b||"XYZ"===b?(this.x=g*d*e+c*f*i,this.y=c*f*e-g*d*i,this.z=c*d*i+g*f*e,this.w=c*d*e-g*f*i):"YXZ"===b?(this.x=g*d*e+c*f*i,this.y=c*f*e-g*d*i,this.z=c*d*
i-g*f*e,this.w=c*d*e+g*f*i):"ZXY"===b?(this.x=g*d*e-c*f*i,this.y=c*f*e+g*d*i,this.z=c*d*i+g*f*e,this.w=c*d*e-g*f*i):"ZYX"===b?(this.x=g*d*e-c*f*i,this.y=c*f*e+g*d*i,this.z=c*d*i-g*f*e,this.w=c*d*e+g*f*i):"YZX"===b?(this.x=g*d*e+c*f*i,this.y=c*f*e+g*d*i,this.z=c*d*i-g*f*e,this.w=c*d*e-g*f*i):"XZY"===b&&(this.x=g*d*e-c*f*i,this.y=c*f*e-g*d*i,this.z=c*d*i+g*f*e,this.w=c*d*e+g*f*i);return this},setFromAxisAngle:function(a,b){var c=b/2,d=Math.sin(c);this.x=a.x*d;this.y=a.y*d;this.z=a.z*d;this.w=Math.cos(c);
return this},setFromRotationMatrix:function(a){var b=a.elements,c=b[0],a=b[4],d=b[8],e=b[1],g=b[5],f=b[9],i=b[2],h=b[6],b=b[10],j=c+g+b;0<j?(c=0.5/Math.sqrt(j+1),this.w=0.25/c,this.x=(h-f)*c,this.y=(d-i)*c,this.z=(e-a)*c):c>g&&c>b?(c=2*Math.sqrt(1+c-g-b),this.w=(h-f)/c,this.x=0.25*c,this.y=(a+e)/c,this.z=(d+i)/c):g>b?(c=2*Math.sqrt(1+g-c-b),this.w=(d-i)/c,this.x=(a+e)/c,this.y=0.25*c,this.z=(f+h)/c):(c=2*Math.sqrt(1+b-c-g),this.w=(e-a)/c,this.x=(d+i)/c,this.y=(f+h)/c,this.z=0.25*c);return this},inverse:function(){this.conjugate().normalize();
return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var a=this.length();0===a?(this.z=this.y=this.x=0,this.w=1):(a=1/a,this.x*=a,this.y*=a,this.z*=a,this.w*=a);return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Quaternion's .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),
this.multiplyQuaternions(a,b)):this.multiplyQuaternions(this,a)},multiplyQuaternions:function(a,b){var c=a.x,d=a.y,e=a.z,g=a.w,f=b.x,i=b.y,h=b.z,j=b.w;this.x=c*j+g*f+d*h-e*i;this.y=d*j+g*i+e*f-c*h;this.z=e*j+g*h+c*i-d*f;this.w=g*j-c*f-d*i-e*h;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Quaternion's .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.");return a.applyQuaternion(this)},slerp:function(a,b){var c=this.x,d=this.y,e=this.z,
g=this.w,f=g*a.w+c*a.x+d*a.y+e*a.z;0>f?(this.w=-a.w,this.x=-a.x,this.y=-a.y,this.z=-a.z,f=-f):this.copy(a);if(1<=f)return this.w=g,this.x=c,this.y=d,this.z=e,this;var i=Math.acos(f),h=Math.sqrt(1-f*f);if(0.0010>Math.abs(h))return this.w=0.5*(g+this.w),this.x=0.5*(c+this.x),this.y=0.5*(d+this.y),this.z=0.5*(e+this.z),this;f=Math.sin((1-b)*i)/h;i=Math.sin(b*i)/h;this.w=g*f+this.w*i;this.x=c*f+this.x*i;this.y=d*f+this.y*i;this.z=e*f+this.z*i;return this},equals:function(a){return a.x===this.x&&a.y===
this.y&&a.z===this.z&&a.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(a,b,c,d){return c.copy(a).slerp(b,d)};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(a,b){this.x=a;this.y=b;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;return this},add:function(a,
b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},addScalar:function(a){this.x+=a;this.y+=a;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector2's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=
a.y;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a):this.set(0,0);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);return this},
negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,a=this.y-a.y;return b*b+a*a},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/
b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;return this},equals:function(a){return a.x===this.x&&a.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(a,b,c){this.x=a||0;this.y=b||0;this.z=c||0};
THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(a,b,c){this.x=a;this.y=b;this.z=c;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+
a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),
this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},multiply:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(a,b);this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},multiplyVectors:function(a,b){this.x=a.x*
b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},applyMatrix3:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[3]*c+a[6]*d;this.y=a[1]*b+a[4]*c+a[7]*d;this.z=a[2]*b+a[5]*c+a[8]*d;return this},applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12];this.y=a[1]*b+a[5]*c+a[9]*d+a[13];this.z=a[2]*b+a[6]*c+a[10]*d+a[14];return this},applyProjection:function(a){var b=this.x,c=this.y,d=this.z,a=a.elements,e=1/(a[3]*b+a[7]*c+a[11]*d+a[15]);
this.x=(a[0]*b+a[4]*c+a[8]*d+a[12])*e;this.y=(a[1]*b+a[5]*c+a[9]*d+a[13])*e;this.z=(a[2]*b+a[6]*c+a[10]*d+a[14])*e;return this},applyQuaternion:function(a){var b=this.x,c=this.y,d=this.z,e=a.x,g=a.y,f=a.z,a=a.w,i=a*b+g*d-f*c,h=a*c+f*b-e*d,j=a*d+e*c-g*b,b=-e*b-g*c-f*d;this.x=i*a+b*-e+h*-f-j*-g;this.y=h*a+b*-g+j*-e-i*-f;this.z=j*a+b*-f+i*-g-h*-e;return this},applyEuler:function(a,b){var c=THREE.Vector3.__q1.setFromEuler(a,b);this.applyQuaternion(c);return this},applyAxisAngle:function(a,b){var c=THREE.Vector3.__q1.setFromAxisAngle(a,
b);this.applyQuaternion(c);return this},divide:function(a){this.x/=a.x;this.y/=a.y;this.z/=a.z;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a):this.z=this.y=this.x=0;return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);return this},max:function(a){this.x<a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:
this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=
this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;return this},cross:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector3's .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(a,b);var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},crossVectors:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=
a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},angleTo:function(a){return Math.acos(this.dot(a)/this.length()/a.length())},distanceTo:function(a){return Math.sqrt(this.distanceToSquared(a))},distanceToSquared:function(a){var b=this.x-a.x,c=this.y-a.y,a=this.z-a.z;return b*b+c*c+a*a},getPositionFromMatrix:function(a){this.x=a.elements[12];this.y=a.elements[13];this.z=a.elements[14];return this},setEulerFromRotationMatrix:function(a,b){function c(a){return Math.min(Math.max(a,-1),1)}var d=a.elements,
e=d[0],g=d[4],f=d[8],i=d[1],h=d[5],j=d[9],k=d[2],m=d[6],d=d[10];void 0===b||"XYZ"===b?(this.y=Math.asin(c(f)),0.99999>Math.abs(f)?(this.x=Math.atan2(-j,d),this.z=Math.atan2(-g,e)):(this.x=Math.atan2(m,h),this.z=0)):"YXZ"===b?(this.x=Math.asin(-c(j)),0.99999>Math.abs(j)?(this.y=Math.atan2(f,d),this.z=Math.atan2(i,h)):(this.y=Math.atan2(-k,e),this.z=0)):"ZXY"===b?(this.x=Math.asin(c(m)),0.99999>Math.abs(m)?(this.y=Math.atan2(-k,d),this.z=Math.atan2(-g,h)):(this.y=0,this.z=Math.atan2(i,e))):"ZYX"===
b?(this.y=Math.asin(-c(k)),0.99999>Math.abs(k)?(this.x=Math.atan2(m,d),this.z=Math.atan2(i,e)):(this.x=0,this.z=Math.atan2(-g,h))):"YZX"===b?(this.z=Math.asin(c(i)),0.99999>Math.abs(i)?(this.x=Math.atan2(-j,h),this.y=Math.atan2(-k,e)):(this.x=0,this.y=Math.atan2(f,d))):"XZY"===b&&(this.z=Math.asin(-c(g)),0.99999>Math.abs(g)?(this.x=Math.atan2(m,h),this.y=Math.atan2(f,e)):(this.x=Math.atan2(-j,d),this.y=0));return this},setEulerFromQuaternion:function(a,b){function c(a){return Math.min(Math.max(a,
-1),1)}var d=a.x*a.x,e=a.y*a.y,g=a.z*a.z,f=a.w*a.w;void 0===b||"XYZ"===b?(this.x=Math.atan2(2*(a.x*a.w-a.y*a.z),f-d-e+g),this.y=Math.asin(c(2*(a.x*a.z+a.y*a.w))),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),f+d-e-g)):"YXZ"===b?(this.x=Math.asin(c(2*(a.x*a.w-a.y*a.z))),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),f-d-e+g),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),f-d+e-g)):"ZXY"===b?(this.x=Math.asin(c(2*(a.x*a.w+a.y*a.z))),this.y=Math.atan2(2*(a.y*a.w-a.z*a.x),f-d-e+g),this.z=Math.atan2(2*(a.z*a.w-a.x*a.y),f-d+e-g)):
"ZYX"===b?(this.x=Math.atan2(2*(a.x*a.w+a.z*a.y),f-d-e+g),this.y=Math.asin(c(2*(a.y*a.w-a.x*a.z))),this.z=Math.atan2(2*(a.x*a.y+a.z*a.w),f+d-e-g)):"YZX"===b?(this.x=Math.atan2(2*(a.x*a.w-a.z*a.y),f-d+e-g),this.y=Math.atan2(2*(a.y*a.w-a.x*a.z),f+d-e-g),this.z=Math.asin(c(2*(a.x*a.y+a.z*a.w)))):"XZY"===b&&(this.x=Math.atan2(2*(a.x*a.w+a.y*a.z),f-d+e-g),this.y=Math.atan2(2*(a.x*a.z+a.y*a.w),f+d-e-g),this.z=Math.asin(c(2*(a.z*a.w-a.x*a.y))));return this},getScaleFromMatrix:function(a){var b=this.set(a.elements[0],
a.elements[1],a.elements[2]).length(),c=this.set(a.elements[4],a.elements[5],a.elements[6]).length(),a=this.set(a.elements[8],a.elements[9],a.elements[10]).length();this.x=b;this.y=c;this.z=a;return this},equals:function(a){return a.x===this.x&&a.y===this.y&&a.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector3.__q1=new THREE.Quaternion;THREE.Vector4=function(a,b,c,d){this.x=a||0;this.y=b||0;this.z=c||0;this.w=void 0!==d?d:1};
THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(a,b,c,d){this.x=a;this.y=b;this.z=c;this.w=d;return this},setX:function(a){this.x=a;return this},setY:function(a){this.y=a;return this},setZ:function(a){this.z=a;return this},setW:function(a){this.w=a;return this},setComponent:function(a,b){switch(a){case 0:this.x=b;break;case 1:this.y=b;break;case 2:this.z=b;break;case 3:this.w=b;break;default:throw Error("index is out of range: "+a);}},getComponent:function(a){switch(a){case 0:return this.x;
case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+a);}},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=void 0!==a.w?a.w:1;return this},add:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(a,b);this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;this.w+=a;return this},
addVectors:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},sub:function(a,b){if(void 0!==b)return console.warn("DEPRECATED: Vector4's .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(a,b);this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;return this},subVectors:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},
applyMatrix4:function(a){var b=this.x,c=this.y,d=this.z,e=this.w,a=a.elements;this.x=a[0]*b+a[4]*c+a[8]*d+a[12]*e;this.y=a[1]*b+a[5]*c+a[9]*d+a[13]*e;this.z=a[2]*b+a[6]*c+a[10]*d+a[14]*e;this.w=a[3]*b+a[7]*c+a[11]*d+a[15]*e;return this},divideScalar:function(a){0!==a?(this.x/=a,this.y/=a,this.z/=a,this.w/=a):(this.z=this.y=this.x=0,this.w=1);return this},min:function(a){this.x>a.x&&(this.x=a.x);this.y>a.y&&(this.y=a.y);this.z>a.z&&(this.z=a.z);this.w>a.w&&(this.w=a.w);return this},max:function(a){this.x<
a.x&&(this.x=a.x);this.y<a.y&&(this.y=a.y);this.z<a.z&&(this.z=a.z);this.w<a.w&&(this.w=a.w);return this},clamp:function(a,b){this.x<a.x?this.x=a.x:this.x>b.x&&(this.x=b.x);this.y<a.y?this.y=a.y:this.y>b.y&&(this.y=b.y);this.z<a.z?this.z=a.z:this.z>b.z&&(this.z=b.z);this.w<a.w?this.w=a.w:this.w>b.w&&(this.w=b.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z+this.w*a.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*
this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(a){var b=this.length();0!==b&&a!==b&&this.multiplyScalar(a/b);return this},lerp:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b;return this},equals:function(a){return a.x===
this.x&&a.y===this.y&&a.z===this.z&&a.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(a){this.w=2*Math.acos(a.w);var b=Math.sqrt(1-a.w*a.w);1E-4>b?(this.x=1,this.z=this.y=0):(this.x=a.x/b,this.y=a.y/b,this.z=a.z/b);return this},setAxisAngleFromRotationMatrix:function(a){var b,c,d,a=a.elements,e=a[0];d=a[4];var g=a[8],f=a[1],i=a[5],h=a[9];c=a[2];b=a[6];var j=a[10];if(0.01>Math.abs(d-f)&&0.01>Math.abs(g-c)&&0.01>Math.abs(h-b)){if(0.1>
Math.abs(d+f)&&0.1>Math.abs(g+c)&&0.1>Math.abs(h+b)&&0.1>Math.abs(e+i+j-3))return this.set(1,0,0,0),this;a=Math.PI;e=(e+1)/2;i=(i+1)/2;j=(j+1)/2;d=(d+f)/4;g=(g+c)/4;h=(h+b)/4;e>i&&e>j?0.01>e?(b=0,d=c=0.707106781):(b=Math.sqrt(e),c=d/b,d=g/b):i>j?0.01>i?(b=0.707106781,c=0,d=0.707106781):(c=Math.sqrt(i),b=d/c,d=h/c):0.01>j?(c=b=0.707106781,d=0):(d=Math.sqrt(j),b=g/d,c=h/d);this.set(b,c,d,a);return this}a=Math.sqrt((b-h)*(b-h)+(g-c)*(g-c)+(f-d)*(f-d));0.0010>Math.abs(a)&&(a=1);this.x=(b-h)/a;this.y=
(g-c)/a;this.z=(f-d)/a;this.w=Math.acos((e+i+j-1)/2);return this}};THREE.Box2=function(a,b){this.min=void 0!==a?a:new THREE.Vector2(Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector2(-Infinity,-Infinity)};
THREE.Box2.prototype={constructor:THREE.Box2,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y)}else this.makeEmpty();return this},setFromCenterAndSize:function(a,b){var c=THREE.Box2.__v1.copy(b).multiplyScalar(0.5);this.min.copy(a).sub(c);
this.max.copy(a).add(c);return this},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(a){return(a||new THREE.Vector2).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector2).subVectors(this.max,this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);
return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y?!0:!1},getParameter:function(a){return new THREE.Vector2((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/
(this.max.y-this.min.y))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y?!1:!0},clampPoint:function(a,b){return(b||new THREE.Vector2).copy(a).clamp(this.min,this.max)},distanceToPoint:function(a){return THREE.Box2.__v1.copy(a).clamp(this.min,this.max).sub(a).length()},intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},translate:function(a){this.min.add(a);
this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box2.__v1=new THREE.Vector2;THREE.Box3=function(a,b){this.min=void 0!==a?a:new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==b?b:new THREE.Vector3(-Infinity,-Infinity,-Infinity)};
THREE.Box3.prototype={constructor:THREE.Box3,set:function(a,b){this.min.copy(a);this.max.copy(b);return this},setFromPoints:function(a){if(0<a.length){var b=a[0];this.min.copy(b);this.max.copy(b);for(var c=1,d=a.length;c<d;c++)b=a[c],b.x<this.min.x?this.min.x=b.x:b.x>this.max.x&&(this.max.x=b.x),b.y<this.min.y?this.min.y=b.y:b.y>this.max.y&&(this.max.y=b.y),b.z<this.min.z?this.min.z=b.z:b.z>this.max.z&&(this.max.z=b.z)}else this.makeEmpty();return this},setFromCenterAndSize:function(a,b){var c=THREE.Box3.__v1.copy(b).multiplyScalar(0.5);
this.min.copy(a).sub(c);this.max.copy(a).add(c);return this},copy:function(a){this.min.copy(a.min);this.max.copy(a.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(a){return(a||new THREE.Vector3).addVectors(this.min,this.max).multiplyScalar(0.5)},size:function(a){return(a||new THREE.Vector3).subVectors(this.max,
this.min)},expandByPoint:function(a){this.min.min(a);this.max.max(a);return this},expandByVector:function(a){this.min.sub(a);this.max.add(a);return this},expandByScalar:function(a){this.min.addScalar(-a);this.max.addScalar(a);return this},containsPoint:function(a){return a.x<this.min.x||a.x>this.max.x||a.y<this.min.y||a.y>this.max.y||a.z<this.min.z||a.z>this.max.z?!1:!0},containsBox:function(a){return this.min.x<=a.min.x&&a.max.x<=this.max.x&&this.min.y<=a.min.y&&a.max.y<=this.max.y&&this.min.z<=
a.min.z&&a.max.z<=this.max.z?!0:!1},getParameter:function(a){return new THREE.Vector3((a.x-this.min.x)/(this.max.x-this.min.x),(a.y-this.min.y)/(this.max.y-this.min.y),(a.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(a){return a.max.x<this.min.x||a.min.x>this.max.x||a.max.y<this.min.y||a.min.y>this.max.y||a.max.z<this.min.z||a.min.z>this.max.z?!1:!0},clampPoint:function(a,b){b||new THREE.Vector3;return(new THREE.Vector3).copy(a).clamp(this.min,this.max)},distanceToPoint:function(a){return THREE.Box3.__v1.copy(a).clamp(this.min,
this.max).sub(a).length()},getBoundingSphere:function(a){a=a||new THREE.Sphere;a.center=this.center();a.radius=0.5*this.size(THREE.Box3.__v0).length();return a},intersect:function(a){this.min.max(a.min);this.max.min(a.max);return this},union:function(a){this.min.min(a.min);this.max.max(a.max);return this},transform:function(a){a=[THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z).applyMatrix4(a),THREE.Box3.__v1.set(this.min.x,
this.min.y,this.max.z).applyMatrix4(a),THREE.Box3.__v2.set(this.min.x,this.max.y,this.min.z).applyMatrix4(a),THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z).applyMatrix4(a),THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z).applyMatrix4(a),THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z).applyMatrix4(a),THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z).applyMatrix4(a),THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z).applyMatrix4(a)];this.makeEmpty();this.setFromPoints(a);return this},
translate:function(a){this.min.add(a);this.max.add(a);return this},equals:function(a){return a.min.equals(this.min)&&a.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Box3.__v0=new THREE.Vector3;THREE.Box3.__v1=new THREE.Vector3;THREE.Box3.__v2=new THREE.Vector3;THREE.Box3.__v3=new THREE.Vector3;THREE.Box3.__v4=new THREE.Vector3;THREE.Box3.__v5=new THREE.Vector3;THREE.Box3.__v6=new THREE.Vector3;THREE.Box3.__v7=new THREE.Vector3;THREE.Matrix3=function(a,b,c,d,e,g,f,i,h){this.elements=new Float32Array(9);this.set(void 0!==a?a:1,b||0,c||0,d||0,void 0!==e?e:1,g||0,f||0,i||0,void 0!==h?h:1)};
THREE.Matrix3.prototype={constructor:THREE.Matrix3,set:function(a,b,c,d,e,g,f,i,h){var j=this.elements;j[0]=a;j[3]=b;j[6]=c;j[1]=d;j[4]=e;j[7]=g;j[2]=f;j[5]=i;j[8]=h;return this},identity:function(){this.set(1,0,0,0,1,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8]);return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix3's .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.");return a.applyMatrix3(this)},
multiplyVector3Array:function(a){for(var b=THREE.Matrix3.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],b.applyMatrix3(this),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[3]*=a;b[6]*=a;b[1]*=a;b[4]*=a;b[7]*=a;b[2]*=a;b[5]*=a;b[8]*=a;return this},determinant:function(){var a=this.elements,b=a[0],c=a[1],d=a[2],e=a[3],g=a[4],f=a[5],i=a[6],h=a[7],a=a[8];return b*g*a-b*f*h-c*e*a+c*f*i+d*e*h-d*g*i},getInverse:function(a,b){var c=a.elements,
d=this.elements;d[0]=c[10]*c[5]-c[6]*c[9];d[1]=-c[10]*c[1]+c[2]*c[9];d[2]=c[6]*c[1]-c[2]*c[5];d[3]=-c[10]*c[4]+c[6]*c[8];d[4]=c[10]*c[0]-c[2]*c[8];d[5]=-c[6]*c[0]+c[2]*c[4];d[6]=c[9]*c[4]-c[5]*c[8];d[7]=-c[9]*c[0]+c[1]*c[8];d[8]=c[5]*c[0]-c[1]*c[4];c=c[0]*d[0]+c[1]*d[3]+c[2]*d[6];if(0===c){if(b)throw Error("Matrix3.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix3.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},
transpose:function(){var a,b=this.elements;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this},transposeIntoArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[3];a[2]=b[6];a[3]=b[1];a[4]=b[4];a[5]=b[7];a[6]=b[2];a[7]=b[5];a[8]=b[8];return this},clone:function(){var a=this.elements;return new THREE.Matrix3(a[0],a[3],a[6],a[1],a[4],a[7],a[2],a[5],a[8])}};THREE.Matrix3.__v1=new THREE.Vector3;THREE.Matrix4=function(a,b,c,d,e,g,f,i,h,j,k,m,l,q,p,r){this.elements=new Float32Array(16);this.set(void 0!==a?a:1,b||0,c||0,d||0,e||0,void 0!==g?g:1,f||0,i||0,h||0,j||0,void 0!==k?k:1,m||0,l||0,q||0,p||0,void 0!==r?r:1)};
THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(a,b,c,d,e,g,f,i,h,j,k,m,l,q,p,r){var s=this.elements;s[0]=a;s[4]=b;s[8]=c;s[12]=d;s[1]=e;s[5]=g;s[9]=f;s[13]=i;s[2]=h;s[6]=j;s[10]=k;s[14]=m;s[3]=l;s[7]=q;s[11]=p;s[15]=r;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(a){a=a.elements;this.set(a[0],a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15]);return this},setRotationFromEuler:function(a,b){var c=
this.elements,d=a.x,e=a.y,g=a.z,f=Math.cos(d),d=Math.sin(d),i=Math.cos(e),e=Math.sin(e),h=Math.cos(g),g=Math.sin(g);if(void 0===b||"XYZ"===b){var j=f*h,k=f*g,m=d*h,l=d*g;c[0]=i*h;c[4]=-i*g;c[8]=e;c[1]=k+m*e;c[5]=j-l*e;c[9]=-d*i;c[2]=l-j*e;c[6]=m+k*e;c[10]=f*i}else"YXZ"===b?(j=i*h,k=i*g,m=e*h,l=e*g,c[0]=j+l*d,c[4]=m*d-k,c[8]=f*e,c[1]=f*g,c[5]=f*h,c[9]=-d,c[2]=k*d-m,c[6]=l+j*d,c[10]=f*i):"ZXY"===b?(j=i*h,k=i*g,m=e*h,l=e*g,c[0]=j-l*d,c[4]=-f*g,c[8]=m+k*d,c[1]=k+m*d,c[5]=f*h,c[9]=l-j*d,c[2]=-f*e,c[6]=
d,c[10]=f*i):"ZYX"===b?(j=f*h,k=f*g,m=d*h,l=d*g,c[0]=i*h,c[4]=m*e-k,c[8]=j*e+l,c[1]=i*g,c[5]=l*e+j,c[9]=k*e-m,c[2]=-e,c[6]=d*i,c[10]=f*i):"YZX"===b?(j=f*i,k=f*e,m=d*i,l=d*e,c[0]=i*h,c[4]=l-j*g,c[8]=m*g+k,c[1]=g,c[5]=f*h,c[9]=-d*h,c[2]=-e*h,c[6]=k*g+m,c[10]=j-l*g):"XZY"===b&&(j=f*i,k=f*e,m=d*i,l=d*e,c[0]=i*h,c[4]=-g,c[8]=e*h,c[1]=j*g+l,c[5]=f*h,c[9]=k*g-m,c[2]=m*g-k,c[6]=d*h,c[10]=l*g+j);return this},setRotationFromQuaternion:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z,g=a.w,f=c+c,i=d+d,h=e+
e,a=c*f,j=c*i,c=c*h,k=d*i,d=d*h,e=e*h,f=g*f,i=g*i,g=g*h;b[0]=1-(k+e);b[4]=j-g;b[8]=c+i;b[1]=j+g;b[5]=1-(a+e);b[9]=d-f;b[2]=c-i;b[6]=d+f;b[10]=1-(a+k);return this},lookAt:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,g=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;f.subVectors(a,b).normalize();0===f.length()&&(f.z=1);e.crossVectors(c,f).normalize();0===e.length()&&(f.x+=1E-4,e.crossVectors(c,f).normalize());g.crossVectors(f,e);d[0]=e.x;d[4]=g.x;d[8]=f.x;d[1]=e.y;d[5]=g.y;d[9]=f.y;d[2]=e.z;d[6]=
g.z;d[10]=f.z;return this},multiply:function(a,b){return void 0!==b?(console.warn("DEPRECATED: Matrix4's .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(a,b)):this.multiplyMatrices(this,a)},multiplyMatrices:function(a,b){var c=a.elements,d=b.elements,e=this.elements,g=c[0],f=c[4],i=c[8],h=c[12],j=c[1],k=c[5],m=c[9],l=c[13],q=c[2],p=c[6],r=c[10],s=c[14],t=c[3],x=c[7],v=c[11],c=c[15],w=d[0],y=d[4],D=d[8],C=d[12],u=d[1],E=d[5],z=d[9],H=d[13],
O=d[2],F=d[6],R=d[10],I=d[14],K=d[3],L=d[7],S=d[11],d=d[15];e[0]=g*w+f*u+i*O+h*K;e[4]=g*y+f*E+i*F+h*L;e[8]=g*D+f*z+i*R+h*S;e[12]=g*C+f*H+i*I+h*d;e[1]=j*w+k*u+m*O+l*K;e[5]=j*y+k*E+m*F+l*L;e[9]=j*D+k*z+m*R+l*S;e[13]=j*C+k*H+m*I+l*d;e[2]=q*w+p*u+r*O+s*K;e[6]=q*y+p*E+r*F+s*L;e[10]=q*D+p*z+r*R+s*S;e[14]=q*C+p*H+r*I+s*d;e[3]=t*w+x*u+v*O+c*K;e[7]=t*y+x*E+v*F+c*L;e[11]=t*D+x*z+v*R+c*S;e[15]=t*C+x*H+v*I+c*d;return this},multiplyToArray:function(a,b,c){var d=this.elements;this.multiplyMatrices(a,b);c[0]=d[0];
c[1]=d[1];c[2]=d[2];c[3]=d[3];c[4]=d[4];c[5]=d[5];c[6]=d[6];c[7]=d[7];c[8]=d[8];c[9]=d[9];c[10]=d[10];c[11]=d[11];c[12]=d[12];c[13]=d[13];c[14]=d[14];c[15]=d[15];return this},multiplyScalar:function(a){var b=this.elements;b[0]*=a;b[4]*=a;b[8]*=a;b[12]*=a;b[1]*=a;b[5]*=a;b[9]*=a;b[13]*=a;b[2]*=a;b[6]*=a;b[10]*=a;b[14]*=a;b[3]*=a;b[7]*=a;b[11]*=a;b[15]*=a;return this},multiplyVector3:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.");
return a.applyProjection(this)},multiplyVector4:function(a){console.warn("DEPRECATED: Matrix4's .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.");return a.applyMatrix4(this)},multiplyVector3Array:function(a){for(var b=THREE.Matrix4.__v1,c=0,d=a.length;c<d;c+=3)b.x=a[c],b.y=a[c+1],b.z=a[c+2],b.applyProjection(this),a[c]=b.x,a[c+1]=b.y,a[c+2]=b.z;return a},rotateAxis:function(a){var b=this.elements,c=a.x,d=a.y,e=a.z;a.x=c*b[0]+d*b[4]+e*b[8];a.y=c*b[1]+d*b[5]+e*b[9];a.z=
c*b[2]+d*b[6]+e*b[10];a.normalize();return a},crossVector:function(a){var b=this.elements,c=new THREE.Vector4;c.x=b[0]*a.x+b[4]*a.y+b[8]*a.z+b[12]*a.w;c.y=b[1]*a.x+b[5]*a.y+b[9]*a.z+b[13]*a.w;c.z=b[2]*a.x+b[6]*a.y+b[10]*a.z+b[14]*a.w;c.w=a.w?b[3]*a.x+b[7]*a.y+b[11]*a.z+b[15]*a.w:1;return c},determinant:function(){var a=this.elements,b=a[0],c=a[4],d=a[8],e=a[12],g=a[1],f=a[5],i=a[9],h=a[13],j=a[2],k=a[6],m=a[10],l=a[14];return a[3]*(+e*i*k-d*h*k-e*f*m+c*h*m+d*f*l-c*i*l)+a[7]*(+b*i*l-b*h*m+e*g*m-d*
g*l+d*h*j-e*i*j)+a[11]*(+b*h*k-b*f*l-e*g*k+c*g*l+e*f*j-c*h*j)+a[15]*(-d*f*j-b*i*k+b*f*m+d*g*k-c*g*m+c*i*j)},transpose:function(){var a=this.elements,b;b=a[1];a[1]=a[4];a[4]=b;b=a[2];a[2]=a[8];a[8]=b;b=a[6];a[6]=a[9];a[9]=b;b=a[3];a[3]=a[12];a[12]=b;b=a[7];a[7]=a[13];a[13]=b;b=a[11];a[11]=a[14];a[14]=b;return this},flattenToArray:function(a){var b=this.elements;a[0]=b[0];a[1]=b[1];a[2]=b[2];a[3]=b[3];a[4]=b[4];a[5]=b[5];a[6]=b[6];a[7]=b[7];a[8]=b[8];a[9]=b[9];a[10]=b[10];a[11]=b[11];a[12]=b[12];a[13]=
b[13];a[14]=b[14];a[15]=b[15];return a},flattenToArrayOffset:function(a,b){var c=this.elements;a[b]=c[0];a[b+1]=c[1];a[b+2]=c[2];a[b+3]=c[3];a[b+4]=c[4];a[b+5]=c[5];a[b+6]=c[6];a[b+7]=c[7];a[b+8]=c[8];a[b+9]=c[9];a[b+10]=c[10];a[b+11]=c[11];a[b+12]=c[12];a[b+13]=c[13];a[b+14]=c[14];a[b+15]=c[15];return a},getPosition:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[12],a[13],a[14])},setPosition:function(a){var b=this.elements;b[12]=a.x;b[13]=a.y;b[14]=a.z;return this},getColumnX:function(){var a=
this.elements;return THREE.Matrix4.__v1.set(a[0],a[1],a[2])},getColumnY:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[4],a[5],a[6])},getColumnZ:function(){var a=this.elements;return THREE.Matrix4.__v1.set(a[8],a[9],a[10])},getInverse:function(a,b){var c=this.elements,d=a.elements,e=d[0],g=d[4],f=d[8],i=d[12],h=d[1],j=d[5],k=d[9],m=d[13],l=d[2],q=d[6],p=d[10],r=d[14],s=d[3],t=d[7],x=d[11],v=d[15];c[0]=k*r*t-m*p*t+m*q*x-j*r*x-k*q*v+j*p*v;c[4]=i*p*t-f*r*t-i*q*x+g*r*x+f*q*v-g*p*v;c[8]=
f*m*t-i*k*t+i*j*x-g*m*x-f*j*v+g*k*v;c[12]=i*k*q-f*m*q-i*j*p+g*m*p+f*j*r-g*k*r;c[1]=m*p*s-k*r*s-m*l*x+h*r*x+k*l*v-h*p*v;c[5]=f*r*s-i*p*s+i*l*x-e*r*x-f*l*v+e*p*v;c[9]=i*k*s-f*m*s-i*h*x+e*m*x+f*h*v-e*k*v;c[13]=f*m*l-i*k*l+i*h*p-e*m*p-f*h*r+e*k*r;c[2]=j*r*s-m*q*s+m*l*t-h*r*t-j*l*v+h*q*v;c[6]=i*q*s-g*r*s-i*l*t+e*r*t+g*l*v-e*q*v;c[10]=g*m*s-i*j*s+i*h*t-e*m*t-g*h*v+e*j*v;c[14]=i*j*l-g*m*l-i*h*q+e*m*q+g*h*r-e*j*r;c[3]=k*q*s-j*p*s-k*l*t+h*p*t+j*l*x-h*q*x;c[7]=g*p*s-f*q*s+f*l*t-e*p*t-g*l*x+e*q*x;c[11]=f*j*
s-g*k*s-f*h*t+e*k*t+g*h*x-e*j*x;c[15]=g*k*l-f*j*l+f*h*q-e*k*q-g*h*p+e*j*p;c=d[0]*c[0]+d[1]*c[4]+d[2]*c[8]+d[3]*c[12];if(0==c){if(b)throw Error("Matrix4.getInverse(): can't invert matrix, determinant is 0");console.warn("Matrix4.getInverse(): can't invert matrix, determinant is 0");this.identity();return this}this.multiplyScalar(1/c);return this},compose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__m1,g=THREE.Matrix4.__m2;e.identity();e.setRotationFromQuaternion(b);g.makeScale(c.x,c.y,c.z);
this.multiplyMatrices(e,g);d[12]=a.x;d[13]=a.y;d[14]=a.z;return this},decompose:function(a,b,c){var d=this.elements,e=THREE.Matrix4.__v1,g=THREE.Matrix4.__v2,f=THREE.Matrix4.__v3;e.set(d[0],d[1],d[2]);g.set(d[4],d[5],d[6]);f.set(d[8],d[9],d[10]);a=a instanceof THREE.Vector3?a:new THREE.Vector3;b=b instanceof THREE.Quaternion?b:new THREE.Quaternion;c=c instanceof THREE.Vector3?c:new THREE.Vector3;c.x=e.length();c.y=g.length();c.z=f.length();a.x=d[12];a.y=d[13];a.z=d[14];d=THREE.Matrix4.__m1;d.copy(this);
d.elements[0]/=c.x;d.elements[1]/=c.x;d.elements[2]/=c.x;d.elements[4]/=c.y;d.elements[5]/=c.y;d.elements[6]/=c.y;d.elements[8]/=c.z;d.elements[9]/=c.z;d.elements[10]/=c.z;b.setFromRotationMatrix(d);return[a,b,c]},extractPosition:function(a){var b=this.elements,a=a.elements;b[12]=a[12];b[13]=a[13];b[14]=a[14];return this},extractRotation:function(a){var b=this.elements,a=a.elements,c=THREE.Matrix4.__v1,d=1/c.set(a[0],a[1],a[2]).length(),e=1/c.set(a[4],a[5],a[6]).length(),c=1/c.set(a[8],a[9],a[10]).length();
b[0]=a[0]*d;b[1]=a[1]*d;b[2]=a[2]*d;b[4]=a[4]*e;b[5]=a[5]*e;b[6]=a[6]*e;b[8]=a[8]*c;b[9]=a[9]*c;b[10]=a[10]*c;return this},translate:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[12]=b[0]*c+b[4]*d+b[8]*a+b[12];b[13]=b[1]*c+b[5]*d+b[9]*a+b[13];b[14]=b[2]*c+b[6]*d+b[10]*a+b[14];b[15]=b[3]*c+b[7]*d+b[11]*a+b[15];return this},rotateX:function(a){var b=this.elements,c=b[4],d=b[5],e=b[6],g=b[7],f=b[8],i=b[9],h=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);b[4]=k*c+a*f;b[5]=k*d+a*i;b[6]=k*e+a*h;b[7]=k*
g+a*j;b[8]=k*f-a*c;b[9]=k*i-a*d;b[10]=k*h-a*e;b[11]=k*j-a*g;return this},rotateY:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],g=b[3],f=b[8],i=b[9],h=b[10],j=b[11],k=Math.cos(a),a=Math.sin(a);b[0]=k*c-a*f;b[1]=k*d-a*i;b[2]=k*e-a*h;b[3]=k*g-a*j;b[8]=k*f+a*c;b[9]=k*i+a*d;b[10]=k*h+a*e;b[11]=k*j+a*g;return this},rotateZ:function(a){var b=this.elements,c=b[0],d=b[1],e=b[2],g=b[3],f=b[4],i=b[5],h=b[6],j=b[7],k=Math.cos(a),a=Math.sin(a);b[0]=k*c+a*f;b[1]=k*d+a*i;b[2]=k*e+a*h;b[3]=k*g+a*j;b[4]=k*
f-a*c;b[5]=k*i-a*d;b[6]=k*h-a*e;b[7]=k*j-a*g;return this},rotateByAxis:function(a,b){var c=this.elements;if(1===a.x&&0===a.y&&0===a.z)return this.rotateX(b);if(0===a.x&&1===a.y&&0===a.z)return this.rotateY(b);if(0===a.x&&0===a.y&&1===a.z)return this.rotateZ(b);var d=a.x,e=a.y,g=a.z,f=Math.sqrt(d*d+e*e+g*g),d=d/f,e=e/f,g=g/f,f=d*d,i=e*e,h=g*g,j=Math.cos(b),k=Math.sin(b),m=1-j,l=d*e*m,q=d*g*m,m=e*g*m,d=d*k,p=e*k,k=g*k,g=f+(1-f)*j,f=l+k,e=q-p,l=l-k,i=i+(1-i)*j,k=m+d,q=q+p,m=m-d,h=h+(1-h)*j,j=c[0],d=
c[1],p=c[2],r=c[3],s=c[4],t=c[5],x=c[6],v=c[7],w=c[8],y=c[9],D=c[10],C=c[11];c[0]=g*j+f*s+e*w;c[1]=g*d+f*t+e*y;c[2]=g*p+f*x+e*D;c[3]=g*r+f*v+e*C;c[4]=l*j+i*s+k*w;c[5]=l*d+i*t+k*y;c[6]=l*p+i*x+k*D;c[7]=l*r+i*v+k*C;c[8]=q*j+m*s+h*w;c[9]=q*d+m*t+h*y;c[10]=q*p+m*x+h*D;c[11]=q*r+m*v+h*C;return this},scale:function(a){var b=this.elements,c=a.x,d=a.y,a=a.z;b[0]*=c;b[4]*=d;b[8]*=a;b[1]*=c;b[5]*=d;b[9]*=a;b[2]*=c;b[6]*=d;b[10]*=a;b[3]*=c;b[7]*=d;b[11]*=a;return this},getMaxScaleOnAxis:function(){var a=this.elements;
return Math.sqrt(Math.max(a[0]*a[0]+a[1]*a[1]+a[2]*a[2],Math.max(a[4]*a[4]+a[5]*a[5]+a[6]*a[6],a[8]*a[8]+a[9]*a[9]+a[10]*a[10])))},makeTranslation:function(a,b,c){this.set(1,0,0,a,0,1,0,b,0,0,1,c,0,0,0,1);return this},makeRotationX:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},makeRotationY:function(a){var b=Math.cos(a),a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},makeRotationZ:function(a){var b=Math.cos(a),a=Math.sin(a);
this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(a,b){var c=Math.cos(b),d=Math.sin(b),e=1-c,g=a.x,f=a.y,i=a.z,h=e*g,j=e*f;this.set(h*g+c,h*f-d*i,h*i+d*f,0,h*f+d*i,j*f+c,j*i-d*g,0,h*i-d*f,j*i+d*g,e*i*i+c,0,0,0,0,1);return this},makeScale:function(a,b,c){this.set(a,0,0,0,0,b,0,0,0,0,c,0,0,0,0,1);return this},makeFrustum:function(a,b,c,d,e,g){var f=this.elements;f[0]=2*e/(b-a);f[4]=0;f[8]=(b+a)/(b-a);f[12]=0;f[1]=0;f[5]=2*e/(d-c);f[9]=(d+c)/(d-c);f[13]=0;f[2]=0;f[6]=
0;f[10]=-(g+e)/(g-e);f[14]=-2*g*e/(g-e);f[3]=0;f[7]=0;f[11]=-1;f[15]=0;return this},makePerspective:function(a,b,c,d){var a=c*Math.tan(THREE.Math.degToRad(0.5*a)),e=-a;return this.makeFrustum(e*b,a*b,e,a,c,d)},makeOrthographic:function(a,b,c,d,e,g){var f=this.elements,i=b-a,h=c-d,j=g-e;f[0]=2/i;f[4]=0;f[8]=0;f[12]=-((b+a)/i);f[1]=0;f[5]=2/h;f[9]=0;f[13]=-((c+d)/h);f[2]=0;f[6]=0;f[10]=-2/j;f[14]=-((g+e)/j);f[3]=0;f[7]=0;f[11]=0;f[15]=1;return this},clone:function(){var a=this.elements;return new THREE.Matrix4(a[0],
a[4],a[8],a[12],a[1],a[5],a[9],a[13],a[2],a[6],a[10],a[14],a[3],a[7],a[11],a[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;THREE.Ray=function(a,b){this.origin=void 0!==a?a:new THREE.Vector3;this.direction=void 0!==b?b:new THREE.Vector3};
THREE.Ray.prototype={constructor:THREE.Ray,set:function(a,b){this.origin.copy(a);this.direction.copy(b);return this},copy:function(a){this.origin.copy(a.origin);this.direction.copy(a.direction);return this},at:function(a,b){return(b||new THREE.Vector3).copy(this.direction).multiplyScalar(a).add(this.origin)},recast:function(a){this.origin.copy(this.at(a,THREE.Ray.__v1));return this},closestPointToPoint:function(a,b){var c=b||new THREE.Vector3;c.subVectors(a,this.origin);var d=c.dot(this.direction);
return c.copy(this.direction).multiplyScalar(d).add(this.origin)},distanceToPoint:function(a){var b=THREE.Ray.__v1.subVectors(a,this.origin).dot(this.direction);THREE.Ray.__v1.copy(this.direction).multiplyScalar(b).add(this.origin);return THREE.Ray.__v1.distanceTo(a)},isIntersectionSphere:function(a){return this.distanceToPoint(a.center)<=a.radius},isIntersectionPlane:function(a){return 0!=a.normal.dot(this.direction)||0==a.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(a){var b=a.normal.dot(this.direction);
if(0==b){if(0==a.distanceToPoint(this.origin))return 0}else return-(this.origin.dot(a.normal)+a.constant)/b},intersectPlane:function(a,b){var c=this.distanceToPlane(a);return void 0===c?void 0:this.at(c,b)},transform:function(a){this.direction.add(this.origin).applyMatrix4(a);this.origin.applyMatrix4(a);this.direction.sub(this.origin);return this},equals:function(a){return a.origin.equals(this.origin)&&a.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};
THREE.Ray.__v1=new THREE.Vector3;THREE.Ray.__v2=new THREE.Vector3;THREE.Sphere=function(a,b){this.center=void 0!==a?a:new THREE.Vector3;this.radius=void 0!==b?b:0};
THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(a,b){this.center.copy(a);this.radius=b;return this},setFromCenterAndPoints:function(a,b){for(var c=0,d=0,e=b.length;d<e;d++)var g=a.distanceToSquared(b[d]),c=Math.max(c,g);this.center=a;this.radius=Math.sqrt(c);return this},copy:function(a){this.center.copy(a.center);this.radius=a.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(a){return a.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(a){return a.distanceTo(this.center)-
this.radius},intersectsSphere:function(a){var b=this.radius+a.radius;return a.center.distanceToSquared(this.center)<=b*b},clampPoint:function(a,b){var c=this.center.distanceToSquared(a),d=b||new THREE.Vector3;d.copy(a);c>this.radius*this.radius&&(d.sub(this.center).normalize(),d.multiplyScalar(this.radius).add(this.center));return d},getBoundingBox:function(a){a=a||new THREE.Box3;a.set(this.center,this.center);a.expandByScalar(this.radius);return a},transform:function(a){this.center.applyMatrix4(a);
this.radius*=a.getMaxScaleOnAxis();return this},translate:function(a){this.center.add(a);return this},equals:function(a){return a.center.equals(this.center)&&a.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Frustum=function(a,b,c,d,e,g){this.planes=[void 0!==a?a:new THREE.Plane,void 0!==b?b:new THREE.Plane,void 0!==c?c:new THREE.Plane,void 0!==d?d:new THREE.Plane,void 0!==e?e:new THREE.Plane,void 0!==g?g:new THREE.Plane]};
THREE.Frustum.prototype={set:function(a,b,c,d,e,g){var f=this.planes;f[0].copy(a);f[1].copy(b);f[2].copy(c);f[3].copy(d);f[4].copy(e);f[5].copy(g);return this},copy:function(a){for(var b=this.planes,c=0;6>c;c++)b[c].copy(a.planes[c]);return this},setFromMatrix:function(a){var b=this.planes,c=a.elements,a=c[0],d=c[1],e=c[2],g=c[3],f=c[4],i=c[5],h=c[6],j=c[7],k=c[8],m=c[9],l=c[10],q=c[11],p=c[12],r=c[13],s=c[14],c=c[15];b[0].setComponents(g-a,j-f,q-k,c-p).normalize();b[1].setComponents(g+a,j+f,q+k,
c+p).normalize();b[2].setComponents(g+d,j+i,q+m,c+r).normalize();b[3].setComponents(g-d,j-i,q-m,c-r).normalize();b[4].setComponents(g-e,j-h,q-l,c-s).normalize();b[5].setComponents(g+e,j+h,q+l,c+s).normalize();return this},intersectsObject:function(a){for(var b=a.matrixWorld,c=this.planes,d=b.getPosition(),a=-a.geometry.boundingSphere.radius*b.getMaxScaleOnAxis(),b=0;6>b;b++)if(c[b].distanceToPoint(d)<a)return!1;return!0},intersectsSphere:function(a){for(var b=this.planes,c=a.center,a=-a.radius,d=
0;6>d;d++)if(b[d].distanceToPoint(c)<a)return!1;return!0},containsPoint:function(a){for(var b=this.planes,c=0;6>c;c++)if(0>b[c].distanceToPoint(a))return!1;return!0},clone:function(){return(new THREE.Frustum).copy(this)}};THREE.Plane=function(a,b){this.normal=void 0!==a?a:new THREE.Vector3(1,0,0);this.constant=void 0!==b?b:0};
THREE.Plane.prototype={constructor:THREE.Plane,set:function(a,b){this.normal.copy(a);this.constant=b;return this},setComponents:function(a,b,c,d){this.normal.set(a,b,c);this.constant=d;return this},setFromNormalAndCoplanarPoint:function(a,b){this.normal.copy(a);this.constant=-b.dot(this.normal);return this},setFromCoplanarPoints:function(a,b,c){b=THREE.Plane.__v1.subVectors(c,b).cross(THREE.Plane.__v2.subVectors(a,b)).normalize();this.setFromNormalAndCoplanarPoint(b,a);return this},copy:function(a){this.normal.copy(a.normal);
this.constant=a.constant;return this},normalize:function(){var a=1/this.normal.length();this.normal.multiplyScalar(a);this.constant*=a;return this},negate:function(){this.constant*=-1;this.normal.negate();return this},distanceToPoint:function(a){return this.normal.dot(a)+this.constant},distanceToSphere:function(a){return this.distanceToPoint(a.center)-a.radius},projectPoint:function(a,b){return this.orthoPoint(a,b).sub(a).negate()},orthoPoint:function(a,b){var c=this.distanceToPoint(a);return(b||
new THREE.Vector3).copy(this.normal).multiplyScalar(c)},isIntersectionLine:function(a,b){var c=this.distanceToPoint(a),d=this.distanceToPoint(b);return 0>c&&0<d||0>d&&0<c},intersectLine:function(a,b,c){var c=c||new THREE.Vector3,b=THREE.Plane.__v1.subVectors(b,a),d=this.normal.dot(b);if(0==d){if(0==this.distanceToPoint(a))return c.copy(a)}else return d=-(a.dot(this.normal)+this.constant)/d,0>d||1<d?void 0:c.copy(b).multiplyScalar(d).add(a)},coplanarPoint:function(a){return(a||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},
transform:function(a,b){var b=b||(new THREE.Matrix3).getInverse(a).transpose(),c=THREE.Plane.__v1.copy(this.normal).applyMatrix3(b),d=this.coplanarPoint(THREE.Plane.__v2);d.applyMatrix4(a);this.setFromNormalAndCoplanarPoint(c,d);return this},translate:function(a){this.constant-=a.dot(this.normal);return this},equals:function(a){return a.normal.equals(this.normal)&&a.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Plane.__vZero=new THREE.Vector3(0,0,0);
THREE.Plane.__v1=new THREE.Vector3;THREE.Plane.__v2=new THREE.Vector3;THREE.Math={clamp:function(a,b,c){return a<b?b:a>c?c:a},clampBottom:function(a,b){return a<b?b:a},mapLinear:function(a,b,c,d,e){return d+(a-b)*(e-d)/(c-b)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(a,b){return a+Math.floor(Math.random()*(b-a+1))},randFloat:function(a,b){return a+Math.random()*(b-a)},randFloatSpread:function(a){return a*(0.5-Math.random())},sign:function(a){return 0>a?-1:0<a?1:0},degToRad:function(a){return a*THREE.Math.__d2r},radToDeg:function(a){return a*
THREE.Math.__r2d}};THREE.Math.__d2r=Math.PI/180;THREE.Math.__r2d=180/Math.PI;THREE.Spline=function(a){function b(a,b,c,d,e,f,g){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*g+(-3*(b-c)-2*a-d)*f+a*e+b}this.points=a;var c=[],d={x:0,y:0,z:0},e,g,f,i,h,j,k,m,l;this.initFromArray=function(a){this.points=[];for(var b=0;b<a.length;b++)this.points[b]={x:a[b][0],y:a[b][1],z:a[b][2]}};this.getPoint=function(a){e=(this.points.length-1)*a;g=Math.floor(e);f=e-g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>this.points.length-2?this.points.length-1:g+1;c[3]=g>this.points.length-3?this.points.length-1:
g+2;j=this.points[c[0]];k=this.points[c[1]];m=this.points[c[2]];l=this.points[c[3]];i=f*f;h=f*i;d.x=b(j.x,k.x,m.x,l.x,f,i,h);d.y=b(j.y,k.y,m.y,l.y,f,i,h);d.z=b(j.z,k.z,m.z,l.z,f,i,h);return d};this.getControlPointsArray=function(){var a,b,c=this.points.length,d=[];for(a=0;a<c;a++)b=this.points[a],d[a]=[b.x,b.y,b.z];return d};this.getLength=function(a){var b,c,d,e=b=b=0,f=new THREE.Vector3,g=new THREE.Vector3,i=[],h=0;i[0]=0;a||(a=100);c=this.points.length*a;f.copy(this.points[0]);for(a=1;a<c;a++)b=
a/c,d=this.getPoint(b),g.copy(d),h+=g.distanceTo(f),f.copy(d),b*=this.points.length-1,b=Math.floor(b),b!=e&&(i[b]=h,e=b);i[i.length]=h;return{chunks:i,total:h}};this.reparametrizeByArcLength=function(a){var b,c,d,e,f,g,i=[],h=new THREE.Vector3,j=this.getLength();i.push(h.copy(this.points[0]).clone());for(b=1;b<this.points.length;b++){c=j.chunks[b]-j.chunks[b-1];g=Math.ceil(a*c/j.total);e=(b-1)/(this.points.length-1);f=b/(this.points.length-1);for(c=1;c<g-1;c++)d=e+c*(1/g)*(f-e),d=this.getPoint(d),
i.push(h.copy(d).clone());i.push(h.copy(this.points[b]).clone())}this.points=i}};THREE.Triangle=function(a,b,c){this.a=void 0!==a?a:new THREE.Vector3;this.b=void 0!==b?b:new THREE.Vector3;this.c=void 0!==c?c:new THREE.Vector3};THREE.Triangle.normal=function(a,b,c,d){d=d||new THREE.Vector3;d.subVectors(c,b);THREE.Triangle.__v0.subVectors(a,b);d.cross(THREE.Triangle.__v0);a=d.lengthSq();return 0<a?d.multiplyScalar(1/Math.sqrt(a)):d.set(0,0,0)};
THREE.Triangle.barycoordFromPoint=function(a,b,c,d,e){THREE.Triangle.__v0.subVectors(d,b);THREE.Triangle.__v1.subVectors(c,b);THREE.Triangle.__v2.subVectors(a,b);var a=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),b=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),c=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),g=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),d=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),f=a*g-b*b,e=e||new THREE.Vector3;if(0==f)return e.set(-2,-1,-1);f=1/f;g=(g*c-b*d)*f;a=(a*d-b*c)*f;return e.set(1-
g-a,a,g)};THREE.Triangle.containsPoint=function(a,b,c,d){a=THREE.Triangle.barycoordFromPoint(a,b,c,d,THREE.Triangle.__v3);return 0<=a.x&&0<=a.y&&1>=a.x+a.y};
THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(a,b,c){this.a.copy(a);this.b.copy(b);this.c.copy(c);return this},setFromPointsAndIndices:function(a,b,c,d){this.a.copy(a[b]);this.b.copy(a[c]);this.c.copy(a[d]);return this},copy:function(a){this.a.copy(a.a);this.b.copy(a.b);this.c.copy(a.c);return this},area:function(){THREE.Triangle.__v0.subVectors(this.c,this.b);THREE.Triangle.__v1.subVectors(this.a,this.b);return 0.5*THREE.Triangle.__v0.cross(THREE.Triangle.__v1).length()},midpoint:function(a){return(a||
new THREE.Vector3).addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(a){return THREE.Triangle.normal(this.a,this.b,this.c,a)},plane:function(a){return(a||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(a,b){return THREE.Triangle.barycoordFromPoint(a,this.a,this.b,this.c,b)},containsPoint:function(a){return THREE.Triangle.containsPoint(a,this.a,this.b,this.c)},equals:function(a){return a.a.equals(this.a)&&a.b.equals(this.b)&&a.c.equals(this.c)},
clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Triangle.__v0=new THREE.Vector3;THREE.Triangle.__v1=new THREE.Vector3;THREE.Triangle.__v2=new THREE.Vector3;THREE.Triangle.__v3=new THREE.Vector3;THREE.Vertex=function(a){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return a};THREE.UV=function(a,b){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(a,b)};THREE.Clock=function(a){this.autoStart=void 0!==a?a:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};
THREE.Clock.prototype.getDelta=function(){var a=0;this.autoStart&&!this.running&&this.start();if(this.running){var b=Date.now(),a=0.0010*(b-this.oldTime);this.oldTime=b;this.elapsedTime+=a}return a};THREE.EventDispatcher=function(){var a={};this.addEventListener=function(b,c){void 0===a[b]&&(a[b]=[]);-1===a[b].indexOf(c)&&a[b].push(c)};this.removeEventListener=function(b,c){var d=a[b].indexOf(c);-1!==d&&a[b].splice(d,1)};this.dispatchEvent=function(b){var c=a[b.type];if(void 0!==c){b.target=this;for(var d=0,e=c.length;d<e;d++)c[d].call(this,b)}}};(function(a){a.Raycaster=function(b,c,d,e){this.ray=new a.Ray(b,c);0<this.ray.direction.length()&&this.ray.direction.normalize();this.near=d||0;this.far=e||Infinity};var b=new a.Sphere,c=new a.Ray,d=new a.Plane,e=new a.Vector3,g=new a.Matrix4,f=function(a,b){return a.distance-b.distance},i=function(f,i,h){if(f instanceof a.Particle){i=i.ray.distanceToPoint(f.matrixWorld.getPosition());if(i>f.scale.x)return h;h.push({distance:i,point:f.position,face:null,object:f})}else if(f instanceof a.Mesh){b.set(f.matrixWorld.getPosition(),
f.geometry.boundingSphere.radius*f.matrixWorld.getMaxScaleOnAxis());if(!i.ray.isIntersectionSphere(b))return h;var l=f.geometry,q=l.vertices,p=f.material instanceof a.MeshFaceMaterial,r=!0===p?f.material.materials:null,s=f.material.side,t,x,v,w=i.precision;f.matrixRotationWorld.extractRotation(f.matrixWorld);g.getInverse(f.matrixWorld);c.copy(i.ray).transform(g);for(var y=0,D=l.faces.length;y<D;y++){var C=l.faces[y],s=!0===p?r[C.materialIndex]:f.material;if(void 0!==s){d.setFromNormalAndCoplanarPoint(C.normal,
q[C.a]);var u=c.distanceToPlane(d);if(!(Math.abs(u)<w)&&!(0>u)){s=s.side;if(s!==a.DoubleSide&&(t=c.direction.dot(d.normal),!(s===a.FrontSide?0>t:0<t)))continue;if(!(u<i.near||u>i.far)){e=c.at(u,e);if(C instanceof a.Face3){if(s=q[C.a],t=q[C.b],x=q[C.c],!a.Triangle.containsPoint(e,s,t,x))continue}else if(C instanceof a.Face4){if(s=q[C.a],t=q[C.b],x=q[C.c],v=q[C.d],!a.Triangle.containsPoint(e,s,t,v)&&!a.Triangle.containsPoint(e,t,x,v))continue}else throw Error("face type not supported");h.push({distance:u,
point:i.ray.at(u),face:C,faceIndex:y,object:f})}}}}}},h=function(a,b,c){for(var a=a.getDescendants(),d=0,e=a.length;d<e;d++)i(a[d],b,c)};a.Raycaster.prototype.precision=1E-4;a.Raycaster.prototype.set=function(a,b){this.ray.set(a,b);0<this.ray.direction.length()&&this.ray.direction.normalize()};a.Raycaster.prototype.intersectObject=function(a,b){var c=[];!0===b&&h(a,this,c);i(a,this,c);c.sort(f);return c};a.Raycaster.prototype.intersectObjects=function(a,b){for(var c=[],d=0,e=a.length;d<e;d++)i(a[d],
this,c),!0===b&&h(a[d],this,c);c.sort(f);return c}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=
!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};
THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(a){this.matrix.multiplyMatrices(a,this.matrix);this.scale.getScaleFromMatrix(this.matrix);a=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(a,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(a,b){this.matrix.rotateAxis(b);this.position.add(b.multiplyScalar(a))},translateX:function(a){this.translate(a,this._vector.set(1,0,0))},translateY:function(a){this.translate(a,
this._vector.set(0,1,0))},translateZ:function(a){this.translate(a,this._vector.set(0,0,1))},localToWorld:function(a){return a.applyMatrix4(this.matrixWorld)},worldToLocal:function(a){return a.applyMatrix4(THREE.Object3D.__m1.getInverse(this.matrixWorld))},lookAt:function(a){this.matrix.lookAt(a,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(a){if(a===
this)console.warn("THREE.Object3D.add: An object can't be added as a child of itself.");else if(a instanceof THREE.Object3D){void 0!==a.parent&&a.parent.remove(a);a.parent=this;this.children.push(a);for(var b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__addObject(a)}},remove:function(a){var b=this.children.indexOf(a);if(-1!==b){a.parent=void 0;this.children.splice(b,1);for(b=this;void 0!==b.parent;)b=b.parent;void 0!==b&&b instanceof THREE.Scene&&b.__removeObject(a)}},
traverse:function(a){a(this);for(var b=0,c=this.children.length;b<c;b++)this.children[b].traverse(a)},getChildByName:function(a,b){for(var c=0,d=this.children.length;c<d;c++){var e=this.children[c];if(e.name===a||!0===b&&(e=e.getChildByName(a,b),void 0!==e))return e}},getDescendants:function(a){void 0===a&&(a=[]);Array.prototype.push.apply(a,this.children);for(var b=0,c=this.children.length;b<c;b++)this.children[b].getDescendants(a);return a},updateMatrix:function(){this.matrix.setPosition(this.position);
!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(a){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===a)void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)},clone:function(a){void 0===a&&(a=new THREE.Object3D);a.name=this.name;a.up.copy(this.up);a.position.copy(this.position);a.rotation instanceof THREE.Vector3&&a.rotation.copy(this.rotation);a.eulerOrder=this.eulerOrder;a.scale.copy(this.scale);a.renderDepth=this.renderDepth;a.rotationAutoUpdate=this.rotationAutoUpdate;a.matrix.copy(this.matrix);a.matrixWorld.copy(this.matrixWorld);a.matrixRotationWorld.copy(this.matrixRotationWorld);
a.matrixAutoUpdate=this.matrixAutoUpdate;a.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;a.quaternion.copy(this.quaternion);a.useQuaternion=this.useQuaternion;a.visible=this.visible;a.castShadow=this.castShadow;a.receiveShadow=this.receiveShadow;a.frustumCulled=this.frustumCulled;for(var b=0;b<this.children.length;b++)a.add(this.children[b].clone());return a}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Projector=function(){function a(){if(g===i){var a=new THREE.RenderableObject;f.push(a);i++;g++;return a}return f[g++]}function b(){if(j===m){var a=new THREE.RenderableVertex;k.push(a);m++;j++;return a}return k[j++]}function c(a,b){return b.z-a.z}function d(a,b){var c=0,d=1,e=a.z+a.w,f=b.z+b.w,g=-a.z+a.w,i=-b.z+b.w;if(0<=e&&0<=f&&0<=g&&0<=i)return!0;if(0>e&&0>f||0>g&&0>i)return!1;0>e?c=Math.max(c,e/(e-f)):0>f&&(d=Math.min(d,e/(e-f)));0>g?c=Math.max(c,g/(g-i)):0>i&&(d=Math.min(d,g/(g-i)));if(d<
c)return!1;a.lerp(b,c);b.lerp(a,1-d);return!0}var e,g,f=[],i=0,h,j,k=[],m=0,l,q,p=[],r=0,s,t=[],x=0,v,w,y=[],D=0,C,u,E=[],z=0,H={objects:[],sprites:[],lights:[],elements:[]},O=new THREE.Vector3,F=new THREE.Vector4,R=new THREE.Box3(new THREE.Vector3(-1,-1,-1),new THREE.Vector3(1,1,1)),I=new THREE.Box3,K=Array(3),L=Array(4),S=new THREE.Matrix4,ca=new THREE.Matrix4,Y,N=new THREE.Matrix4,G=new THREE.Matrix3,ha=new THREE.Matrix3,la=new THREE.Vector3,wa=new THREE.Frustum,M=new THREE.Vector4,ia=new THREE.Vector4;
this.projectVector=function(a,b){b.matrixWorldInverse.getInverse(b.matrixWorld);ca.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);return a.applyProjection(ca)};this.unprojectVector=function(a,b){b.projectionMatrixInverse.getInverse(b.projectionMatrix);ca.multiplyMatrices(b.matrixWorld,b.projectionMatrixInverse);return a.applyProjection(ca)};this.pickingRay=function(a,b){a.z=-1;var c=new THREE.Vector3(a.x,a.y,1);this.unprojectVector(a,b);this.unprojectVector(c,b);c.sub(a).normalize();return new THREE.Raycaster(a,
c)};this.projectScene=function(f,i,m,Fa){var ba=!1,xa,Ba,Ia,P,pa,na,ka,ra,Va,Qa,qa,eb,fb;u=w=s=q=0;H.elements.length=0;f.updateMatrixWorld();void 0===i.parent&&i.updateMatrixWorld();S.copy(i.matrixWorldInverse.getInverse(i.matrixWorld));ca.multiplyMatrices(i.projectionMatrix,S);ha.getInverse(S);ha.transpose();wa.setFromMatrix(ca);g=0;H.objects.length=0;H.sprites.length=0;H.lights.length=0;var xb=function(b){for(var c=0,d=b.children.length;c<d;c++){var f=b.children[c];if(!1!==f.visible){if(f instanceof
THREE.Light)H.lights.push(f);else if(f instanceof THREE.Mesh||f instanceof THREE.Line){if(!1===f.frustumCulled||!0===wa.intersectsObject(f))e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(O.copy(f.matrixWorld.getPosition()),O.applyProjection(ca),e.z=O.z),H.objects.push(e)}else f instanceof THREE.Sprite||f instanceof THREE.Particle?(e=a(),e.object=f,null!==f.renderDepth?e.z=f.renderDepth:(O.copy(f.matrixWorld.getPosition()),O.applyProjection(ca),e.z=O.z),H.sprites.push(e)):(e=a(),e.object=
f,null!==f.renderDepth?e.z=f.renderDepth:(O.copy(f.matrixWorld.getPosition()),O.applyProjection(ca),e.z=O.z),H.objects.push(e));xb(f)}}};xb(f);!0===m&&H.objects.sort(c);f=0;for(m=H.objects.length;f<m;f++)if(ra=H.objects[f].object,Y=ra.matrixWorld,j=0,ra instanceof THREE.Mesh){Va=ra.geometry;Ia=Va.vertices;Qa=Va.faces;Va=Va.faceVertexUvs;G.getInverse(Y);G.transpose();eb=ra.material instanceof THREE.MeshFaceMaterial;fb=!0===eb?ra.material:null;xa=0;for(Ba=Ia.length;xa<Ba;xa++)h=b(),h.positionWorld.copy(Ia[xa]).applyMatrix4(Y),
h.positionScreen.copy(h.positionWorld).applyMatrix4(ca),h.positionScreen.x/=h.positionScreen.w,h.positionScreen.y/=h.positionScreen.w,h.positionScreen.z/=h.positionScreen.w,h.visible=!(-1>h.positionScreen.x||1<h.positionScreen.x||-1>h.positionScreen.y||1<h.positionScreen.y||-1>h.positionScreen.z||1<h.positionScreen.z);Ia=0;for(xa=Qa.length;Ia<xa;Ia++){Ba=Qa[Ia];var Ma=!0===eb?fb.materials[Ba.materialIndex]:ra.material;if(void 0!==Ma){na=Ma.side;if(Ba instanceof THREE.Face3)if(P=k[Ba.a],pa=k[Ba.b],
ka=k[Ba.c],K[0]=P.positionScreen,K[1]=pa.positionScreen,K[2]=ka.positionScreen,!0===P.visible||!0===pa.visible||!0===ka.visible||R.isIntersectionBox(I.setFromPoints(K)))if(ba=0>(ka.positionScreen.x-P.positionScreen.x)*(pa.positionScreen.y-P.positionScreen.y)-(ka.positionScreen.y-P.positionScreen.y)*(pa.positionScreen.x-P.positionScreen.x),na===THREE.DoubleSide||ba===(na===THREE.FrontSide))q===r?(qa=new THREE.RenderableFace3,p.push(qa),r++,q++,l=qa):l=p[q++],l.v1.copy(P),l.v2.copy(pa),l.v3.copy(ka);
else continue;else continue;else if(Ba instanceof THREE.Face4)if(P=k[Ba.a],pa=k[Ba.b],ka=k[Ba.c],qa=k[Ba.d],L[0]=P.positionScreen,L[1]=pa.positionScreen,L[2]=ka.positionScreen,L[3]=qa.positionScreen,!0===P.visible||!0===pa.visible||!0===ka.visible||!0===qa.visible||R.isIntersectionBox(I.setFromPoints(L)))if(ba=0>(qa.positionScreen.x-P.positionScreen.x)*(pa.positionScreen.y-P.positionScreen.y)-(qa.positionScreen.y-P.positionScreen.y)*(pa.positionScreen.x-P.positionScreen.x)||0>(pa.positionScreen.x-
ka.positionScreen.x)*(qa.positionScreen.y-ka.positionScreen.y)-(pa.positionScreen.y-ka.positionScreen.y)*(qa.positionScreen.x-ka.positionScreen.x),na===THREE.DoubleSide||ba===(na===THREE.FrontSide)){if(s===x){var sa=new THREE.RenderableFace4;t.push(sa);x++;s++;l=sa}else l=t[s++];l.v1.copy(P);l.v2.copy(pa);l.v3.copy(ka);l.v4.copy(qa)}else continue;else continue;l.normalModel.copy(Ba.normal);!1===ba&&(na===THREE.BackSide||na===THREE.DoubleSide)&&l.normalModel.negate();l.normalModel.applyMatrix3(G).normalize();
l.normalModelView.copy(l.normalModel).applyMatrix3(ha);l.centroidModel.copy(Ba.centroid).applyMatrix4(Y);ka=Ba.vertexNormals;P=0;for(pa=ka.length;P<pa;P++)qa=l.vertexNormalsModel[P],qa.copy(ka[P]),!1===ba&&(na===THREE.BackSide||na===THREE.DoubleSide)&&qa.negate(),qa.applyMatrix3(G).normalize(),l.vertexNormalsModelView[P].copy(qa).applyMatrix3(ha);l.vertexNormalsLength=ka.length;P=0;for(pa=Va.length;P<pa;P++)if(qa=Va[P][Ia],void 0!==qa){na=0;for(ka=qa.length;na<ka;na++)l.uvs[P][na]=qa[na]}l.color=
Ba.color;l.material=Ma;la.copy(l.centroidModel).applyProjection(ca);l.z=la.z;H.elements.push(l)}}}else if(ra instanceof THREE.Line){N.multiplyMatrices(ca,Y);Ia=ra.geometry.vertices;P=b();P.positionScreen.copy(Ia[0]).applyMatrix4(N);Qa=ra.type===THREE.LinePieces?2:1;xa=1;for(Ba=Ia.length;xa<Ba;xa++)P=b(),P.positionScreen.copy(Ia[xa]).applyMatrix4(N),0<(xa+1)%Qa||(pa=k[j-2],M.copy(P.positionScreen),ia.copy(pa.positionScreen),!0===d(M,ia)&&(M.multiplyScalar(1/M.w),ia.multiplyScalar(1/ia.w),w===D?(Va=
new THREE.RenderableLine,y.push(Va),D++,w++,v=Va):v=y[w++],v.v1.positionScreen.copy(M),v.v2.positionScreen.copy(ia),v.z=Math.max(M.z,ia.z),v.material=ra.material,H.elements.push(v)))}f=0;for(m=H.sprites.length;f<m;f++)ra=H.sprites[f].object,Y=ra.matrixWorld,ra instanceof THREE.Particle&&(F.set(Y.elements[12],Y.elements[13],Y.elements[14],1),F.applyMatrix4(ca),F.z/=F.w,0<F.z&&1>F.z&&(u===z?(ba=new THREE.RenderableParticle,E.push(ba),z++,u++,C=ba):C=E[u++],C.object=ra,C.x=F.x/F.w,C.y=F.y/F.w,C.z=F.z,
C.rotation=ra.rotation.z,C.scale.x=ra.scale.x*Math.abs(C.x-(F.x+i.projectionMatrix.elements[0])/(F.w+i.projectionMatrix.elements[12])),C.scale.y=ra.scale.y*Math.abs(C.y-(F.y+i.projectionMatrix.elements[5])/(F.w+i.projectionMatrix.elements[13])),C.material=ra.material,H.elements.push(C)));!0===Fa&&H.elements.sort(c);return H}};THREE.Face3=function(a,b,c,d,e,g){this.a=a;this.b=b;this.c=c;this.normal=d instanceof THREE.Vector3?d:new THREE.Vector3;this.vertexNormals=d instanceof Array?d:[];this.color=e instanceof THREE.Color?e:new THREE.Color;this.vertexColors=e instanceof Array?e:[];this.vertexTangents=[];this.materialIndex=void 0!==g?g:0;this.centroid=new THREE.Vector3};
THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var a=new THREE.Face3(this.a,this.b,this.c);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Face4=function(a,b,c,d,e,g,f){this.a=a;this.b=b;this.c=c;this.d=d;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.color=g instanceof THREE.Color?g:new THREE.Color;this.vertexColors=g instanceof Array?g:[];this.vertexTangents=[];this.materialIndex=void 0!==f?f:0;this.centroid=new THREE.Vector3};
THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var a=new THREE.Face4(this.a,this.b,this.c,this.d);a.normal.copy(this.normal);a.color.copy(this.color);a.centroid.copy(this.centroid);a.materialIndex=this.materialIndex;var b,c;b=0;for(c=this.vertexNormals.length;b<c;b++)a.vertexNormals[b]=this.vertexNormals[b].clone();b=0;for(c=this.vertexColors.length;b<c;b++)a.vertexColors[b]=this.vertexColors[b].clone();b=0;for(c=this.vertexTangents.length;b<c;b++)a.vertexTangents[b]=this.vertexTangents[b].clone();
return a}};THREE.Geometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=
this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};
THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(a){for(var b=(new THREE.Matrix3).getInverse(a).transpose(),c=0,d=this.vertices.length;c<d;c++)this.vertices[c].applyMatrix4(a);c=0;for(d=this.faces.length;c<d;c++){var e=this.faces[c];e.normal.applyMatrix3(b).normalize();for(var g=0,f=e.vertexNormals.length;g<f;g++)e.vertexNormals[g].applyMatrix3(b).normalize();e.centroid.applyMatrix4(a)}},computeCentroids:function(){var a,b,c;a=0;for(b=this.faces.length;a<b;a++)c=this.faces[a],
c.centroid.set(0,0,0),c instanceof THREE.Face3?(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.divideScalar(3)):c instanceof THREE.Face4&&(c.centroid.add(this.vertices[c.a]),c.centroid.add(this.vertices[c.b]),c.centroid.add(this.vertices[c.c]),c.centroid.add(this.vertices[c.d]),c.centroid.divideScalar(4))},computeFaceNormals:function(){var a,b,c,d,e,g,f=new THREE.Vector3,i=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++)c=
this.faces[a],d=this.vertices[c.a],e=this.vertices[c.b],g=this.vertices[c.c],f.subVectors(g,e),i.subVectors(d,e),f.cross(i),f.normalize(),c.normal.copy(f)},computeVertexNormals:function(a){var b,c,d,e;if(void 0===this.__tmpVertices){e=this.__tmpVertices=Array(this.vertices.length);b=0;for(c=this.vertices.length;b<c;b++)e[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:d instanceof
THREE.Face4&&(d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}else{e=this.__tmpVertices;b=0;for(c=this.vertices.length;b<c;b++)e[b].set(0,0,0)}if(a){var g,f,i,h=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3,l=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(a=this.vertices[d.a],g=this.vertices[d.b],f=this.vertices[d.c],h.subVectors(f,g),j.subVectors(a,g),h.cross(j),e[d.a].add(h),
e[d.b].add(h),e[d.c].add(h)):d instanceof THREE.Face4&&(a=this.vertices[d.a],g=this.vertices[d.b],f=this.vertices[d.c],i=this.vertices[d.d],k.subVectors(i,g),j.subVectors(a,g),k.cross(j),e[d.a].add(k),e[d.b].add(k),e[d.d].add(k),m.subVectors(i,f),l.subVectors(g,f),m.cross(l),e[d.b].add(m),e[d.c].add(m),e[d.d].add(m))}else{b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(e[d.a].add(d.normal),e[d.b].add(d.normal),e[d.c].add(d.normal)):d instanceof THREE.Face4&&(e[d.a].add(d.normal),
e[d.b].add(d.normal),e[d.c].add(d.normal),e[d.d].add(d.normal))}b=0;for(c=this.vertices.length;b<c;b++)e[b].normalize();b=0;for(c=this.faces.length;b<c;b++)d=this.faces[b],d instanceof THREE.Face3?(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c])):d instanceof THREE.Face4&&(d.vertexNormals[0].copy(e[d.a]),d.vertexNormals[1].copy(e[d.b]),d.vertexNormals[2].copy(e[d.c]),d.vertexNormals[3].copy(e[d.d]))},computeMorphNormals:function(){var a,b,c,d,e;c=0;
for(d=this.faces.length;c<d;c++){e=this.faces[c];e.__originalFaceNormal?e.__originalFaceNormal.copy(e.normal):e.__originalFaceNormal=e.normal.clone();e.__originalVertexNormals||(e.__originalVertexNormals=[]);a=0;for(b=e.vertexNormals.length;a<b;a++)e.__originalVertexNormals[a]?e.__originalVertexNormals[a].copy(e.vertexNormals[a]):e.__originalVertexNormals[a]=e.vertexNormals[a].clone()}var g=new THREE.Geometry;g.faces=this.faces;a=0;for(b=this.morphTargets.length;a<b;a++){if(!this.morphNormals[a]){this.morphNormals[a]=
{};this.morphNormals[a].faceNormals=[];this.morphNormals[a].vertexNormals=[];var f=this.morphNormals[a].faceNormals,i=this.morphNormals[a].vertexNormals,h,j;c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=new THREE.Vector3,j=e instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},f.push(h),i.push(j)}f=this.morphNormals[a];g.vertices=this.morphTargets[a].vertices;g.computeFaceNormals();
g.computeVertexNormals();c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],h=f.faceNormals[c],j=f.vertexNormals[c],h.copy(e.normal),e instanceof THREE.Face3?(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2])):(j.a.copy(e.vertexNormals[0]),j.b.copy(e.vertexNormals[1]),j.c.copy(e.vertexNormals[2]),j.d.copy(e.vertexNormals[3]))}c=0;for(d=this.faces.length;c<d;c++)e=this.faces[c],e.normal=e.__originalFaceNormal,e.vertexNormals=e.__originalVertexNormals},computeTangents:function(){function a(a,
b,c,d,e,g,u){i=a.vertices[b];h=a.vertices[c];j=a.vertices[d];k=f[e];m=f[g];l=f[u];q=h.x-i.x;p=j.x-i.x;r=h.y-i.y;s=j.y-i.y;t=h.z-i.z;x=j.z-i.z;v=m.x-k.x;w=l.x-k.x;y=m.y-k.y;D=l.y-k.y;C=1/(v*D-w*y);H.set((D*q-y*p)*C,(D*r-y*s)*C,(D*t-y*x)*C);O.set((v*p-w*q)*C,(v*s-w*r)*C,(v*x-w*t)*C);E[b].add(H);E[c].add(H);E[d].add(H);z[b].add(O);z[c].add(O);z[d].add(O)}var b,c,d,e,g,f,i,h,j,k,m,l,q,p,r,s,t,x,v,w,y,D,C,u,E=[],z=[],H=new THREE.Vector3,O=new THREE.Vector3,F=new THREE.Vector3,R=new THREE.Vector3,I=new THREE.Vector3;
b=0;for(c=this.vertices.length;b<c;b++)E[b]=new THREE.Vector3,z[b]=new THREE.Vector3;b=0;for(c=this.faces.length;b<c;b++)g=this.faces[b],f=this.faceVertexUvs[0][b],g instanceof THREE.Face3?a(this,g.a,g.b,g.c,0,1,2):g instanceof THREE.Face4&&(a(this,g.a,g.b,g.d,0,1,3),a(this,g.b,g.c,g.d,1,2,3));var K=["a","b","c","d"];b=0;for(c=this.faces.length;b<c;b++){g=this.faces[b];for(d=0;d<g.vertexNormals.length;d++)I.copy(g.vertexNormals[d]),e=g[K[d]],u=E[e],F.copy(u),F.sub(I.multiplyScalar(I.dot(u))).normalize(),
R.crossVectors(g.vertexNormals[d],u),e=R.dot(z[e]),e=0>e?-1:1,g.vertexTangents[d]=new THREE.Vector4(F.x,F.y,F.z,e)}this.hasTangents=!0},computeLineDistances:function(){for(var a=0,b=this.vertices,c=0,d=b.length;c<d;c++)0<c&&(a+=b[c].distanceTo(b[c-1])),this.lineDistances[c]=a},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);
this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var a={},b=[],c=[],d,e=Math.pow(10,4),g,f,i,h,j;this.__tmpVertices=void 0;g=0;for(f=this.vertices.length;g<f;g++)d=this.vertices[g],d=[Math.round(d.x*e),Math.round(d.y*e),Math.round(d.z*e)].join("_"),void 0===a[d]?(a[d]=g,b.push(this.vertices[g]),c[g]=b.length-1):c[g]=c[a[d]];e=[];g=0;for(f=this.faces.length;g<f;g++)if(a=this.faces[g],a instanceof THREE.Face3){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];
i=[a.a,a.b,a.c];d=-1;for(h=0;3>h;h++)if(i[h]==i[(h+1)%3]){e.push(g);break}}else if(a instanceof THREE.Face4){a.a=c[a.a];a.b=c[a.b];a.c=c[a.c];a.d=c[a.d];i=[a.a,a.b,a.c,a.d];d=-1;for(h=0;4>h;h++)i[h]==i[(h+1)%4]&&(0<=d&&e.push(g),d=h);if(0<=d){i.splice(d,1);var k=new THREE.Face3(i[0],i[1],i[2],a.normal,a.color,a.materialIndex);i=0;for(h=this.faceVertexUvs.length;i<h;i++)(j=this.faceVertexUvs[i][g])&&j.splice(d,1);a.vertexNormals&&0<a.vertexNormals.length&&(k.vertexNormals=a.vertexNormals,k.vertexNormals.splice(d,
1));a.vertexColors&&0<a.vertexColors.length&&(k.vertexColors=a.vertexColors,k.vertexColors.splice(d,1));this.faces[g]=k}}for(g=e.length-1;0<=g;g--){this.faces.splice(g,1);i=0;for(h=this.faceVertexUvs.length;i<h;i++)this.faceVertexUvs[i].splice(g,1)}c=this.vertices.length-b.length;this.vertices=b;return c},clone:function(){for(var a=new THREE.Geometry,b=this.vertices,c=0,d=b.length;c<d;c++)a.vertices.push(b[c].clone());b=this.faces;c=0;for(d=b.length;c<d;c++)a.faces.push(b[c].clone());b=this.faceVertexUvs[0];
c=0;for(d=b.length;c<d;c++){for(var e=b[c],g=[],f=0,i=e.length;f<i;f++)g.push(new THREE.Vector2(e[f].x,e[f].y));a.faceVertexUvs[0].push(g)}return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};
THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(a){var b,c;this.attributes.position&&(b=this.attributes.position.array);this.attributes.normal&&(c=this.attributes.normal.array);void 0!==b&&(a.multiplyVector3Array(b),this.verticesNeedUpdate=!0);void 0!==c&&(b=new THREE.Matrix3,b.getInverse(a).transpose(),b.multiplyVector3Array(c),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);
var a=this.attributes.position.array;if(a){var b=this.boundingBox,c,d,e;3<=a.length&&(b.min.x=b.max.x=a[0],b.min.y=b.max.y=a[1],b.min.z=b.max.z=a[2]);for(var g=3,f=a.length;g<f;g+=3)c=a[g],d=a[g+1],e=a[g+2],c<b.min.x?b.min.x=c:c>b.max.x&&(b.max.x=c),d<b.min.y?b.min.y=d:d>b.max.y&&(b.max.y=d),e<b.min.z?b.min.z=e:e>b.max.z&&(b.max.z=e)}if(void 0===a||0===a.length)this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=
new THREE.Sphere);var a=this.attributes.position.array;if(a){for(var b,c=0,d,e,g=0,f=a.length;g<f;g+=3)b=a[g],d=a[g+1],e=a[g+2],b=b*b+d*d+e*e,b>c&&(c=b);this.boundingSphere.radius=Math.sqrt(c)}},computeVertexNormals:function(){if(this.attributes.position){var a,b,c,d;a=this.attributes.position.array.length;if(void 0===this.attributes.normal)this.attributes.normal={itemSize:3,array:new Float32Array(a),numItems:a};else{a=0;for(b=this.attributes.normal.array.length;a<b;a++)this.attributes.normal.array[a]=
0}var e=this.attributes.position.array,g=this.attributes.normal.array,f,i,h,j,k,m,l=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector3,r=new THREE.Vector3,s=new THREE.Vector3;if(this.attributes.index){var t=this.attributes.index.array,x=this.offsets;c=0;for(d=x.length;c<d;++c){b=x[c].start;f=x[c].count;var v=x[c].index;a=b;for(b+=f;a<b;a+=3)f=v+t[a],i=v+t[a+1],h=v+t[a+2],j=e[3*f],k=e[3*f+1],m=e[3*f+2],l.set(j,k,m),j=e[3*i],k=e[3*i+1],m=e[3*i+2],q.set(j,k,m),j=e[3*h],k=e[3*h+1],m=e[3*h+2],p.set(j,
k,m),r.subVectors(p,q),s.subVectors(l,q),r.cross(s),g[3*f]+=r.x,g[3*f+1]+=r.y,g[3*f+2]+=r.z,g[3*i]+=r.x,g[3*i+1]+=r.y,g[3*i+2]+=r.z,g[3*h]+=r.x,g[3*h+1]+=r.y,g[3*h+2]+=r.z}}else{a=0;for(b=e.length;a<b;a+=9)j=e[a],k=e[a+1],m=e[a+2],l.set(j,k,m),j=e[a+3],k=e[a+4],m=e[a+5],q.set(j,k,m),j=e[a+6],k=e[a+7],m=e[a+8],p.set(j,k,m),r.subVectors(p,q),s.subVectors(l,q),r.cross(s),g[a]=r.x,g[a+1]=r.y,g[a+2]=r.z,g[a+3]=r.x,g[a+4]=r.y,g[a+5]=r.z,g[a+6]=r.x,g[a+7]=r.y,g[a+8]=r.z}this.normalizeNormals();this.normalsNeedUpdate=
!0}},normalizeNormals:function(){for(var a=this.attributes.normal.array,b,c,d,e=0,g=a.length;e<g;e+=3)b=a[e],c=a[e+1],d=a[e+2],b=1/Math.sqrt(b*b+c*c+d*d),a[e]*=b,a[e+1]*=b,a[e+2]*=b},computeTangents:function(){function a(a){Y.x=d[3*a];Y.y=d[3*a+1];Y.z=d[3*a+2];N.copy(Y);ha=h[a];S.copy(ha);S.sub(Y.multiplyScalar(Y.dot(ha))).normalize();ca.crossVectors(N,ha);la=ca.dot(j[a]);G=0>la?-1:1;i[4*a]=S.x;i[4*a+1]=S.y;i[4*a+2]=S.z;i[4*a+3]=G}if(void 0===this.attributes.index||void 0===this.attributes.position||
void 0===this.attributes.normal||void 0===this.attributes.uv)console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");else{var b=this.attributes.index.array,c=this.attributes.position.array,d=this.attributes.normal.array,e=this.attributes.uv.array,g=c.length/3;if(void 0===this.attributes.tangent){var f=4*g;this.attributes.tangent={itemSize:4,array:new Float32Array(f),numItems:f}}for(var i=this.attributes.tangent.array,h=[],j=[],f=0;f<g;f++)h[f]=
new THREE.Vector3,j[f]=new THREE.Vector3;var k,m,l,q,p,r,s,t,x,v,w,y,D,C,u,g=new THREE.Vector3,f=new THREE.Vector3,E,z,H,O,F,R,I,K=this.offsets;H=0;for(O=K.length;H<O;++H){z=K[H].start;F=K[H].count;var L=K[H].index;E=z;for(z+=F;E<z;E+=3)F=L+b[E],R=L+b[E+1],I=L+b[E+2],k=c[3*F],m=c[3*F+1],l=c[3*F+2],q=c[3*R],p=c[3*R+1],r=c[3*R+2],s=c[3*I],t=c[3*I+1],x=c[3*I+2],v=e[2*F],w=e[2*F+1],y=e[2*R],D=e[2*R+1],C=e[2*I],u=e[2*I+1],q-=k,k=s-k,p-=m,m=t-m,r-=l,l=x-l,y-=v,v=C-v,D-=w,w=u-w,u=1/(y*w-v*D),g.set((w*q-
D*k)*u,(w*p-D*m)*u,(w*r-D*l)*u),f.set((y*k-v*q)*u,(y*m-v*p)*u,(y*l-v*r)*u),h[F].add(g),h[R].add(g),h[I].add(g),j[F].add(f),j[R].add(f),j[I].add(f)}var S=new THREE.Vector3,ca=new THREE.Vector3,Y=new THREE.Vector3,N=new THREE.Vector3,G,ha,la;H=0;for(O=K.length;H<O;++H){z=K[H].start;F=K[H].count;L=K[H].index;E=z;for(z+=F;E<z;E+=3)F=L+b[E],R=L+b[E+1],I=L+b[E+2],a(F),a(R),a(I)}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(a){this.matrix.lookAt(this.position,a,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};THREE.OrthographicCamera=function(a,b,c,d,e,g){THREE.Camera.call(this);this.left=a;this.right=b;this.top=c;this.bottom=d;this.near=void 0!==e?e:0.1;this.far=void 0!==g?g:2E3;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(a,b,c,d){THREE.Camera.call(this);this.fov=void 0!==a?a:50;this.aspect=void 0!==b?b:1;this.near=void 0!==c?c:0.1;this.far=void 0!==d?d:2E3;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);this.fov=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.setViewOffset=function(a,b,c,d,e,g){this.fullWidth=a;this.fullHeight=b;this.x=c;this.y=d;this.width=e;this.height=g;this.updateProjectionMatrix()};
THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var a=this.fullWidth/this.fullHeight,b=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,c=-b,d=a*c,a=Math.abs(a*b-d),c=Math.abs(b-c);this.projectionMatrix.makeFrustum(d+this.x*a/this.fullWidth,d+(this.x+this.width)*a/this.fullWidth,b-(this.y+this.height)*c/this.fullHeight,b-this.y*c/this.fullHeight,this.near,this.far)}else this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)};THREE.Light=function(a){THREE.Object3D.call(this);this.color=new THREE.Color(a)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight=function(a,b){THREE.Light.call(this,a);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==b?b:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=
new THREE.Vector3(0,0,-1E3);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight=function(a,b,c){THREE.Light.call(this,a);this.groundColor=new THREE.Color(b);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==c?c:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(a,b,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight=function(a,b,c,d,e){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==b?b:1;this.distance=void 0!==c?c:0;this.angle=void 0!==d?d:Math.PI/2;this.exponent=void 0!==e?e:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5E3;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=
this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};
THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var a=document.createElement("div");a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="rgba(0,0,0,0.25)";a.style.color="#fff";a.style.width="120px";a.style.padding="0.5em 0.5em 0.5em 0.5em";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ",b=a.total?b+((100*a.loaded/
a.total).toFixed(0)+"%"):b+((a.loaded/1E3).toFixed(2)+" KB");this.statusDomElement.innerHTML=b},extractUrlBase:function(a){a=a.split("/");a.pop();return(1>a.length?".":a.join("/"))+"/"},initMaterials:function(a,b){for(var c=[],d=0;d<a.length;++d)c[d]=THREE.Loader.prototype.createMaterial(a[d],b);return c},needsTangents:function(a){for(var b=0,c=a.length;b<c;b++)if(a[b]instanceof THREE.ShaderMaterial)return!0;return!1},createMaterial:function(a,b){function c(a){a=Math.log(a)/Math.LN2;return Math.floor(a)==
a}function d(a){a=Math.log(a)/Math.LN2;return Math.pow(2,Math.round(a))}function e(a,e,g,i,h,j,s){var t=g.toLowerCase().endsWith(".dds"),x=b+"/"+g;if(t){var v=THREE.ImageUtils.loadCompressedTexture(x);a[e]=v}else v=document.createElement("canvas"),a[e]=new THREE.Texture(v);a[e].sourceFile=g;i&&(a[e].repeat.set(i[0],i[1]),1!==i[0]&&(a[e].wrapS=THREE.RepeatWrapping),1!==i[1]&&(a[e].wrapT=THREE.RepeatWrapping));h&&a[e].offset.set(h[0],h[1]);j&&(g={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},
void 0!==g[j[0]]&&(a[e].wrapS=g[j[0]]),void 0!==g[j[1]]&&(a[e].wrapT=g[j[1]]));s&&(a[e].anisotropy=s);if(!t){var w=a[e],a=new Image;a.onload=function(){if(!c(this.width)||!c(this.height)){var a=d(this.width),b=d(this.height);w.image.width=a;w.image.height=b;w.image.getContext("2d").drawImage(this,0,0,a,b)}else w.image=this;w.needsUpdate=!0};a.crossOrigin=f.crossOrigin;a.src=x}}function g(a){return(255*a[0]<<16)+(255*a[1]<<8)+255*a[2]}var f=this,i="MeshLambertMaterial",h={color:15658734,opacity:1,
map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(a.shading){var j=a.shading.toLowerCase();"phong"===j?i="MeshPhongMaterial":"basic"===j&&(i="MeshBasicMaterial")}void 0!==a.blending&&void 0!==THREE[a.blending]&&(h.blending=THREE[a.blending]);if(void 0!==a.transparent||1>a.opacity)h.transparent=a.transparent;void 0!==a.depthTest&&(h.depthTest=a.depthTest);void 0!==a.depthWrite&&(h.depthWrite=a.depthWrite);void 0!==a.visible&&(h.visible=a.visible);void 0!==a.flipSided&&(h.side=THREE.BackSide);
void 0!==a.doubleSided&&(h.side=THREE.DoubleSide);void 0!==a.wireframe&&(h.wireframe=a.wireframe);void 0!==a.vertexColors&&("face"===a.vertexColors?h.vertexColors=THREE.FaceColors:a.vertexColors&&(h.vertexColors=THREE.VertexColors));a.colorDiffuse?h.color=g(a.colorDiffuse):a.DbgColor&&(h.color=a.DbgColor);a.colorSpecular&&(h.specular=g(a.colorSpecular));a.colorAmbient&&(h.ambient=g(a.colorAmbient));a.transparency&&(h.opacity=a.transparency);a.specularCoef&&(h.shininess=a.specularCoef);a.mapDiffuse&&
b&&e(h,"map",a.mapDiffuse,a.mapDiffuseRepeat,a.mapDiffuseOffset,a.mapDiffuseWrap,a.mapDiffuseAnisotropy);a.mapLight&&b&&e(h,"lightMap",a.mapLight,a.mapLightRepeat,a.mapLightOffset,a.mapLightWrap,a.mapLightAnisotropy);a.mapBump&&b&&e(h,"bumpMap",a.mapBump,a.mapBumpRepeat,a.mapBumpOffset,a.mapBumpWrap,a.mapBumpAnisotropy);a.mapNormal&&b&&e(h,"normalMap",a.mapNormal,a.mapNormalRepeat,a.mapNormalOffset,a.mapNormalWrap,a.mapNormalAnisotropy);a.mapSpecular&&b&&e(h,"specularMap",a.mapSpecular,a.mapSpecularRepeat,
a.mapSpecularOffset,a.mapSpecularWrap,a.mapSpecularAnisotropy);a.mapBumpScale&&(h.bumpScale=a.mapBumpScale);a.mapNormal?(i=THREE.ShaderLib.normalmap,j=THREE.UniformsUtils.clone(i.uniforms),j.tNormal.value=h.normalMap,a.mapNormalFactor&&j.uNormalScale.value.set(a.mapNormalFactor,a.mapNormalFactor),h.map&&(j.tDiffuse.value=h.map,j.enableDiffuse.value=!0),h.specularMap&&(j.tSpecular.value=h.specularMap,j.enableSpecular.value=!0),h.lightMap&&(j.tAO.value=h.lightMap,j.enableAO.value=!0),j.uDiffuseColor.value.setHex(h.color),
j.uSpecularColor.value.setHex(h.specular),j.uAmbientColor.value.setHex(h.ambient),j.uShininess.value=h.shininess,void 0!==h.opacity&&(j.uOpacity.value=h.opacity),i=new THREE.ShaderMaterial({fragmentShader:i.fragmentShader,vertexShader:i.vertexShader,uniforms:j,lights:!0,fog:!0}),h.transparent&&(i.transparent=!0)):i=new THREE[i](h);void 0!==a.DbgName&&(i.name=a.DbgName);return i}};THREE.ImageLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(a,b){var c=this;void 0===b&&(b=new Image);b.addEventListener("load",function(){c.dispatchEvent({type:"load",content:b})},!1);b.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);c.crossOrigin&&(b.crossOrigin=c.crossOrigin);b.src=a}};THREE.JSONLoader=function(a){THREE.Loader.call(this,a);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(a,b,c){c=c&&"string"===typeof c?c:this.extractUrlBase(a);this.onLoadStart();this.loadAjaxJSON(this,a,b,c)};
THREE.JSONLoader.prototype.loadAjaxJSON=function(a,b,c,d,e){var g=new XMLHttpRequest,f=0;g.onreadystatechange=function(){if(g.readyState===g.DONE)if(200===g.status||0===g.status){if(g.responseText){var i=JSON.parse(g.responseText);a.createModel(i,c,d)}else console.warn("THREE.JSONLoader: ["+b+"] seems to be unreachable or file there is empty");a.onLoadComplete()}else console.error("THREE.JSONLoader: Couldn't load ["+b+"] ["+g.status+"]");else g.readyState===g.LOADING?e&&(0===f&&(f=g.getResponseHeader("Content-Length")),
e({total:f,loaded:g.responseText.length})):g.readyState===g.HEADERS_RECEIVED&&(f=g.getResponseHeader("Content-Length"))};g.open("GET",b,!0);g.withCredentials=this.withCredentials;g.send(null)};
THREE.JSONLoader.prototype.createModel=function(a,b,c){var d=new THREE.Geometry,e=void 0!==a.scale?1/a.scale:1,g,f,i,h,j,k,m,l,q,p,r,s,t,x,v,w=a.faces;p=a.vertices;var y=a.normals,D=a.colors,C=0;for(g=0;g<a.uvs.length;g++)a.uvs[g].length&&C++;for(g=0;g<C;g++)d.faceUvs[g]=[],d.faceVertexUvs[g]=[];h=0;for(j=p.length;h<j;)k=new THREE.Vector3,k.x=p[h++]*e,k.y=p[h++]*e,k.z=p[h++]*e,d.vertices.push(k);h=0;for(j=w.length;h<j;){p=w[h++];k=p&1;i=p&2;g=p&4;f=p&8;l=p&16;m=p&32;r=p&64;p&=128;k?(s=new THREE.Face4,
s.a=w[h++],s.b=w[h++],s.c=w[h++],s.d=w[h++],k=4):(s=new THREE.Face3,s.a=w[h++],s.b=w[h++],s.c=w[h++],k=3);i&&(i=w[h++],s.materialIndex=i);i=d.faces.length;if(g)for(g=0;g<C;g++)t=a.uvs[g],q=w[h++],v=t[2*q],q=t[2*q+1],d.faceUvs[g][i]=new THREE.Vector2(v,q);if(f)for(g=0;g<C;g++){t=a.uvs[g];x=[];for(f=0;f<k;f++)q=w[h++],v=t[2*q],q=t[2*q+1],x[f]=new THREE.Vector2(v,q);d.faceVertexUvs[g][i]=x}l&&(l=3*w[h++],f=new THREE.Vector3,f.x=y[l++],f.y=y[l++],f.z=y[l],s.normal=f);if(m)for(g=0;g<k;g++)l=3*w[h++],f=
new THREE.Vector3,f.x=y[l++],f.y=y[l++],f.z=y[l],s.vertexNormals.push(f);r&&(m=w[h++],m=new THREE.Color(D[m]),s.color=m);if(p)for(g=0;g<k;g++)m=w[h++],m=new THREE.Color(D[m]),s.vertexColors.push(m);d.faces.push(s)}if(a.skinWeights){h=0;for(j=a.skinWeights.length;h<j;h+=2)w=a.skinWeights[h],y=a.skinWeights[h+1],d.skinWeights.push(new THREE.Vector4(w,y,0,0))}if(a.skinIndices){h=0;for(j=a.skinIndices.length;h<j;h+=2)w=a.skinIndices[h],y=a.skinIndices[h+1],d.skinIndices.push(new THREE.Vector4(w,y,0,0))}d.bones=
a.bones;d.animation=a.animation;if(void 0!==a.morphTargets){h=0;for(j=a.morphTargets.length;h<j;h++){d.morphTargets[h]={};d.morphTargets[h].name=a.morphTargets[h].name;d.morphTargets[h].vertices=[];D=d.morphTargets[h].vertices;C=a.morphTargets[h].vertices;w=0;for(y=C.length;w<y;w+=3)p=new THREE.Vector3,p.x=C[w]*e,p.y=C[w+1]*e,p.z=C[w+2]*e,D.push(p)}}if(void 0!==a.morphColors){h=0;for(j=a.morphColors.length;h<j;h++){d.morphColors[h]={};d.morphColors[h].name=a.morphColors[h].name;d.morphColors[h].colors=
[];y=d.morphColors[h].colors;D=a.morphColors[h].colors;e=0;for(w=D.length;e<w;e+=3)C=new THREE.Color(16755200),C.setRGB(D[e],D[e+1],D[e+2]),y.push(C)}}d.computeCentroids();d.computeFaceNormals();a=this.initMaterials(a.materials,c);this.needsTangents(a)&&d.computeTangents();b(d,a)};THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var a=this,b=0,c=0,d=function(){b++;a.dispatchEvent({type:"progress",loaded:b,total:c});b===c&&a.dispatchEvent({type:"load"})};this.add=function(a){c++;a.addEventListener("load",d,!1)}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;
THREE.SceneLoader.prototype.load=function(a,b){var c=this,d=new XMLHttpRequest;d.onreadystatechange=function(){if(4===d.readyState)if(200===d.status||0===d.status){var e=JSON.parse(d.responseText);c.parse(e,b,a)}else console.error("THREE.SceneLoader: Couldn't load ["+a+"] ["+d.status+"]")};d.open("GET",a,!0);d.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(a,b){this.geometryHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.addHierarchyHandler=function(a,b){this.hierarchyHandlerMap[a]={loaderClass:b}};
THREE.SceneLoader.prototype.parse=function(a,b,c){function d(a,b){return"relativeToHTML"==b?a:m+"/"+a}function e(){g(u.scene,z.objects)}function g(a,b){var c,e,f,h,j,m,r;for(r in b)if(void 0===u.objects[r]){var s=b[r],y=null;if(s.type&&s.type in k.hierarchyHandlerMap){if(void 0===s.loading){e={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1};f={};for(var w in s)w in e||(f[w]=s[w]);q=u.materials[s.material];s.loading=
!0;e=k.hierarchyHandlerMap[s.type].loaderObject;e.options?e.load(d(s.url,z.urlBaseType),i(r,a,q,s)):e.load(d(s.url,z.urlBaseType),i(r,a,q,s),f)}}else if(void 0!==s.geometry){if(l=u.geometries[s.geometry]){y=!1;q=u.materials[s.material];y=q instanceof THREE.ShaderMaterial;f=s.position;h=s.rotation;j=s.scale;c=s.matrix;m=s.quaternion;s.material||(q=new THREE.MeshFaceMaterial(u.face_materials[s.geometry]));q instanceof THREE.MeshFaceMaterial&&0===q.materials.length&&(q=new THREE.MeshFaceMaterial(u.face_materials[s.geometry]));
if(q instanceof THREE.MeshFaceMaterial)for(e=0;e<q.materials.length;e++)y=y||q.materials[e]instanceof THREE.ShaderMaterial;y&&l.computeTangents();s.skin?y=new THREE.SkinnedMesh(l,q):s.morph?(y=new THREE.MorphAnimMesh(l,q),void 0!==s.duration&&(y.duration=s.duration),void 0!==s.time&&(y.time=s.time),void 0!==s.mirroredLoop&&(y.mirroredLoop=s.mirroredLoop),q.morphNormals&&l.computeMorphNormals()):y=new THREE.Mesh(l,q);y.name=r;c?(y.matrixAutoUpdate=!1,y.matrix.set(c[0],c[1],c[2],c[3],c[4],c[5],c[6],
c[7],c[8],c[9],c[10],c[11],c[12],c[13],c[14],c[15])):(y.position.set(f[0],f[1],f[2]),m?(y.quaternion.set(m[0],m[1],m[2],m[3]),y.useQuaternion=!0):y.rotation.set(h[0],h[1],h[2]),y.scale.set(j[0],j[1],j[2]));y.visible=s.visible;y.castShadow=s.castShadow;y.receiveShadow=s.receiveShadow;a.add(y);u.objects[r]=y}}else"DirectionalLight"===s.type||"PointLight"===s.type||"AmbientLight"===s.type?(x=void 0!==s.color?s.color:16777215,v=void 0!==s.intensity?s.intensity:1,"DirectionalLight"===s.type?(f=s.direction,
t=new THREE.DirectionalLight(x,v),t.position.set(f[0],f[1],f[2]),s.target&&(E.push({object:t,targetName:s.target}),t.target=null)):"PointLight"===s.type?(f=s.position,e=s.distance,t=new THREE.PointLight(x,v,e),t.position.set(f[0],f[1],f[2])):"AmbientLight"===s.type&&(t=new THREE.AmbientLight(x)),a.add(t),t.name=r,u.lights[r]=t,u.objects[r]=t):"PerspectiveCamera"===s.type||"OrthographicCamera"===s.type?("PerspectiveCamera"===s.type?p=new THREE.PerspectiveCamera(s.fov,s.aspect,s.near,s.far):"OrthographicCamera"===
s.type&&(p=new THREE.OrthographicCamera(s.left,s.right,s.top,s.bottom,s.near,s.far)),f=s.position,p.position.set(f[0],f[1],f[2]),a.add(p),p.name=r,u.cameras[r]=p,u.objects[r]=p):(f=s.position,h=s.rotation,j=s.scale,m=s.quaternion,y=new THREE.Object3D,y.name=r,y.position.set(f[0],f[1],f[2]),m?(y.quaternion.set(m[0],m[1],m[2],m[3]),y.useQuaternion=!0):y.rotation.set(h[0],h[1],h[2]),y.scale.set(j[0],j[1],j[2]),y.visible=void 0!==s.visible?s.visible:!1,a.add(y),u.objects[r]=y,u.empties[r]=y);if(y){if(void 0!==
s.properties)for(var D in s.properties)y.properties[D]=s.properties[D];if(void 0!==s.groups)for(e=0;e<s.groups.length;e++)f=s.groups[e],void 0===u.groups[f]&&(u.groups[f]=[]),u.groups[f].push(r);void 0!==s.children&&g(y,s.children)}}}function f(a){return function(b,c){u.geometries[a]=b;u.face_materials[a]=c;e();w-=1;k.onLoadComplete();j()}}function i(a,b,c,d){return function(f){var f=f.content?f.content:f.dae?f.scene:f,g=d.position,i=d.rotation,h=d.quaternion,l=d.scale;f.position.set(g[0],g[1],g[2]);
h?(f.quaternion.set(h[0],h[1],h[2],h[3]),f.useQuaternion=!0):f.rotation.set(i[0],i[1],i[2]);f.scale.set(l[0],l[1],l[2]);c&&f.traverse(function(a){a.material=c});var m=void 0!==d.visible?d.visible:!0;f.traverse(function(a){a.visible=m});b.add(f);f.name=a;u.objects[a]=f;e();w-=1;k.onLoadComplete();j()}}function h(a){return function(b,c){u.geometries[a]=b;u.face_materials[a]=c}}function j(){k.callbackProgress({totalModels:D,totalTextures:C,loadedModels:D-w,loadedTextures:C-y},u);k.onLoadProgress();if(0===
w&&0===y){for(var a=0;a<E.length;a++){var c=E[a],d=u.objects[c.targetName];d?c.object.target=d:(c.object.target=new THREE.Object3D,u.scene.add(c.object.target));c.object.target.properties.targetInverse=c.object}b(u)}}var k=this,m=THREE.Loader.prototype.extractUrlBase(c),l,q,p,r,s,t,x,v,w,y,D,C,u,E=[],z=a,H;for(H in this.geometryHandlerMap)a=this.geometryHandlerMap[H].loaderClass,this.geometryHandlerMap[H].loaderObject=new a;for(H in this.hierarchyHandlerMap)a=this.hierarchyHandlerMap[H].loaderClass,
this.hierarchyHandlerMap[H].loaderObject=new a;y=w=0;u={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{},groups:{}};if(z.transform&&(H=z.transform.position,a=z.transform.rotation,c=z.transform.scale,H&&u.scene.position.set(H[0],H[1],H[2]),a&&u.scene.rotation.set(a[0],a[1],a[2]),c&&u.scene.scale.set(c[0],c[1],c[2]),H||a||c))u.scene.updateMatrix(),u.scene.updateMatrixWorld();H=function(a){return function(){y-=a;j();k.onLoadComplete()}};
for(var O in z.fogs)a=z.fogs[O],"linear"===a.type?r=new THREE.Fog(0,a.near,a.far):"exp2"===a.type&&(r=new THREE.FogExp2(0,a.density)),a=a.color,r.color.setRGB(a[0],a[1],a[2]),u.fogs[O]=r;for(var F in z.geometries)r=z.geometries[F],r.type in this.geometryHandlerMap&&(w+=1,k.onLoadStart());for(var R in z.objects)r=z.objects[R],r.type&&r.type in this.hierarchyHandlerMap&&(w+=1,k.onLoadStart());D=w;for(F in z.geometries)if(r=z.geometries[F],"cube"===r.type)l=new THREE.CubeGeometry(r.width,r.height,r.depth,
r.widthSegments,r.heightSegments,r.depthSegments),u.geometries[F]=l;else if("plane"===r.type)l=new THREE.PlaneGeometry(r.width,r.height,r.widthSegments,r.heightSegments),u.geometries[F]=l;else if("sphere"===r.type)l=new THREE.SphereGeometry(r.radius,r.widthSegments,r.heightSegments),u.geometries[F]=l;else if("cylinder"===r.type)l=new THREE.CylinderGeometry(r.topRad,r.botRad,r.height,r.radSegs,r.heightSegs),u.geometries[F]=l;else if("torus"===r.type)l=new THREE.TorusGeometry(r.radius,r.tube,r.segmentsR,
r.segmentsT),u.geometries[F]=l;else if("icosahedron"===r.type)l=new THREE.IcosahedronGeometry(r.radius,r.subdivisions),u.geometries[F]=l;else if(r.type in this.geometryHandlerMap){R={};for(s in r)"type"!==s&&"url"!==s&&(R[s]=r[s]);this.geometryHandlerMap[r.type].loaderObject.load(d(r.url,z.urlBaseType),f(F),R)}else"embedded"===r.type&&(R=z.embeds[r.id],R.metadata=z.metadata,R&&this.geometryHandlerMap.ascii.loaderObject.createModel(R,h(F),""));for(var I in z.textures)if(F=z.textures[I],F.url instanceof
Array){y+=F.url.length;for(s=0;s<F.url.length;s++)k.onLoadStart()}else y+=1,k.onLoadStart();C=y;for(I in z.textures){F=z.textures[I];void 0!==F.mapping&&void 0!==THREE[F.mapping]&&(F.mapping=new THREE[F.mapping]);if(F.url instanceof Array){R=F.url.length;r=[];for(s=0;s<R;s++)r[s]=d(F.url[s],z.urlBaseType);s=(s=r[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(r,F.mapping,H(R)):THREE.ImageUtils.loadTextureCube(r,F.mapping,H(R))}else s=F.url.toLowerCase().endsWith(".dds"),R=d(F.url,
z.urlBaseType),r=H(1),s=s?THREE.ImageUtils.loadCompressedTexture(R,F.mapping,r):THREE.ImageUtils.loadTexture(R,F.mapping,r),void 0!==THREE[F.minFilter]&&(s.minFilter=THREE[F.minFilter]),void 0!==THREE[F.magFilter]&&(s.magFilter=THREE[F.magFilter]),F.anisotropy&&(s.anisotropy=F.anisotropy),F.repeat&&(s.repeat.set(F.repeat[0],F.repeat[1]),1!==F.repeat[0]&&(s.wrapS=THREE.RepeatWrapping),1!==F.repeat[1]&&(s.wrapT=THREE.RepeatWrapping)),F.offset&&s.offset.set(F.offset[0],F.offset[1]),F.wrap&&(R={repeat:THREE.RepeatWrapping,
mirror:THREE.MirroredRepeatWrapping},void 0!==R[F.wrap[0]]&&(s.wrapS=R[F.wrap[0]]),void 0!==R[F.wrap[1]]&&(s.wrapT=R[F.wrap[1]]));u.textures[I]=s}var K,L;for(K in z.materials){I=z.materials[K];for(L in I.parameters)"envMap"===L||"map"===L||"lightMap"===L||"bumpMap"===L?I.parameters[L]=u.textures[I.parameters[L]]:"shading"===L?I.parameters[L]="flat"===I.parameters[L]?THREE.FlatShading:THREE.SmoothShading:"side"===L?I.parameters[L]="double"==I.parameters[L]?THREE.DoubleSide:"back"==I.parameters[L]?
THREE.BackSide:THREE.FrontSide:"blending"===L?I.parameters[L]=I.parameters[L]in THREE?THREE[I.parameters[L]]:THREE.NormalBlending:"combine"===L?I.parameters[L]=I.parameters[L]in THREE?THREE[I.parameters[L]]:THREE.MultiplyOperation:"vertexColors"===L?"face"==I.parameters[L]?I.parameters[L]=THREE.FaceColors:I.parameters[L]&&(I.parameters[L]=THREE.VertexColors):"wrapRGB"===L&&(H=I.parameters[L],I.parameters[L]=new THREE.Vector3(H[0],H[1],H[2]));void 0!==I.parameters.opacity&&1>I.parameters.opacity&&
(I.parameters.transparent=!0);I.parameters.normalMap?(H=THREE.ShaderLib.normalmap,F=THREE.UniformsUtils.clone(H.uniforms),s=I.parameters.color,R=I.parameters.specular,r=I.parameters.ambient,O=I.parameters.shininess,F.tNormal.value=u.textures[I.parameters.normalMap],I.parameters.normalScale&&F.uNormalScale.value.set(I.parameters.normalScale[0],I.parameters.normalScale[1]),I.parameters.map&&(F.tDiffuse.value=I.parameters.map,F.enableDiffuse.value=!0),I.parameters.envMap&&(F.tCube.value=I.parameters.envMap,
F.enableReflection.value=!0,F.uReflectivity.value=I.parameters.reflectivity),I.parameters.lightMap&&(F.tAO.value=I.parameters.lightMap,F.enableAO.value=!0),I.parameters.specularMap&&(F.tSpecular.value=u.textures[I.parameters.specularMap],F.enableSpecular.value=!0),I.parameters.displacementMap&&(F.tDisplacement.value=u.textures[I.parameters.displacementMap],F.enableDisplacement.value=!0,F.uDisplacementBias.value=I.parameters.displacementBias,F.uDisplacementScale.value=I.parameters.displacementScale),
F.uDiffuseColor.value.setHex(s),F.uSpecularColor.value.setHex(R),F.uAmbientColor.value.setHex(r),F.uShininess.value=O,I.parameters.opacity&&(F.uOpacity.value=I.parameters.opacity),q=new THREE.ShaderMaterial({fragmentShader:H.fragmentShader,vertexShader:H.vertexShader,uniforms:F,lights:!0,fog:!0})):q=new THREE[I.type](I.parameters);u.materials[K]=q}for(K in z.materials)if(I=z.materials[K],I.parameters.materials){L=[];for(s=0;s<I.parameters.materials.length;s++)L.push(u.materials[I.parameters.materials[s]]);
u.materials[K].materials=L}e();u.cameras&&z.defaults.camera&&(u.currentCamera=u.cameras[z.defaults.camera]);u.fogs&&z.defaults.fog&&(u.scene.fog=u.fogs[z.defaults.fog]);k.callbackSync(u);j()};THREE.TextureLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(a){var b=this,c=new Image;c.addEventListener("load",function(){var a=new THREE.Texture(c);a.needsUpdate=!0;b.dispatchEvent({type:"load",content:a})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);b.crossOrigin&&(c.crossOrigin=b.crossOrigin);c.src=a}};THREE.Material=function(){THREE.EventDispatcher.call(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};
THREE.Material.prototype.setValues=function(a){if(void 0!==a)for(var b in a){var c=a[b];if(void 0===c)console.warn("THREE.Material: '"+b+"' parameter is undefined.");else if(b in this){var d=this[b];d instanceof THREE.Color&&c instanceof THREE.Color?d.copy(c):d instanceof THREE.Color?d.set(c):d instanceof THREE.Vector3&&c instanceof THREE.Vector3?d.copy(c):this[b]=c}}};
THREE.Material.prototype.clone=function(a){void 0===a&&(a=new THREE.Material);a.name=this.name;a.side=this.side;a.opacity=this.opacity;a.transparent=this.transparent;a.blending=this.blending;a.blendSrc=this.blendSrc;a.blendDst=this.blendDst;a.blendEquation=this.blendEquation;a.depthTest=this.depthTest;a.depthWrite=this.depthWrite;a.polygonOffset=this.polygonOffset;a.polygonOffsetFactor=this.polygonOffsetFactor;a.polygonOffsetUnits=this.polygonOffsetUnits;a.alphaTest=this.alphaTest;a.overdraw=this.overdraw;
a.visible=this.visible;return a};THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineBasicMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.linecap=this.linecap;a.linejoin=this.linejoin;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.LineDashedMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.LineDashedMaterial.prototype.clone=function(){var a=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.linewidth=this.linewidth;a.scale=this.scale;a.dashSize=this.dashSize;a.gapSize=this.gapSize;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.MeshBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(a)};
THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshBasicMaterial.prototype.clone=function(){var a=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=
this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;return a};THREE.MeshLambertMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap=
"round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshLambertMaterial.prototype.clone=function(){var a=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;
a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshPhongMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;
this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.MeshPhongMaterial.prototype.clone=function(){var a=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.ambient.copy(this.ambient);a.emissive.copy(this.emissive);a.specular.copy(this.specular);a.shininess=this.shininess;a.metal=this.metal;a.perPixel=this.perPixel;a.wrapAround=this.wrapAround;a.wrapRGB.copy(this.wrapRGB);a.map=this.map;a.lightMap=this.lightMap;a.bumpMap=this.bumpMap;a.bumpScale=this.bumpScale;a.normalMap=this.normalMap;a.normalScale.copy(this.normalScale);
a.specularMap=this.specularMap;a.envMap=this.envMap;a.combine=this.combine;a.reflectivity=this.reflectivity;a.refractionRatio=this.refractionRatio;a.fog=this.fog;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.wireframeLinecap=this.wireframeLinecap;a.wireframeLinejoin=this.wireframeLinejoin;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.MeshDepthMaterial=function(a){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var a=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshNormalMaterial=function(a){THREE.Material.call(this,a);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(a)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var a=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,a);a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;return a};THREE.MeshFaceMaterial=function(a){this.materials=a instanceof Array?a:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(a)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ParticleBasicMaterial.prototype.clone=function(){var a=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.size=this.size;a.sizeAttenuation=this.sizeAttenuation;a.vertexColors=this.vertexColors;a.fog=this.fog;return a};THREE.ParticleCanvasMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(a)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var a=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.program=this.program;return a};THREE.ShaderMaterial=function(a){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(a)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.ShaderMaterial.prototype.clone=function(){var a=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,a);a.fragmentShader=this.fragmentShader;a.vertexShader=this.vertexShader;a.uniforms=THREE.UniformsUtils.clone(this.uniforms);a.attributes=this.attributes;a.defines=this.defines;a.shading=this.shading;a.wireframe=this.wireframe;a.wireframeLinewidth=this.wireframeLinewidth;a.fog=this.fog;a.lights=this.lights;a.vertexColors=this.vertexColors;a.skinning=this.skinning;a.morphTargets=
this.morphTargets;a.morphNormals=this.morphNormals;return a};THREE.SpriteMaterial=function(a){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(a);a=a||{};void 0===a.depthTest&&(this.depthTest=!this.useScreenCoordinates);
void 0===a.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===a.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);
THREE.SpriteMaterial.prototype.clone=function(){var a=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,a);a.color.copy(this.color);a.map=this.map;a.useScreenCoordinates=this.useScreenCoordinates;a.sizeAttenuation=this.sizeAttenuation;a.scaleByViewport=this.scaleByViewport;a.alignment.copy(this.alignment);a.uvOffset.copy(this.uvOffset);a.uvScale.copy(this.uvScale);a.fog=this.fog;return a};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);
THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(a,b,c,d,e,g,f,i,h){THREE.EventDispatcher.call(this);this.id=THREE.TextureIdCount++;this.name="";this.image=a;this.mipmaps=[];this.mapping=void 0!==b?b:new THREE.UVMapping;this.wrapS=void 0!==c?c:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==d?d:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==e?e:THREE.LinearFilter;this.minFilter=void 0!==g?g:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==h?h:1;this.format=void 0!==f?f:THREE.RGBAFormat;this.type=void 0!==i?i:THREE.UnsignedByteType;
this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};
THREE.Texture.prototype={constructor:THREE.Texture,clone:function(a){void 0===a&&(a=new THREE.Texture);a.image=this.image;a.mipmaps=this.mipmaps.slice(0);a.mapping=this.mapping;a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.format=this.format;a.type=this.type;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.generateMipmaps=this.generateMipmaps;a.premultiplyAlpha=this.premultiplyAlpha;a.flipY=this.flipY;a.unpackAlignment=
this.unpackAlignment;return a},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(a,b,c,d,e,g,f,i,h,j,k){THREE.Texture.call(this,null,g,f,i,h,j,d,e,k);this.image={width:b,height:c};this.mipmaps=a;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var a=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.DataTexture=function(a,b,c,d,e,g,f,i,h,j,k){THREE.Texture.call(this,null,g,f,i,h,j,d,e,k);this.image={data:a,width:b,height:c}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var a=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,a);return a};THREE.Particle=function(a){THREE.Object3D.call(this);this.material=a};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(a){void 0===a&&(a=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);
THREE.ParticleSystem.prototype.clone=function(a){void 0===a&&(a=new THREE.ParticleSystem(this.geometry,this.material));a.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Line=function(a,b,c){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==c?c:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);
THREE.Line.prototype.clone=function(a){void 0===a&&(a=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=void 0!==b?b:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});void 0!==this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.updateMorphTargets())};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);
THREE.Mesh.prototype.updateMorphTargets=function(){if(0<this.geometry.morphTargets.length){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var a=0,b=this.geometry.morphTargets.length;a<b;a++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[a].name]=a}};
THREE.Mesh.prototype.getMorphTargetIndexByName=function(a){if(void 0!==this.morphTargetDictionary[a])return this.morphTargetDictionary[a];console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+a+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(a){void 0===a&&(a=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Bone=function(a){THREE.Object3D.call(this);this.skin=a;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(a,b){this.matrixAutoUpdate&&(b|=this.updateMatrix());if(b||this.matrixWorldNeedsUpdate)a?this.skinMatrix.multiplyMatrices(a,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,b=!0;var c,d=this.children.length;for(c=0;c<d;c++)this.children[c].update(this.skinMatrix,b)};THREE.SkinnedMesh=function(a,b,c){THREE.Mesh.call(this,a,b);this.useVertexTexture=void 0!==c?c:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var d,e,g;if(this.geometry&&void 0!==this.geometry.bones){for(a=0;a<this.geometry.bones.length;a++)c=this.geometry.bones[a],d=c.pos,e=c.rotq,g=c.scl,b=this.addBone(),b.name=c.name,b.position.set(d[0],d[1],d[2]),b.quaternion.set(e[0],e[1],e[2],e[3]),b.useQuaternion=!0,void 0!==g?b.scale.set(g[0],g[1],g[2]):b.scale.set(1,1,1);for(a=
0;a<this.bones.length;a++)c=this.geometry.bones[a],b=this.bones[a],-1===c.parent?this.add(b):this.bones[c.parent].add(b);a=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=a=256<a?64:64<a?32:16<a?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,
this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*a);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(a){void 0===a&&(a=new THREE.Bone(this));this.bones.push(a);return a};
THREE.SkinnedMesh.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1;for(var a=0,b=this.children.length;a<b;a++){var c=this.children[a];c instanceof THREE.Bone?c.update(this.identityMatrix,!1):c.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];a=0;for(b=this.bones.length;a<
b;a++)c=new THREE.Matrix4,c.getInverse(this.bones[a].skinMatrix),this.boneInverses.push(c)}a=0;for(b=this.bones.length;a<b;a++)THREE.SkinnedMesh.offsetMatrix.multiplyMatrices(this.bones[a].skinMatrix,this.boneInverses[a]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*a);this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};
THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var a=0;a<this.geometry.skinIndices.length;a++){var b=this.geometry.skinWeights[a],c=1/b.lengthManhattan();Infinity!==c?b.multiplyScalar(c):b.set(1)}};THREE.SkinnedMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,a);return a};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;THREE.MorphAnimMesh=function(a,b){THREE.Mesh.call(this,a,b);this.duration=1E3;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(a,b){this.startKeyframe=a;this.endKeyframe=b;this.length=this.endKeyframe-this.startKeyframe+1};
THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};
THREE.MorphAnimMesh.prototype.parseAnimations=function(){var a=this.geometry;a.animations||(a.animations={});for(var b,c=a.animations,d=/([a-z]+)(\d+)/,e=0,g=a.morphTargets.length;e<g;e++){var f=a.morphTargets[e].name.match(d);if(f&&1<f.length){f=f[1];c[f]||(c[f]={start:Infinity,end:-Infinity});var i=c[f];e<i.start&&(i.start=e);e>i.end&&(i.end=e);b||(b=f)}}a.firstAnimation=b};
THREE.MorphAnimMesh.prototype.setAnimationLabel=function(a,b,c){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[a]={start:b,end:c}};THREE.MorphAnimMesh.prototype.playAnimation=function(a,b){var c=this.geometry.animations[a];c?(this.setFrameRange(c.start,c.end),this.duration=1E3*((c.end-c.start)/b),this.time=0):console.warn("animation["+a+"] undefined")};
THREE.MorphAnimMesh.prototype.updateAnimation=function(a){var b=this.duration/this.length;this.time+=this.direction*a;if(this.mirroredLoop){if(this.time>this.duration||0>this.time)this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}else this.time%=this.duration,0>this.time&&(this.time+=this.duration);a=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/b),0,this.length-1);a!==this.currentKeyframe&&
(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[a]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=a);b=this.time%b/b;this.directionBackwards&&(b=1-b);this.morphTargetInfluences[this.currentKeyframe]=b;this.morphTargetInfluences[this.lastKeyframe]=1-b};
THREE.MorphAnimMesh.prototype.clone=function(a){void 0===a&&(a=new THREE.MorphAnimMesh(this.geometry,this.material));a.duration=this.duration;a.mirroredLoop=this.mirroredLoop;a.time=this.time;a.lastKeyframe=this.lastKeyframe;a.currentKeyframe=this.currentKeyframe;a.direction=this.direction;a.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,a);return a};THREE.Ribbon=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.material=b};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(a){void 0===a&&(a=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(a,b){void 0===b&&(b=0);for(var b=Math.abs(b),c=0;c<this.LODs.length&&!(b<this.LODs[c].visibleAtDistance);c++);this.LODs.splice(c,0,{visibleAtDistance:b,object3D:a});this.add(a)};
THREE.LOD.prototype.update=function(a){if(1<this.LODs.length){a.matrixWorldInverse.getInverse(a.matrixWorld);a=a.matrixWorldInverse;a=-(a.elements[2]*this.matrixWorld.elements[12]+a.elements[6]*this.matrixWorld.elements[13]+a.elements[10]*this.matrixWorld.elements[14]+a.elements[14]);this.LODs[0].object3D.visible=!0;for(var b=1;b<this.LODs.length;b++)if(a>=this.LODs[b].visibleAtDistance)this.LODs[b-1].object3D.visible=!1,this.LODs[b].object3D.visible=!0;else break;for(;b<this.LODs.length;b++)this.LODs[b].object3D.visible=
!1}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(a){THREE.Object3D.call(this);this.material=void 0!==a?a:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0};
THREE.Sprite.prototype.clone=function(a){void 0===a&&(a=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,a);return a};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);
THREE.Scene.prototype.__addObject=function(a){if(a instanceof THREE.Light)-1===this.__lights.indexOf(a)&&this.__lights.push(a),a.target&&void 0===a.target.parent&&this.add(a.target);else if(!(a instanceof THREE.Camera||a instanceof THREE.Bone)&&-1===this.__objects.indexOf(a)){this.__objects.push(a);this.__objectsAdded.push(a);var b=this.__objectsRemoved.indexOf(a);-1!==b&&this.__objectsRemoved.splice(b,1)}for(b=0;b<a.children.length;b++)this.__addObject(a.children[b])};
THREE.Scene.prototype.__removeObject=function(a){if(a instanceof THREE.Light){var b=this.__lights.indexOf(a);-1!==b&&this.__lights.splice(b,1)}else a instanceof THREE.Camera||(b=this.__objects.indexOf(a),-1!==b&&(this.__objects.splice(b,1),this.__objectsRemoved.push(a),b=this.__objectsAdded.indexOf(a),-1!==b&&this.__objectsAdded.splice(b,1)));for(b=0;b<a.children.length;b++)this.__removeObject(a.children[b])};THREE.Fog=function(a,b,c){this.name="";this.color=new THREE.Color(a);this.near=void 0!==b?b:1;this.far=void 0!==c?c:1E3};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(a,b){this.name="";this.color=new THREE.Color(a);this.density=void 0!==b?b:2.5E-4};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(a){function b(a){x!==a&&(x=r.globalAlpha=a)}function c(a){v!==a&&(a===THREE.NormalBlending?r.globalCompositeOperation="source-over":a===THREE.AdditiveBlending?r.globalCompositeOperation="lighter":a===THREE.SubtractiveBlending&&(r.globalCompositeOperation="darker"),v=a)}function d(a){w!==a&&(w=r.strokeStyle=a)}function e(a){y!==a&&(y=r.fillStyle=a)}console.log("THREE.CanvasRenderer",THREE.REVISION);var a=a||{},g=this,f,i,h,j=new THREE.Projector,k=void 0!==a.canvas?a.canvas:
document.createElement("canvas"),m,l,q,p,r=k.getContext("2d"),s=new THREE.Color(0),t=0,x=1,v=0,w=null,y=null,D=null,C=null,u=null,E,z,H,O,F=new THREE.RenderableVertex,R=new THREE.RenderableVertex,I,K,L,S,ca,Y,N,G,ha,la,wa,M,ia=new THREE.Color,Aa=new THREE.Color,va=new THREE.Color,Na=new THREE.Color,Fa=new THREE.Color,ba=new THREE.Color,xa=new THREE.Color,Ba=new THREE.Color,Ia={},P={},pa,na,ka,ra,Va,Qa,qa,eb,fb,xb,Ma=new THREE.Box2,sa=new THREE.Box2,La=new THREE.Box2,Ca=!1,ab=new THREE.Color,tb=new THREE.Color,
Q=new THREE.Color,oa=new THREE.Vector3,bb,Mb,Nb,Wa,Da,Gb,pb=16;bb=document.createElement("canvas");bb.width=bb.height=2;Mb=bb.getContext("2d");Mb.fillStyle="rgba(0,0,0,1)";Mb.fillRect(0,0,2,2);Nb=Mb.getImageData(0,0,2,2);Wa=Nb.data;Da=document.createElement("canvas");Da.width=Da.height=pb;Gb=Da.getContext("2d");Gb.translate(-pb/2,-pb/2);Gb.scale(pb,pb);pb--;this.domElement=k;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:
1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(a,b){m=a*this.devicePixelRatio;l=b*this.devicePixelRatio;q=Math.floor(m/2);p=Math.floor(l/2);k.width=m;k.height=l;k.style.width=a+"px";k.style.height=b+"px";Ma.set(new THREE.Vector2(-q,-p),new THREE.Vector2(q,p));sa.set(new THREE.Vector2(-q,-p),new THREE.Vector2(q,p));x=1;v=0;u=C=D=y=w=null};this.setClearColor=
function(a,b){s.copy(a);t=void 0!==b?b:1;sa.set(new THREE.Vector2(-q,-p),new THREE.Vector2(q,p))};this.setClearColorHex=function(a,b){s.setHex(a);t=void 0!==b?b:1;sa.set(new THREE.Vector2(-q,-p),new THREE.Vector2(q,p))};this.getMaxAnisotropy=function(){return 0};this.clear=function(){r.setTransform(1,0,0,-1,q,p);!1===sa.empty()&&(sa.intersect(Ma),sa.expandByScalar(2),1>t&&r.clearRect(sa.min.x|0,sa.min.y|0,sa.max.x-sa.min.x|0,sa.max.y-sa.min.y|0),0<t&&(c(THREE.NormalBlending),b(1),e("rgba("+Math.floor(255*
s.r)+","+Math.floor(255*s.g)+","+Math.floor(255*s.b)+","+t+")"),r.fillRect(sa.min.x|0,sa.min.y|0,sa.max.x-sa.min.x|0,sa.max.y-sa.min.y|0)),sa.makeEmpty())};this.render=function(a,k){function l(a,b,c){for(var d=0,e=h.length;d<e;d++){var f=h[d];Ba.copy(f.color);if(f instanceof THREE.DirectionalLight){var g=f.matrixWorld.getPosition().normalize(),i=b.dot(g);0>=i||(i*=f.intensity,c.add(Ba.multiplyScalar(i)))}else f instanceof THREE.PointLight&&(g=f.matrixWorld.getPosition(),i=b.dot(oa.subVectors(g,a).normalize()),
0>=i||(i*=0==f.distance?1:1-Math.min(a.distanceTo(g)/f.distance,1),0!=i&&(i*=f.intensity,c.add(Ba.multiplyScalar(i)))))}}function m(a,d,e,f,i,h,j,n){g.info.render.vertices+=3;g.info.render.faces++;b(n.opacity);c(n.blending);I=a.positionScreen.x;K=a.positionScreen.y;L=d.positionScreen.x;S=d.positionScreen.y;ca=e.positionScreen.x;Y=e.positionScreen.y;s(I,K,L,S,ca,Y);(n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial)&&null===n.map&&null===n.map?(ba.copy(n.color),xa.copy(n.emissive),
n.vertexColors===THREE.FaceColors&&ba.multiply(j.color),!0===Ca?!1===n.wireframe&&n.shading==THREE.SmoothShading&&3==j.vertexNormalsLength?(Aa.copy(ab),va.copy(ab),Na.copy(ab),l(j.v1.positionWorld,j.vertexNormalsModel[0],Aa),l(j.v2.positionWorld,j.vertexNormalsModel[1],va),l(j.v3.positionWorld,j.vertexNormalsModel[2],Na),Aa.multiply(ba).add(xa),va.multiply(ba).add(xa),Na.multiply(ba).add(xa),Fa.addColors(va,Na).multiplyScalar(0.5),ka=pb(Aa,va,Na,Fa),w(I,K,L,S,ca,Y,0,0,1,0,0,1,ka)):(ia.copy(ab),l(j.centroidModel,
j.normalModel,ia),ia.multiply(ba).add(xa),!0===n.wireframe?y(ia,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):v(ia)):!0===n.wireframe?y(n.color,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):v(n.color)):n instanceof THREE.MeshBasicMaterial||n instanceof THREE.MeshLambertMaterial||n instanceof THREE.MeshPhongMaterial?null!==n.map?n.map.mapping instanceof THREE.UVMapping&&(ra=j.uvs[0],x(I,K,L,S,ca,Y,ra[f].x,ra[f].y,ra[i].x,ra[i].y,ra[h].x,ra[h].y,n.map)):null!==n.envMap?
n.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(oa.copy(j.vertexNormalsModelView[f]),Va=0.5*oa.x+0.5,Qa=0.5*oa.y+0.5,oa.copy(j.vertexNormalsModelView[i]),qa=0.5*oa.x+0.5,eb=0.5*oa.y+0.5,oa.copy(j.vertexNormalsModelView[h]),fb=0.5*oa.x+0.5,xb=0.5*oa.y+0.5,x(I,K,L,S,ca,Y,Va,Qa,qa,eb,fb,xb,n.envMap)):(ia.copy(n.color),n.vertexColors===THREE.FaceColors&&ia.multiply(j.color),!0===n.wireframe?y(ia,n.wireframeLinewidth,n.wireframeLinecap,n.wireframeLinejoin):v(ia)):n instanceof THREE.MeshDepthMaterial?
(pa=k.near,na=k.far,i=1-kb(a.positionScreen.z*a.positionScreen.w,pa,na),Aa.setRGB(i,i,i),i=1-kb(d.positionScreen.z*d.positionScreen.w,pa,na),va.setRGB(i,i,i),i=1-kb(e.positionScreen.z*e.positionScreen.w,pa,na),Na.setRGB(i,i,i),Fa.addColors(va,Na).multiplyScalar(0.5),ka=pb(Aa,va,Na,Fa),w(I,K,L,S,ca,Y,0,0,1,0,0,1,ka)):n instanceof THREE.MeshNormalMaterial&&(n.shading==THREE.FlatShading?(d=j.normalModelView,ia.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),!0===n.wireframe?y(ia,n.wireframeLinewidth,
n.wireframeLinecap,n.wireframeLinejoin):v(ia)):n.shading==THREE.SmoothShading&&(d=j.vertexNormalsModelView[f],Aa.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),d=j.vertexNormalsModelView[i],va.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),d=j.vertexNormalsModelView[h],Na.setRGB(d.x,d.y,d.z).multiplyScalar(0.5).addScalar(0.5),Fa.addColors(va,Na).multiplyScalar(0.5),ka=pb(Aa,va,Na,Fa),w(I,K,L,S,ca,Y,0,0,1,0,0,1,ka)))}function s(a,b,c,d,e,f){r.beginPath();r.moveTo(a,b);r.lineTo(c,d);
r.lineTo(e,f);r.closePath()}function t(a,b,c,d,e,f,g,i){r.beginPath();r.moveTo(a,b);r.lineTo(c,d);r.lineTo(e,f);r.lineTo(g,i);r.closePath()}function y(a,b,c,e){D!==b&&(D=r.lineWidth=b);C!==c&&(C=r.lineCap=c);u!==e&&(u=r.lineJoin=e);d(a.getStyle());r.stroke();La.expandByScalar(2*b)}function v(a){e(a.getStyle());r.fill()}function x(a,b,c,d,f,g,i,h,j,k,n,l,m){if(!(m instanceof THREE.DataTexture||void 0===m.image||0==m.image.width)){if(!0===m.needsUpdate){var q=m.wrapS==THREE.RepeatWrapping,p=m.wrapT==
THREE.RepeatWrapping;Ia[m.id]=r.createPattern(m.image,!0===q&&!0===p?"repeat":!0===q&&!1===p?"repeat-x":!1===q&&!0===p?"repeat-y":"no-repeat");m.needsUpdate=!1}void 0===Ia[m.id]?e("rgba(0,0,0,1)"):e(Ia[m.id]);var q=m.offset.x/m.repeat.x,p=m.offset.y/m.repeat.y,Tb=m.image.width*m.repeat.x,Q=m.image.height*m.repeat.y,i=(i+q)*Tb,h=(1-h+p)*Q,c=c-a,d=d-b,f=f-a,g=g-b,j=(j+q)*Tb-i,k=(1-k+p)*Q-h,n=(n+q)*Tb-i,l=(1-l+p)*Q-h,q=j*l-n*k;0===q?(void 0===P[m.id]&&(b=document.createElement("canvas"),b.width=m.image.width,
b.height=m.image.height,b=b.getContext("2d"),b.drawImage(m.image,0,0),P[m.id]=b.getImageData(0,0,m.image.width,m.image.height).data),b=P[m.id],i=4*(Math.floor(i)+Math.floor(h)*m.image.width),ia.setRGB(b[i]/255,b[i+1]/255,b[i+2]/255),v(ia)):(q=1/q,m=(l*c-k*f)*q,k=(l*d-k*g)*q,c=(j*f-n*c)*q,d=(j*g-n*d)*q,a=a-m*i-c*h,i=b-k*i-d*h,r.save(),r.transform(m,k,c,d,a,i),r.fill(),r.restore())}}function w(a,b,c,d,e,f,g,i,h,j,k,n,l){var m,q;m=l.width-1;q=l.height-1;g*=m;i*=q;c-=a;d-=b;e-=a;f-=b;h=h*m-g;j=j*q-i;
k=k*m-g;n=n*q-i;q=1/(h*n-k*j);m=(n*c-j*e)*q;j=(n*d-j*f)*q;c=(h*e-k*c)*q;d=(h*f-k*d)*q;a=a-m*g-c*i;b=b-j*g-d*i;r.save();r.transform(m,j,c,d,a,b);r.clip();r.drawImage(l,0,0);r.restore()}function pb(a,b,c,d){Wa[0]=255*a.r|0;Wa[1]=255*a.g|0;Wa[2]=255*a.b|0;Wa[4]=255*b.r|0;Wa[5]=255*b.g|0;Wa[6]=255*b.b|0;Wa[8]=255*c.r|0;Wa[9]=255*c.g|0;Wa[10]=255*c.b|0;Wa[12]=255*d.r|0;Wa[13]=255*d.g|0;Wa[14]=255*d.b|0;Mb.putImageData(Nb,0,0);Gb.drawImage(bb,0,0);return Da}function kb(a,b,c){a=(a-b)/(c-b);return a*a*(3-
2*a)}function qb(a,b){var c=b.x-a.x,d=b.y-a.y,e=c*c+d*d;0!==e&&(e=1/Math.sqrt(e),c*=e,d*=e,b.x+=c,b.y+=d,a.x-=c,a.y-=d)}if(!1===k instanceof THREE.Camera)console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");else{!0===this.autoClear&&this.clear();r.setTransform(1,0,0,-1,q,p);g.info.render.vertices=0;g.info.render.faces=0;f=j.projectScene(a,k,this.sortObjects,this.sortElements);i=f.elements;h=f.lights;Ca=0<h.length;if(!0===Ca){ab.setRGB(0,0,0);tb.setRGB(0,0,0);Q.setRGB(0,
0,0);for(var Db=0,gc=h.length;Db<gc;Db++){var aa=h[Db],Z=aa.color;aa instanceof THREE.AmbientLight?ab.add(Z):aa instanceof THREE.DirectionalLight?tb.add(Z):aa instanceof THREE.PointLight&&Q.add(Z)}}Db=0;for(gc=i.length;Db<gc;Db++){var ja=i[Db],aa=ja.material;if(!(void 0===aa||!1===aa.visible)){La.makeEmpty();if(ja instanceof THREE.RenderableParticle){E=ja;E.x*=q;E.y*=p;var Z=E,hb=ja;b(aa.opacity);c(aa.blending);var lb=void 0,Xa=void 0,Ya=void 0,Za=void 0,Tb=ja=void 0,Wc=void 0;aa instanceof THREE.ParticleBasicMaterial?
null===aa.map?(Ya=hb.object.scale.x,Za=hb.object.scale.y,Ya*=hb.scale.x*q,Za*=hb.scale.y*p,La.min.set(Z.x-Ya,Z.y-Za),La.max.set(Z.x+Ya,Z.y+Za),!1!==Ma.isIntersectionBox(La)&&(e(aa.color.getStyle()),r.save(),r.translate(Z.x,Z.y),r.rotate(-hb.rotation),r.scale(Ya,Za),r.fillRect(-1,-1,2,2),r.restore())):(ja=aa.map.image,Tb=ja.width>>1,Wc=ja.height>>1,Ya=hb.scale.x*q,Za=hb.scale.y*p,lb=Ya*Tb,Xa=Za*Wc,La.min.set(Z.x-lb,Z.y-Xa),La.max.set(Z.x+lb,Z.y+Xa),!1!==Ma.isIntersectionBox(La)&&(r.save(),r.translate(Z.x,
Z.y),r.rotate(-hb.rotation),r.scale(Ya,-Za),r.translate(-Tb,-Wc),r.drawImage(ja,0,0),r.restore())):aa instanceof THREE.ParticleCanvasMaterial&&(lb=hb.scale.x*q,Xa=hb.scale.y*p,La.min.set(Z.x-lb,Z.y-Xa),La.max.set(Z.x+lb,Z.y+Xa),!1!==Ma.isIntersectionBox(La)&&(d(aa.color.getStyle()),e(aa.color.getStyle()),r.save(),r.translate(Z.x,Z.y),r.rotate(-hb.rotation),r.scale(lb,Xa),aa.program(r),r.restore()))}else if(ja instanceof THREE.RenderableLine)E=ja.v1,z=ja.v2,E.positionScreen.x*=q,E.positionScreen.y*=
p,z.positionScreen.x*=q,z.positionScreen.y*=p,La.setFromPoints([E.positionScreen,z.positionScreen]),!0===Ma.isIntersectionBox(La)&&(Z=E,hb=z,b(aa.opacity),c(aa.blending),r.beginPath(),r.moveTo(Z.positionScreen.x,Z.positionScreen.y),r.lineTo(hb.positionScreen.x,hb.positionScreen.y),aa instanceof THREE.LineBasicMaterial&&(Z=aa.linewidth,D!==Z&&(D=r.lineWidth=Z),Z=aa.linecap,C!==Z&&(C=r.lineCap=Z),Z=aa.linejoin,u!==Z&&(u=r.lineJoin=Z),d(aa.color.getStyle()),r.stroke(),La.expandByScalar(2*aa.linewidth)));
else if(ja instanceof THREE.RenderableFace3){E=ja.v1;z=ja.v2;H=ja.v3;if(-1>E.positionScreen.z||1<E.positionScreen.z)continue;if(-1>z.positionScreen.z||1<z.positionScreen.z)continue;if(-1>H.positionScreen.z||1<H.positionScreen.z)continue;E.positionScreen.x*=q;E.positionScreen.y*=p;z.positionScreen.x*=q;z.positionScreen.y*=p;H.positionScreen.x*=q;H.positionScreen.y*=p;!0===aa.overdraw&&(qb(E.positionScreen,z.positionScreen),qb(z.positionScreen,H.positionScreen),qb(H.positionScreen,E.positionScreen));
La.setFromPoints([E.positionScreen,z.positionScreen,H.positionScreen]);m(E,z,H,0,1,2,ja,aa,a)}else if(ja instanceof THREE.RenderableFace4){E=ja.v1;z=ja.v2;H=ja.v3;O=ja.v4;if(-1>E.positionScreen.z||1<E.positionScreen.z)continue;if(-1>z.positionScreen.z||1<z.positionScreen.z)continue;if(-1>H.positionScreen.z||1<H.positionScreen.z)continue;if(-1>O.positionScreen.z||1<O.positionScreen.z)continue;E.positionScreen.x*=q;E.positionScreen.y*=p;z.positionScreen.x*=q;z.positionScreen.y*=p;H.positionScreen.x*=
q;H.positionScreen.y*=p;O.positionScreen.x*=q;O.positionScreen.y*=p;F.positionScreen.copy(z.positionScreen);R.positionScreen.copy(O.positionScreen);!0===aa.overdraw&&(qb(E.positionScreen,z.positionScreen),qb(z.positionScreen,O.positionScreen),qb(O.positionScreen,E.positionScreen),qb(H.positionScreen,F.positionScreen),qb(H.positionScreen,R.positionScreen));La.setFromPoints([E.positionScreen,z.positionScreen,H.positionScreen,O.positionScreen]);Z=E;hb=z;lb=H;Xa=O;Ya=F;Za=R;Tb=a;g.info.render.vertices+=
4;g.info.render.faces++;b(aa.opacity);c(aa.blending);void 0!==aa.map&&null!==aa.map||void 0!==aa.envMap&&null!==aa.envMap?(m(Z,hb,Xa,0,1,3,ja,aa,Tb),m(Ya,lb,Za,1,2,3,ja,aa,Tb)):(I=Z.positionScreen.x,K=Z.positionScreen.y,L=hb.positionScreen.x,S=hb.positionScreen.y,ca=lb.positionScreen.x,Y=lb.positionScreen.y,N=Xa.positionScreen.x,G=Xa.positionScreen.y,ha=Ya.positionScreen.x,la=Ya.positionScreen.y,wa=Za.positionScreen.x,M=Za.positionScreen.y,aa instanceof THREE.MeshLambertMaterial||aa instanceof THREE.MeshPhongMaterial?
(ba.copy(aa.color),xa.copy(aa.emissive),aa.vertexColors===THREE.FaceColors&&ba.multiply(ja.color),!0===Ca?!1===aa.wireframe&&aa.shading==THREE.SmoothShading&&4==ja.vertexNormalsLength?(Aa.copy(ab),va.copy(ab),Na.copy(ab),Fa.copy(ab),l(ja.v1.positionWorld,ja.vertexNormalsModel[0],Aa),l(ja.v2.positionWorld,ja.vertexNormalsModel[1],va),l(ja.v4.positionWorld,ja.vertexNormalsModel[3],Na),l(ja.v3.positionWorld,ja.vertexNormalsModel[2],Fa),Aa.multiply(ba).add(xa),va.multiply(ba).add(xa),Na.multiply(ba).add(xa),
Fa.multiply(ba).add(xa),ka=pb(Aa,va,Na,Fa),s(I,K,L,S,N,G),w(I,K,L,S,N,G,0,0,1,0,0,1,ka),s(ha,la,ca,Y,wa,M),w(ha,la,ca,Y,wa,M,1,0,1,1,0,1,ka)):(ia.copy(ab),l(ja.centroidModel,ja.normalModel,ia),ia.multiply(ba).add(xa),t(I,K,L,S,ca,Y,N,G),!0===aa.wireframe?y(ia,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):v(ia)):(ia.addColors(ba,xa),t(I,K,L,S,ca,Y,N,G),!0===aa.wireframe?y(ia,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):v(ia))):aa instanceof THREE.MeshBasicMaterial?
(ia.copy(aa.color),aa.vertexColors===THREE.FaceColors&&ia.multiply(ja.color),t(I,K,L,S,ca,Y,N,G),!0===aa.wireframe?y(ia,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):v(ia)):aa instanceof THREE.MeshNormalMaterial?(Z=void 0,aa.shading==THREE.FlatShading?(Z=ja.normalModelView,ia.setRGB(Z.x,Z.y,Z.z).multiplyScalar(0.5).addScalar(0.5),t(I,K,L,S,ca,Y,N,G),!0===aa.wireframe?y(ia,aa.wireframeLinewidth,aa.wireframeLinecap,aa.wireframeLinejoin):v(ia)):aa.shading==THREE.SmoothShading&&(Z=ja.vertexNormalsModelView[0],
Aa.setRGB(Z.x,Z.y,Z.z).multiplyScalar(0.5).addScalar(0.5),Z=ja.vertexNormalsModelView[1],va.setRGB(Z.x,Z.y,Z.z).multiplyScalar(0.5).addScalar(0.5),Z=ja.vertexNormalsModelView[3],Na.setRGB(Z.x,Z.y,Z.z).multiplyScalar(0.5).addScalar(0.5),Z=ja.vertexNormalsModelView[2],Fa.setRGB(Z.x,Z.y,Z.z).multiplyScalar(0.5).addScalar(0.5),ka=pb(Aa,va,Na,Fa),s(I,K,L,S,N,G),w(I,K,L,S,N,G,0,0,1,0,0,1,ka),s(ha,la,ca,Y,wa,M),w(ha,la,ca,Y,wa,M,1,0,1,1,0,1,ka))):aa instanceof THREE.MeshDepthMaterial&&(pa=k.near,na=k.far,
Aa.r=Aa.g=Aa.b=1-kb(Z.positionScreen.z*Z.positionScreen.w,pa,na),va.r=va.g=va.b=1-kb(hb.positionScreen.z*hb.positionScreen.w,pa,na),Na.r=Na.g=Na.b=1-kb(Xa.positionScreen.z*Xa.positionScreen.w,pa,na),Fa.r=Fa.g=Fa.b=1-kb(lb.positionScreen.z*lb.positionScreen.w,pa,na),ka=pb(Aa,va,Na,Fa),s(I,K,L,S,N,G),w(I,K,L,S,N,G,0,0,1,0,0,1,ka),s(ha,la,ca,Y,wa,M),w(ha,la,ca,Y,wa,M,1,0,1,1,0,1,ka)))}sa.union(La)}}r.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",
envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",
envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",
map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",
lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",
normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",
specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",
lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",
lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",
lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",
lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",
lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",
color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",
skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",
morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",
default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",
skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",
shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",
shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};
THREE.UniformsUtils={merge:function(a){var b,c,d,e={};for(b=0;b<a.length;b++)for(c in d=this.clone(a[b]),d)e[c]=d[c];return e},clone:function(a){var b,c,d,e={};for(b in a)for(c in e[b]={},a[b])d=a[b][c],e[b][c]=d instanceof THREE.Color||d instanceof THREE.Vector2||d instanceof THREE.Vector3||d instanceof THREE.Vector4||d instanceof THREE.Matrix4||d instanceof THREE.Texture?d.clone():d instanceof Array?d.slice():d;return e}};
THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",
value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",
value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",
value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};
THREE.ShaderLib={basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,
THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,
THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",
THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,
THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,
THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,
THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",
value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,
THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,
THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),
fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3},opacity:{type:"f",
value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},normalmap:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},
tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},
uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},
cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"},
depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(a){function b(a){if(a.__webglCustomAttributesList)for(var b in a.__webglCustomAttributesList)n.deleteBuffer(a.__webglCustomAttributesList[b].buffer)}function c(a,b){var c=a.vertices.length,d=b.material;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var e in d.attributes){var f=d.attributes[e];if(!f.__webglInitialized||f.createUniqueBuffers){f.__webglInitialized=!0;var g=1;"v2"===f.type?g=2:"v3"===f.type?g=3:"v4"===f.type?
g=4:"c"===f.type&&(g=3);f.size=g;f.array=new Float32Array(c*g);f.buffer=n.createBuffer();f.buffer.belongsToAttribute=e;f.needsUpdate=!0}a.__webglCustomAttributesList.push(f)}}}function d(a,b){var c=b.geometry,d=a.faces3,i=a.faces4,h=3*d.length+4*i.length,j=1*d.length+2*i.length,i=3*d.length+4*i.length,d=e(b,a),k=f(d),l=g(d),m=d.vertexColors?d.vertexColors:!1;a.__vertexArray=new Float32Array(3*h);l&&(a.__normalArray=new Float32Array(3*h));c.hasTangents&&(a.__tangentArray=new Float32Array(4*h));m&&
(a.__colorArray=new Float32Array(3*h));if(k){if(0<c.faceUvs.length||0<c.faceVertexUvs.length)a.__uvArray=new Float32Array(2*h);if(1<c.faceUvs.length||1<c.faceVertexUvs.length)a.__uv2Array=new Float32Array(2*h)}b.geometry.skinWeights.length&&b.geometry.skinIndices.length&&(a.__skinIndexArray=new Float32Array(4*h),a.__skinWeightArray=new Float32Array(4*h));a.__faceArray=new Uint16Array(3*j);a.__lineArray=new Uint16Array(2*i);if(a.numMorphTargets){a.__morphTargetsArrays=[];c=0;for(k=a.numMorphTargets;c<
k;c++)a.__morphTargetsArrays.push(new Float32Array(3*h))}if(a.numMorphNormals){a.__morphNormalsArrays=[];c=0;for(k=a.numMorphNormals;c<k;c++)a.__morphNormalsArrays.push(new Float32Array(3*h))}a.__webglFaceCount=3*j;a.__webglLineCount=2*i;if(d.attributes){void 0===a.__webglCustomAttributesList&&(a.__webglCustomAttributesList=[]);for(var q in d.attributes){var j=d.attributes[q],c={},r;for(r in j)c[r]=j[r];if(!c.__webglInitialized||c.createUniqueBuffers)c.__webglInitialized=!0,i=1,"v2"===c.type?i=2:
"v3"===c.type?i=3:"v4"===c.type?i=4:"c"===c.type&&(i=3),c.size=i,c.array=new Float32Array(h*i),c.buffer=n.createBuffer(),c.buffer.belongsToAttribute=q,j.needsUpdate=!0,c.__original=j;a.__webglCustomAttributesList.push(c)}}a.__inittedArrays=!0}function e(a,b){return a.material instanceof THREE.MeshFaceMaterial?a.material.materials[b.materialIndex]:a.material}function g(a){return a instanceof THREE.MeshBasicMaterial&&!a.envMap||a instanceof THREE.MeshDepthMaterial?!1:a&&void 0!==a.shading&&a.shading===
THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function f(a){return a.map||a.lightMap||a.bumpMap||a.normalMap||a.specularMap||a instanceof THREE.ShaderMaterial?!0:!1}function i(a){var b,c,d;for(b in a.attributes)d="index"===b?n.ELEMENT_ARRAY_BUFFER:n.ARRAY_BUFFER,c=a.attributes[b],c.buffer=n.createBuffer(),n.bindBuffer(d,c.buffer),n.bufferData(d,c.array,n.STATIC_DRAW)}function h(a,b,c){var d=a.attributes,e=d.index,f=d.position,g=d.normal,i=d.uv,h=d.color,d=d.tangent;a.elementsNeedUpdate&&
void 0!==e&&(n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.buffer),n.bufferData(n.ELEMENT_ARRAY_BUFFER,e.array,b));a.verticesNeedUpdate&&void 0!==f&&(n.bindBuffer(n.ARRAY_BUFFER,f.buffer),n.bufferData(n.ARRAY_BUFFER,f.array,b));a.normalsNeedUpdate&&void 0!==g&&(n.bindBuffer(n.ARRAY_BUFFER,g.buffer),n.bufferData(n.ARRAY_BUFFER,g.array,b));a.uvsNeedUpdate&&void 0!==i&&(n.bindBuffer(n.ARRAY_BUFFER,i.buffer),n.bufferData(n.ARRAY_BUFFER,i.array,b));a.colorsNeedUpdate&&void 0!==h&&(n.bindBuffer(n.ARRAY_BUFFER,
h.buffer),n.bufferData(n.ARRAY_BUFFER,h.array,b));a.tangentsNeedUpdate&&void 0!==d&&(n.bindBuffer(n.ARRAY_BUFFER,d.buffer),n.bufferData(n.ARRAY_BUFFER,d.array,b));if(c)for(var j in a.attributes)delete a.attributes[j].array}function j(a){oa[a]||(n.enableVertexAttribArray(a),oa[a]=!0)}function k(){for(var a in oa)oa[a]&&(n.disableVertexAttribArray(a),oa[a]=!1)}function m(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}function l(a,b){return b[0]-a[0]}function q(a,b,c){if(a.length)for(var d=0,e=a.length;d<e;d++)xa=
va=null,Fa=ba=pa=P=qa=Qa=na=-1,Gb=!0,a[d].render(b,c,tb,Q),xa=va=null,Fa=ba=pa=P=qa=Qa=na=-1,Gb=!0}function p(a,b,c,d,e,f,g,i){var h,j,k,n;b?(j=a.length-1,n=b=-1):(j=0,b=a.length,n=1);for(var l=j;l!==b;l+=n)if(h=a[l],h.render){j=h.object;k=h.buffer;if(i)h=i;else{h=h[c];if(!h)continue;g&&M.setBlending(h.blending,h.blendEquation,h.blendSrc,h.blendDst);M.setDepthTest(h.depthTest);M.setDepthWrite(h.depthWrite);z(h.polygonOffset,h.polygonOffsetFactor,h.polygonOffsetUnits)}M.setMaterialFaces(h);k instanceof
THREE.BufferGeometry?M.renderBufferDirect(d,e,f,h,k,j):M.renderBuffer(d,e,f,h,k,j)}}function r(a,b,c,d,e,f,g){for(var i,h,j=0,k=a.length;j<k;j++)if(i=a[j],h=i.object,h.visible){if(g)i=g;else{i=i[b];if(!i)continue;f&&M.setBlending(i.blending,i.blendEquation,i.blendSrc,i.blendDst);M.setDepthTest(i.depthTest);M.setDepthWrite(i.depthWrite);z(i.polygonOffset,i.polygonOffsetFactor,i.polygonOffsetUnits)}M.renderImmediateObject(c,d,e,i,h)}}function s(a,b,c){a.push({buffer:b,object:c,opaque:null,transparent:null})}
function t(a){for(var b in a.attributes)if(a.attributes[b].needsUpdate)return!0;return!1}function x(a){for(var b in a.attributes)a.attributes[b].needsUpdate=!1}function v(a,b){for(var c=a.length-1;0<=c;c--)a[c].object===b&&a.splice(c,1)}function w(a,b){for(var c=a.length-1;0<=c;c--)a[c]===b&&a.splice(c,1)}function y(a,b,c,d,e){Ia=0;d.needsUpdate&&(d.program&&Za(d),M.initMaterial(d,b,c,e),d.needsUpdate=!1);d.morphTargets&&!e.__webglMorphTargetInfluences&&(e.__webglMorphTargetInfluences=new Float32Array(M.maxMorphTargets));
var f=!1,g=d.program,i=g.uniforms,h=d.uniforms;g!==va&&(n.useProgram(g),va=g,f=!0);d.id!==Fa&&(Fa=d.id,f=!0);if(f||a!==xa)n.uniformMatrix4fv(i.projectionMatrix,!1,a.projectionMatrix.elements),a!==xa&&(xa=a);if(d.skinning)if(kb&&e.useVertexTexture){if(null!==i.boneTexture){var j=D();n.uniform1i(i.boneTexture,j);M.setTexture(e.boneTexture,j)}}else null!==i.boneGlobalMatrices&&n.uniformMatrix4fv(i.boneGlobalMatrices,!1,e.boneMatrices);if(f){c&&d.fog&&(h.fogColor.value=c.color,c instanceof THREE.Fog?
(h.fogNear.value=c.near,h.fogFar.value=c.far):c instanceof THREE.FogExp2&&(h.fogDensity.value=c.density));if(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||d.lights){if(Gb){for(var k,l=j=0,m=0,q,r,p,Q=pb,s=Q.directional.colors,oa=Q.directional.positions,t=Q.point.colors,y=Q.point.positions,bb=Q.point.distances,v=Q.spot.colors,x=Q.spot.positions,w=Q.spot.distances,z=Q.spot.directions,C=Q.spot.anglesCos,Mb=Q.spot.exponents,H=Q.hemi.skyColors,Nb=Q.hemi.groundColors,I=Q.hemi.positions,
G=0,Wa=0,O=0,S=0,N=0,ia=0,R=0,ca=0,T=k=0,c=p=T=0,f=b.length;c<f;c++)k=b[c],k.onlyShadow||(q=k.color,r=k.intensity,p=k.distance,k instanceof THREE.AmbientLight?k.visible&&(M.gammaInput?(j+=q.r*q.r,l+=q.g*q.g,m+=q.b*q.b):(j+=q.r,l+=q.g,m+=q.b)):k instanceof THREE.DirectionalLight?(N+=1,k.visible&&(Da.copy(k.matrixWorld.getPosition()),Da.sub(k.target.matrixWorld.getPosition()),Da.normalize(),0===Da.x&&0===Da.y&&0===Da.z||(k=3*G,oa[k]=Da.x,oa[k+1]=Da.y,oa[k+2]=Da.z,M.gammaInput?u(s,k,q,r*r):E(s,k,q,r),
G+=1))):k instanceof THREE.PointLight?(ia+=1,k.visible&&(T=3*Wa,M.gammaInput?u(t,T,q,r*r):E(t,T,q,r),r=k.matrixWorld.getPosition(),y[T]=r.x,y[T+1]=r.y,y[T+2]=r.z,bb[Wa]=p,Wa+=1)):k instanceof THREE.SpotLight?(R+=1,k.visible&&(T=3*O,M.gammaInput?u(v,T,q,r*r):E(v,T,q,r),r=k.matrixWorld.getPosition(),x[T]=r.x,x[T+1]=r.y,x[T+2]=r.z,w[O]=p,Da.copy(r),Da.sub(k.target.matrixWorld.getPosition()),Da.normalize(),z[T]=Da.x,z[T+1]=Da.y,z[T+2]=Da.z,C[O]=Math.cos(k.angle),Mb[O]=k.exponent,O+=1)):k instanceof THREE.HemisphereLight&&
(ca+=1,k.visible&&(Da.copy(k.matrixWorld.getPosition()),Da.normalize(),0===Da.x&&0===Da.y&&0===Da.z||(p=3*S,I[p]=Da.x,I[p+1]=Da.y,I[p+2]=Da.z,q=k.color,k=k.groundColor,M.gammaInput?(r*=r,u(H,p,q,r),u(Nb,p,k,r)):(E(H,p,q,r),E(Nb,p,k,r)),S+=1))));c=3*G;for(f=Math.max(s.length,3*N);c<f;c++)s[c]=0;c=3*Wa;for(f=Math.max(t.length,3*ia);c<f;c++)t[c]=0;c=3*O;for(f=Math.max(v.length,3*R);c<f;c++)v[c]=0;c=3*S;for(f=Math.max(H.length,3*ca);c<f;c++)H[c]=0;c=3*S;for(f=Math.max(Nb.length,3*ca);c<f;c++)Nb[c]=0;
Q.directional.length=G;Q.point.length=Wa;Q.spot.length=O;Q.hemi.length=S;Q.ambient[0]=j;Q.ambient[1]=l;Q.ambient[2]=m;Gb=!1}c=pb;h.ambientLightColor.value=c.ambient;h.directionalLightColor.value=c.directional.colors;h.directionalLightDirection.value=c.directional.positions;h.pointLightColor.value=c.point.colors;h.pointLightPosition.value=c.point.positions;h.pointLightDistance.value=c.point.distances;h.spotLightColor.value=c.spot.colors;h.spotLightPosition.value=c.spot.positions;h.spotLightDistance.value=
c.spot.distances;h.spotLightDirection.value=c.spot.directions;h.spotLightAngleCos.value=c.spot.anglesCos;h.spotLightExponent.value=c.spot.exponents;h.hemisphereLightSkyColor.value=c.hemi.skyColors;h.hemisphereLightGroundColor.value=c.hemi.groundColors;h.hemisphereLightDirection.value=c.hemi.positions}if(d instanceof THREE.MeshBasicMaterial||d instanceof THREE.MeshLambertMaterial||d instanceof THREE.MeshPhongMaterial){h.opacity.value=d.opacity;M.gammaInput?h.diffuse.value.copyGammaToLinear(d.color):
h.diffuse.value=d.color;h.map.value=d.map;h.lightMap.value=d.lightMap;h.specularMap.value=d.specularMap;d.bumpMap&&(h.bumpMap.value=d.bumpMap,h.bumpScale.value=d.bumpScale);d.normalMap&&(h.normalMap.value=d.normalMap,h.normalScale.value.copy(d.normalScale));var Y;d.map?Y=d.map:d.specularMap?Y=d.specularMap:d.normalMap?Y=d.normalMap:d.bumpMap&&(Y=d.bumpMap);void 0!==Y&&(c=Y.offset,Y=Y.repeat,h.offsetRepeat.value.set(c.x,c.y,Y.x,Y.y));h.envMap.value=d.envMap;h.flipEnvMap.value=d.envMap instanceof THREE.WebGLRenderTargetCube?
1:-1;h.reflectivity.value=d.reflectivity;h.refractionRatio.value=d.refractionRatio;h.combine.value=d.combine;h.useRefract.value=d.envMap&&d.envMap.mapping instanceof THREE.CubeRefractionMapping}d instanceof THREE.LineBasicMaterial?(h.diffuse.value=d.color,h.opacity.value=d.opacity):d instanceof THREE.LineDashedMaterial?(h.diffuse.value=d.color,h.opacity.value=d.opacity,h.dashSize.value=d.dashSize,h.totalSize.value=d.dashSize+d.gapSize,h.scale.value=d.scale):d instanceof THREE.ParticleBasicMaterial?
(h.psColor.value=d.color,h.opacity.value=d.opacity,h.size.value=d.size,h.scale.value=L.height/2,h.map.value=d.map):d instanceof THREE.MeshPhongMaterial?(h.shininess.value=d.shininess,M.gammaInput?(h.ambient.value.copyGammaToLinear(d.ambient),h.emissive.value.copyGammaToLinear(d.emissive),h.specular.value.copyGammaToLinear(d.specular)):(h.ambient.value=d.ambient,h.emissive.value=d.emissive,h.specular.value=d.specular),d.wrapAround&&h.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshLambertMaterial?
(M.gammaInput?(h.ambient.value.copyGammaToLinear(d.ambient),h.emissive.value.copyGammaToLinear(d.emissive)):(h.ambient.value=d.ambient,h.emissive.value=d.emissive),d.wrapAround&&h.wrapRGB.value.copy(d.wrapRGB)):d instanceof THREE.MeshDepthMaterial?(h.mNear.value=a.near,h.mFar.value=a.far,h.opacity.value=d.opacity):d instanceof THREE.MeshNormalMaterial&&(h.opacity.value=d.opacity);if(e.receiveShadow&&!d._shadowPass&&h.shadowMatrix){c=Y=0;for(f=b.length;c<f;c++)if(j=b[c],j.castShadow&&(j instanceof
THREE.SpotLight||j instanceof THREE.DirectionalLight&&!j.shadowCascade))h.shadowMap.value[Y]=j.shadowMap,h.shadowMapSize.value[Y]=j.shadowMapSize,h.shadowMatrix.value[Y]=j.shadowMatrix,h.shadowDarkness.value[Y]=j.shadowDarkness,h.shadowBias.value[Y]=j.shadowBias,Y++}b=d.uniformsList;h=0;for(Y=b.length;h<Y;h++)if(f=g.uniforms[b[h][1]])if(c=b[h][0],l=c.type,j=c.value,"i"===l)n.uniform1i(f,j);else if("f"===l)n.uniform1f(f,j);else if("v2"===l)n.uniform2f(f,j.x,j.y);else if("v3"===l)n.uniform3f(f,j.x,
j.y,j.z);else if("v4"===l)n.uniform4f(f,j.x,j.y,j.z,j.w);else if("c"===l)n.uniform3f(f,j.r,j.g,j.b);else if("iv1"===l)n.uniform1iv(f,j);else if("iv"===l)n.uniform3iv(f,j);else if("fv1"===l)n.uniform1fv(f,j);else if("fv"===l)n.uniform3fv(f,j);else if("v2v"===l){void 0===c._array&&(c._array=new Float32Array(2*j.length));l=0;for(m=j.length;l<m;l++)Q=2*l,c._array[Q]=j[l].x,c._array[Q+1]=j[l].y;n.uniform2fv(f,c._array)}else if("v3v"===l){void 0===c._array&&(c._array=new Float32Array(3*j.length));l=0;for(m=
j.length;l<m;l++)Q=3*l,c._array[Q]=j[l].x,c._array[Q+1]=j[l].y,c._array[Q+2]=j[l].z;n.uniform3fv(f,c._array)}else if("v4v"===l){void 0===c._array&&(c._array=new Float32Array(4*j.length));l=0;for(m=j.length;l<m;l++)Q=4*l,c._array[Q]=j[l].x,c._array[Q+1]=j[l].y,c._array[Q+2]=j[l].z,c._array[Q+3]=j[l].w;n.uniform4fv(f,c._array)}else if("m4"===l)void 0===c._array&&(c._array=new Float32Array(16)),j.flattenToArray(c._array),n.uniformMatrix4fv(f,!1,c._array);else if("m4v"===l){void 0===c._array&&(c._array=
new Float32Array(16*j.length));l=0;for(m=j.length;l<m;l++)j[l].flattenToArrayOffset(c._array,16*l);n.uniformMatrix4fv(f,!1,c._array)}else if("t"===l){if(Q=j,j=D(),n.uniform1i(f,j),Q)if(Q.image instanceof Array&&6===Q.image.length){if(c=Q,f=j,6===c.image.length)if(c.needsUpdate){c.image.__webglTextureCube||(c.image.__webglTextureCube=n.createTexture(),M.info.memory.textures++);n.activeTexture(n.TEXTURE0+f);n.bindTexture(n.TEXTURE_CUBE_MAP,c.image.__webglTextureCube);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,
c.flipY);f=c instanceof THREE.CompressedTexture;j=[];for(l=0;6>l;l++)m=j,Q=l,M.autoScaleCubemaps&&!f?(s=c.image[l],t=Fc,s.width<=t&&s.height<=t||(y=Math.max(s.width,s.height),oa=Math.floor(s.width*t/y),t=Math.floor(s.height*t/y),y=document.createElement("canvas"),y.width=oa,y.height=t,y.getContext("2d").drawImage(s,0,0,s.width,s.height,0,0,oa,t),s=y)):s=c.image[l],m[Q]=s;l=j[0];m=0===(l.width&l.width-1)&&0===(l.height&l.height-1);Q=K(c.format);s=K(c.type);F(n.TEXTURE_CUBE_MAP,c,m);for(l=0;6>l;l++)if(f){t=
j[l].mipmaps;y=0;for(bb=t.length;y<bb;y++)oa=t[y],n.compressedTexImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+l,y,Q,oa.width,oa.height,0,oa.data)}else n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+l,0,Q,Q,s,j[l]);c.generateMipmaps&&m&&n.generateMipmap(n.TEXTURE_CUBE_MAP);c.needsUpdate=!1;if(c.onUpdate)c.onUpdate()}else n.activeTexture(n.TEXTURE0+f),n.bindTexture(n.TEXTURE_CUBE_MAP,c.image.__webglTextureCube)}else Q instanceof THREE.WebGLRenderTargetCube?(c=Q,n.activeTexture(n.TEXTURE0+j),n.bindTexture(n.TEXTURE_CUBE_MAP,
c.__webglTexture)):M.setTexture(Q,j)}else if("tv"===l){void 0===c._array&&(c._array=[]);l=0;for(m=c.value.length;l<m;l++)c._array[l]=D();n.uniform1iv(f,c._array);l=0;for(m=c.value.length;l<m;l++)Q=c.value[l],j=c._array[l],Q&&M.setTexture(Q,j)}if((d instanceof THREE.ShaderMaterial||d instanceof THREE.MeshPhongMaterial||d.envMap)&&null!==i.cameraPosition)b=a.matrixWorld.getPosition(),n.uniform3f(i.cameraPosition,b.x,b.y,b.z);(d instanceof THREE.MeshPhongMaterial||d instanceof THREE.MeshLambertMaterial||
d instanceof THREE.ShaderMaterial||d.skinning)&&null!==i.viewMatrix&&n.uniformMatrix4fv(i.viewMatrix,!1,a.matrixWorldInverse.elements)}n.uniformMatrix4fv(i.modelViewMatrix,!1,e._modelViewMatrix.elements);i.normalMatrix&&n.uniformMatrix3fv(i.normalMatrix,!1,e._normalMatrix.elements);null!==i.modelMatrix&&n.uniformMatrix4fv(i.modelMatrix,!1,e.matrixWorld.elements);return g}function D(){var a=Ia;a>=Hb&&console.warn("WebGLRenderer: trying to use "+a+" texture units while this GPU supports only "+Hb);
Ia+=1;return a}function C(a,b){a._modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,a.matrixWorld);a._normalMatrix.getInverse(a._modelViewMatrix);a._normalMatrix.transpose()}function u(a,b,c,d){a[b]=c.r*c.r*d;a[b+1]=c.g*c.g*d;a[b+2]=c.b*c.b*d}function E(a,b,c,d){a[b]=c.r*d;a[b+1]=c.g*d;a[b+2]=c.b*d}function z(a,b,c){eb!==a&&(a?n.enable(n.POLYGON_OFFSET_FILL):n.disable(n.POLYGON_OFFSET_FILL),eb=a);if(a&&(fb!==b||xb!==c))n.polygonOffset(b,c),fb=b,xb=c}function H(a){for(var a=a.split("\n"),b=0,c=
a.length;b<c;b++)a[b]=b+1+": "+a[b];return a.join("\n")}function O(a,b){var c;"fragment"===a?c=n.createShader(n.FRAGMENT_SHADER):"vertex"===a&&(c=n.createShader(n.VERTEX_SHADER));n.shaderSource(c,b);n.compileShader(c);return!n.getShaderParameter(c,n.COMPILE_STATUS)?(console.error(n.getShaderInfoLog(c)),console.error(H(b)),null):c}function F(a,b,c){c?(n.texParameteri(a,n.TEXTURE_WRAP_S,K(b.wrapS)),n.texParameteri(a,n.TEXTURE_WRAP_T,K(b.wrapT)),n.texParameteri(a,n.TEXTURE_MAG_FILTER,K(b.magFilter)),
n.texParameteri(a,n.TEXTURE_MIN_FILTER,K(b.minFilter))):(n.texParameteri(a,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(a,n.TEXTURE_MAG_FILTER,I(b.magFilter)),n.texParameteri(a,n.TEXTURE_MIN_FILTER,I(b.minFilter)));if(Rb&&b.type!==THREE.FloatType&&(1<b.anisotropy||b.__oldAnisotropy))n.texParameterf(a,Rb.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(b.anisotropy,mc)),b.__oldAnisotropy=b.anisotropy}function R(a,b){n.bindRenderbuffer(n.RENDERBUFFER,a);b.depthBuffer&&
!b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_COMPONENT16,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a)):b.depthBuffer&&b.stencilBuffer?(n.renderbufferStorage(n.RENDERBUFFER,n.DEPTH_STENCIL,b.width,b.height),n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a)):n.renderbufferStorage(n.RENDERBUFFER,n.RGBA4,b.width,b.height)}function I(a){return a===THREE.NearestFilter||a===THREE.NearestMipMapNearestFilter||
a===THREE.NearestMipMapLinearFilter?n.NEAREST:n.LINEAR}function K(a){if(a===THREE.RepeatWrapping)return n.REPEAT;if(a===THREE.ClampToEdgeWrapping)return n.CLAMP_TO_EDGE;if(a===THREE.MirroredRepeatWrapping)return n.MIRRORED_REPEAT;if(a===THREE.NearestFilter)return n.NEAREST;if(a===THREE.NearestMipMapNearestFilter)return n.NEAREST_MIPMAP_NEAREST;if(a===THREE.NearestMipMapLinearFilter)return n.NEAREST_MIPMAP_LINEAR;if(a===THREE.LinearFilter)return n.LINEAR;if(a===THREE.LinearMipMapNearestFilter)return n.LINEAR_MIPMAP_NEAREST;
if(a===THREE.LinearMipMapLinearFilter)return n.LINEAR_MIPMAP_LINEAR;if(a===THREE.UnsignedByteType)return n.UNSIGNED_BYTE;if(a===THREE.UnsignedShort4444Type)return n.UNSIGNED_SHORT_4_4_4_4;if(a===THREE.UnsignedShort5551Type)return n.UNSIGNED_SHORT_5_5_5_1;if(a===THREE.UnsignedShort565Type)return n.UNSIGNED_SHORT_5_6_5;if(a===THREE.ByteType)return n.BYTE;if(a===THREE.ShortType)return n.SHORT;if(a===THREE.UnsignedShortType)return n.UNSIGNED_SHORT;if(a===THREE.IntType)return n.INT;if(a===THREE.UnsignedIntType)return n.UNSIGNED_INT;
if(a===THREE.FloatType)return n.FLOAT;if(a===THREE.AlphaFormat)return n.ALPHA;if(a===THREE.RGBFormat)return n.RGB;if(a===THREE.RGBAFormat)return n.RGBA;if(a===THREE.LuminanceFormat)return n.LUMINANCE;if(a===THREE.LuminanceAlphaFormat)return n.LUMINANCE_ALPHA;if(a===THREE.AddEquation)return n.FUNC_ADD;if(a===THREE.SubtractEquation)return n.FUNC_SUBTRACT;if(a===THREE.ReverseSubtractEquation)return n.FUNC_REVERSE_SUBTRACT;if(a===THREE.ZeroFactor)return n.ZERO;if(a===THREE.OneFactor)return n.ONE;if(a===
THREE.SrcColorFactor)return n.SRC_COLOR;if(a===THREE.OneMinusSrcColorFactor)return n.ONE_MINUS_SRC_COLOR;if(a===THREE.SrcAlphaFactor)return n.SRC_ALPHA;if(a===THREE.OneMinusSrcAlphaFactor)return n.ONE_MINUS_SRC_ALPHA;if(a===THREE.DstAlphaFactor)return n.DST_ALPHA;if(a===THREE.OneMinusDstAlphaFactor)return n.ONE_MINUS_DST_ALPHA;if(a===THREE.DstColorFactor)return n.DST_COLOR;if(a===THREE.OneMinusDstColorFactor)return n.ONE_MINUS_DST_COLOR;if(a===THREE.SrcAlphaSaturateFactor)return n.SRC_ALPHA_SATURATE;
if(void 0!==gb){if(a===THREE.RGB_S3TC_DXT1_Format)return gb.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT1_Format)return gb.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===THREE.RGBA_S3TC_DXT3_Format)return gb.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===THREE.RGBA_S3TC_DXT5_Format)return gb.COMPRESSED_RGBA_S3TC_DXT5_EXT}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var a=a||{},L=void 0!==a.canvas?a.canvas:document.createElement("canvas"),S=void 0!==a.precision?a.precision:"highp",ca=void 0!==
a.alpha?a.alpha:!0,Y=void 0!==a.premultipliedAlpha?a.premultipliedAlpha:!0,N=void 0!==a.antialias?a.antialias:!1,G=void 0!==a.stencil?a.stencil:!0,ha=void 0!==a.preserveDrawingBuffer?a.preserveDrawingBuffer:!1,la=void 0!==a.clearColor?new THREE.Color(a.clearColor):new THREE.Color(0),wa=void 0!==a.clearAlpha?a.clearAlpha:0;this.domElement=L;this.context=null;this.devicePixelRatio=void 0!==a.devicePixelRatio?a.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.autoUpdateScene=
this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,
geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var M=this,ia=[],Aa=0,va=null,Na=null,Fa=-1,ba=null,xa=null,Ba=0,Ia=0,P=-1,pa=-1,na=-1,ka=-1,ra=-1,Va=-1,Qa=-1,qa=-1,eb=null,fb=null,xb=null,Ma=null,sa=0,La=0,Ca=0,ab=0,tb=0,Q=0,oa={},bb=new THREE.Frustum,Mb=new THREE.Matrix4,Nb=new THREE.Matrix4,Wa=new THREE.Vector3,Da=new THREE.Vector3,Gb=!0,pb={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],
positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},n,fc,yb,Rb,gb;try{if(!(n=L.getContext("experimental-webgl",{alpha:ca,premultipliedAlpha:Y,antialias:N,stencil:G,preserveDrawingBuffer:ha})))throw"Error creating WebGL context.";}catch(Sb){console.error(Sb)}fc=n.getExtension("OES_texture_float");yb=n.getExtension("OES_standard_derivatives");Rb=n.getExtension("EXT_texture_filter_anisotropic")||n.getExtension("MOZ_EXT_texture_filter_anisotropic")||
n.getExtension("WEBKIT_EXT_texture_filter_anisotropic");gb=n.getExtension("WEBGL_compressed_texture_s3tc")||n.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||n.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");fc||console.log("THREE.WebGLRenderer: Float textures not supported.");yb||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");Rb||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");gb||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");
n.clearColor(0,0,0,1);n.clearDepth(1);n.clearStencil(0);n.enable(n.DEPTH_TEST);n.depthFunc(n.LEQUAL);n.frontFace(n.CCW);n.cullFace(n.BACK);n.enable(n.CULL_FACE);n.enable(n.BLEND);n.blendEquation(n.FUNC_ADD);n.blendFunc(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA);n.clearColor(la.r,la.g,la.b,wa);this.context=n;var Hb=n.getParameter(n.MAX_TEXTURE_IMAGE_UNITS),Ob=n.getParameter(n.MAX_VERTEX_TEXTURE_IMAGE_UNITS);n.getParameter(n.MAX_TEXTURE_SIZE);var Fc=n.getParameter(n.MAX_CUBE_MAP_TEXTURE_SIZE),mc=Rb?n.getParameter(Rb.MAX_TEXTURE_MAX_ANISOTROPY_EXT):
0,Fb=0<Ob,kb=Fb&&fc;gb&&n.getParameter(n.COMPRESSED_TEXTURE_FORMATS);var qb=n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_FLOAT),Db=n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.MEDIUM_FLOAT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.LOW_FLOAT);var gc=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_FLOAT),aa=n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_FLOAT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.LOW_FLOAT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.HIGH_INT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,
n.MEDIUM_INT);n.getShaderPrecisionFormat(n.VERTEX_SHADER,n.LOW_INT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.HIGH_INT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.MEDIUM_INT);n.getShaderPrecisionFormat(n.FRAGMENT_SHADER,n.LOW_INT);var Z=0<qb.precision&&0<gc.precision,ja=0<Db.precision&&0<aa.precision;"highp"===S&&!Z&&(ja?(S="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(S="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===
S&&!ja&&(S="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return n};this.supportsVertexTextures=function(){return Fb};this.supportsFloatTextures=function(){return fc};this.supportsStandardDerivatives=function(){return yb};this.supportsCompressedTextureS3TC=function(){return gb};this.getMaxAnisotropy=function(){return mc};this.getPrecision=function(){return S};this.setSize=function(a,b){L.width=a*this.devicePixelRatio;L.height=b*this.devicePixelRatio;
L.style.width=a+"px";L.style.height=b+"px";this.setViewport(0,0,L.width,L.height)};this.setViewport=function(a,b,c,d){sa=void 0!==a?a:0;La=void 0!==b?b:0;Ca=void 0!==c?c:L.width;ab=void 0!==d?d:L.height;n.viewport(sa,La,Ca,ab)};this.setScissor=function(a,b,c,d){n.scissor(a,b,c,d)};this.enableScissorTest=function(a){a?n.enable(n.SCISSOR_TEST):n.disable(n.SCISSOR_TEST)};this.setClearColorHex=function(a,b){la.setHex(a);wa=b;n.clearColor(la.r,la.g,la.b,wa)};this.setClearColor=function(a,b){la.copy(a);
wa=b;n.clearColor(la.r,la.g,la.b,wa)};this.getClearColor=function(){return la};this.getClearAlpha=function(){return wa};this.clear=function(a,b,c){var d=0;if(void 0===a||a)d|=n.COLOR_BUFFER_BIT;if(void 0===b||b)d|=n.DEPTH_BUFFER_BIT;if(void 0===c||c)d|=n.STENCIL_BUFFER_BIT;n.clear(d)};this.clearTarget=function(a,b,c,d){this.setRenderTarget(a);this.clear(b,c,d)};this.addPostPlugin=function(a){a.init(this);this.renderPluginsPost.push(a)};this.addPrePlugin=function(a){a.init(this);this.renderPluginsPre.push(a)};
this.updateShadowMap=function(a,b){va=null;Fa=ba=qa=Qa=na=-1;Gb=!0;pa=P=-1;this.shadowMapPlugin.update(a,b)};var hb=function(a){a=a.target;a.removeEventListener("dispose",hb);a.__webglInit=void 0;void 0!==a.__webglVertexBuffer&&n.deleteBuffer(a.__webglVertexBuffer);void 0!==a.__webglNormalBuffer&&n.deleteBuffer(a.__webglNormalBuffer);void 0!==a.__webglTangentBuffer&&n.deleteBuffer(a.__webglTangentBuffer);void 0!==a.__webglColorBuffer&&n.deleteBuffer(a.__webglColorBuffer);void 0!==a.__webglUVBuffer&&
n.deleteBuffer(a.__webglUVBuffer);void 0!==a.__webglUV2Buffer&&n.deleteBuffer(a.__webglUV2Buffer);void 0!==a.__webglSkinIndicesBuffer&&n.deleteBuffer(a.__webglSkinIndicesBuffer);void 0!==a.__webglSkinWeightsBuffer&&n.deleteBuffer(a.__webglSkinWeightsBuffer);void 0!==a.__webglFaceBuffer&&n.deleteBuffer(a.__webglFaceBuffer);void 0!==a.__webglLineBuffer&&n.deleteBuffer(a.__webglLineBuffer);void 0!==a.__webglLineDistanceBuffer&&n.deleteBuffer(a.__webglLineDistanceBuffer);if(void 0!==a.geometryGroups)for(var c in a.geometryGroups){var d=
a.geometryGroups[c];if(void 0!==d.numMorphTargets)for(var e=0,f=d.numMorphTargets;e<f;e++)n.deleteBuffer(d.__webglMorphTargetsBuffers[e]);if(void 0!==d.numMorphNormals){e=0;for(f=d.numMorphNormals;e<f;e++)n.deleteBuffer(d.__webglMorphNormalsBuffers[e])}b(d)}b(a);M.info.memory.geometries--},lb=function(a){a=a.target;a.removeEventListener("dispose",lb);a.image&&a.image.__webglTextureCube?n.deleteTexture(a.image.__webglTextureCube):a.__webglInit&&(a.__webglInit=!1,n.deleteTexture(a.__webglTexture));
M.info.memory.textures--},Xa=function(a){a=a.target;a.removeEventListener("dispose",Xa);if(a&&a.__webglTexture)if(n.deleteTexture(a.__webglTexture),a instanceof THREE.WebGLRenderTargetCube)for(var b=0;6>b;b++)n.deleteFramebuffer(a.__webglFramebuffer[b]),n.deleteRenderbuffer(a.__webglRenderbuffer[b]);else n.deleteFramebuffer(a.__webglFramebuffer),n.deleteRenderbuffer(a.__webglRenderbuffer);M.info.memory.textures--},Ya=function(a){a=a.target;a.removeEventListener("dispose",Ya);Za(a)},Za=function(a){var b=
a.program;if(void 0!==b){a.program=void 0;var c,d,e=!1,a=0;for(c=ia.length;a<c;a++)if(d=ia[a],d.program===b){d.usedTimes--;0===d.usedTimes&&(e=!0);break}if(!0===e){e=[];a=0;for(c=ia.length;a<c;a++)d=ia[a],d.program!==b&&e.push(d);ia=e;n.deleteProgram(b);M.info.memory.programs--}}};this.renderBufferImmediate=function(a,b,c){a.hasPositions&&!a.__webglVertexBuffer&&(a.__webglVertexBuffer=n.createBuffer());a.hasNormals&&!a.__webglNormalBuffer&&(a.__webglNormalBuffer=n.createBuffer());a.hasUvs&&!a.__webglUvBuffer&&
(a.__webglUvBuffer=n.createBuffer());a.hasColors&&!a.__webglColorBuffer&&(a.__webglColorBuffer=n.createBuffer());a.hasPositions&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,a.positionArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.position),n.vertexAttribPointer(b.attributes.position,3,n.FLOAT,!1,0,0));if(a.hasNormals){n.bindBuffer(n.ARRAY_BUFFER,a.__webglNormalBuffer);if(c.shading===THREE.FlatShading){var d,e,f,g,i,h,j,k,l,m,q,r=3*a.count;for(q=0;q<
r;q+=9)m=a.normalArray,d=m[q],e=m[q+1],f=m[q+2],g=m[q+3],h=m[q+4],k=m[q+5],i=m[q+6],j=m[q+7],l=m[q+8],d=(d+g+i)/3,e=(e+h+j)/3,f=(f+k+l)/3,m[q]=d,m[q+1]=e,m[q+2]=f,m[q+3]=d,m[q+4]=e,m[q+5]=f,m[q+6]=d,m[q+7]=e,m[q+8]=f}n.bufferData(n.ARRAY_BUFFER,a.normalArray,n.DYNAMIC_DRAW);n.enableVertexAttribArray(b.attributes.normal);n.vertexAttribPointer(b.attributes.normal,3,n.FLOAT,!1,0,0)}a.hasUvs&&c.map&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglUvBuffer),n.bufferData(n.ARRAY_BUFFER,a.uvArray,n.DYNAMIC_DRAW),
n.enableVertexAttribArray(b.attributes.uv),n.vertexAttribPointer(b.attributes.uv,2,n.FLOAT,!1,0,0));a.hasColors&&c.vertexColors!==THREE.NoColors&&(n.bindBuffer(n.ARRAY_BUFFER,a.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,a.colorArray,n.DYNAMIC_DRAW),n.enableVertexAttribArray(b.attributes.color),n.vertexAttribPointer(b.attributes.color,3,n.FLOAT,!1,0,0));n.drawArrays(n.TRIANGLES,0,a.count);a.count=0};this.renderBufferDirect=function(a,b,c,d,e,f){if(!1!==d.visible)if(c=y(a,b,c,d,f),a=c.attributes,
b=!1,d=16777215*e.id+2*c.id+(d.wireframe?1:0),d!==ba&&(ba=d,b=!0),b&&k(),f instanceof THREE.Mesh)if(f=e.attributes.index){d=e.offsets;1<d.length&&(b=!0);for(var c=0,g=d.length;c<g;c++){var i=d[c].index;if(b){var h=e.attributes.position,l=h.itemSize;n.bindBuffer(n.ARRAY_BUFFER,h.buffer);j(a.position);n.vertexAttribPointer(a.position,l,n.FLOAT,!1,0,4*i*l);l=e.attributes.normal;if(0<=a.normal&&l){var m=l.itemSize;n.bindBuffer(n.ARRAY_BUFFER,l.buffer);j(a.normal);n.vertexAttribPointer(a.normal,m,n.FLOAT,
!1,0,4*i*m)}l=e.attributes.uv;0<=a.uv&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.uv),n.vertexAttribPointer(a.uv,m,n.FLOAT,!1,0,4*i*m));l=e.attributes.color;0<=a.color&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,4*i*m));l=e.attributes.tangent;0<=a.tangent&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.tangent),n.vertexAttribPointer(a.tangent,m,n.FLOAT,!1,0,4*i*m));n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,f.buffer)}n.drawElements(n.TRIANGLES,
d[c].count,n.UNSIGNED_SHORT,2*d[c].start);M.info.render.calls++;M.info.render.vertices+=d[c].count;M.info.render.faces+=d[c].count/3}}else b&&(h=e.attributes.position,l=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),j(a.position),n.vertexAttribPointer(a.position,l,n.FLOAT,!1,0,0),l=e.attributes.normal,0<=a.normal&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.normal),n.vertexAttribPointer(a.normal,m,n.FLOAT,!1,0,0)),l=e.attributes.uv,0<=a.uv&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,
l.buffer),j(a.uv),n.vertexAttribPointer(a.uv,m,n.FLOAT,!1,0,0)),l=e.attributes.color,0<=a.color&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,0)),l=e.attributes.tangent,0<=a.tangent&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.tangent),n.vertexAttribPointer(a.tangent,m,n.FLOAT,!1,0,0))),n.drawArrays(n.TRIANGLES,0,h.numItems/3),M.info.render.calls++,M.info.render.vertices+=h.numItems/3,M.info.render.faces+=h.numItems/
3/3;else f instanceof THREE.ParticleSystem?b&&(h=e.attributes.position,l=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,h.buffer),j(a.position),n.vertexAttribPointer(a.position,l,n.FLOAT,!1,0,0),l=e.attributes.color,0<=a.color&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,0)),n.drawArrays(n.POINTS,0,h.numItems/3),M.info.render.calls++,M.info.render.points+=h.numItems/3):f instanceof THREE.Line&&b&&(h=e.attributes.position,l=h.itemSize,n.bindBuffer(n.ARRAY_BUFFER,
h.buffer),j(a.position),n.vertexAttribPointer(a.position,l,n.FLOAT,!1,0,0),l=e.attributes.color,0<=a.color&&l&&(m=l.itemSize,n.bindBuffer(n.ARRAY_BUFFER,l.buffer),j(a.color),n.vertexAttribPointer(a.color,m,n.FLOAT,!1,0,0)),n.drawArrays(n.LINE_STRIP,0,h.numItems/3),M.info.render.calls++,M.info.render.points+=h.numItems)};this.renderBuffer=function(a,b,c,d,e,f){if(!1!==d.visible){var g,h,c=y(a,b,c,d,f),b=c.attributes,a=!1,c=16777215*e.id+2*c.id+(d.wireframe?1:0);c!==ba&&(ba=c,a=!0);a&&k();if(!d.morphTargets&&
0<=b.position)a&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),j(b.position),n.vertexAttribPointer(b.position,3,n.FLOAT,!1,0,0));else if(f.morphTargetBase){c=d.program.attributes;-1!==f.morphTargetBase&&0<=c.position?(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[f.morphTargetBase]),j(c.position),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0)):0<=c.position&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglVertexBuffer),j(c.position),n.vertexAttribPointer(c.position,3,n.FLOAT,!1,0,0));if(f.morphTargetForcedOrder.length){var i=
0;h=f.morphTargetForcedOrder;for(g=f.morphTargetInfluences;i<d.numSupportedMorphTargets&&i<h.length;)0<=c["morphTarget"+i]&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[h[i]]),j(c["morphTarget"+i]),n.vertexAttribPointer(c["morphTarget"+i],3,n.FLOAT,!1,0,0)),0<=c["morphNormal"+i]&&d.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[h[i]]),j(c["morphNormal"+i]),n.vertexAttribPointer(c["morphNormal"+i],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[h[i]],i++}else{h=
[];g=f.morphTargetInfluences;var m,q=g.length;for(m=0;m<q;m++)i=g[m],0<i&&h.push([i,m]);h.length>d.numSupportedMorphTargets?(h.sort(l),h.length=d.numSupportedMorphTargets):h.length>d.numSupportedMorphNormals?h.sort(l):0===h.length&&h.push([0,0]);for(i=0;i<d.numSupportedMorphTargets;)h[i]?(m=h[i][1],0<=c["morphTarget"+i]&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphTargetsBuffers[m]),j(c["morphTarget"+i]),n.vertexAttribPointer(c["morphTarget"+i],3,n.FLOAT,!1,0,0)),0<=c["morphNormal"+i]&&d.morphNormals&&
(n.bindBuffer(n.ARRAY_BUFFER,e.__webglMorphNormalsBuffers[m]),j(c["morphNormal"+i]),n.vertexAttribPointer(c["morphNormal"+i],3,n.FLOAT,!1,0,0)),f.__webglMorphTargetInfluences[i]=g[m]):f.__webglMorphTargetInfluences[i]=0,i++}null!==d.program.uniforms.morphTargetInfluences&&n.uniform1fv(d.program.uniforms.morphTargetInfluences,f.__webglMorphTargetInfluences)}if(a){if(e.__webglCustomAttributesList){g=0;for(h=e.__webglCustomAttributesList.length;g<h;g++)c=e.__webglCustomAttributesList[g],0<=b[c.buffer.belongsToAttribute]&&
(n.bindBuffer(n.ARRAY_BUFFER,c.buffer),j(b[c.buffer.belongsToAttribute]),n.vertexAttribPointer(b[c.buffer.belongsToAttribute],c.size,n.FLOAT,!1,0,0))}0<=b.color&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglColorBuffer),j(b.color),n.vertexAttribPointer(b.color,3,n.FLOAT,!1,0,0));0<=b.normal&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglNormalBuffer),j(b.normal),n.vertexAttribPointer(b.normal,3,n.FLOAT,!1,0,0));0<=b.tangent&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglTangentBuffer),j(b.tangent),n.vertexAttribPointer(b.tangent,
4,n.FLOAT,!1,0,0));0<=b.uv&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUVBuffer),j(b.uv),n.vertexAttribPointer(b.uv,2,n.FLOAT,!1,0,0));0<=b.uv2&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglUV2Buffer),j(b.uv2),n.vertexAttribPointer(b.uv2,2,n.FLOAT,!1,0,0));d.skinning&&(0<=b.skinIndex&&0<=b.skinWeight)&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinIndicesBuffer),j(b.skinIndex),n.vertexAttribPointer(b.skinIndex,4,n.FLOAT,!1,0,0),n.bindBuffer(n.ARRAY_BUFFER,e.__webglSkinWeightsBuffer),j(b.skinWeight),n.vertexAttribPointer(b.skinWeight,
4,n.FLOAT,!1,0,0));0<=b.lineDistance&&(n.bindBuffer(n.ARRAY_BUFFER,e.__webglLineDistanceBuffer),j(b.lineDistance),n.vertexAttribPointer(b.lineDistance,1,n.FLOAT,!1,0,0))}f instanceof THREE.Mesh?(d.wireframe?(d=d.wireframeLinewidth,d!==Ma&&(n.lineWidth(d),Ma=d),a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglLineBuffer),n.drawElements(n.LINES,e.__webglLineCount,n.UNSIGNED_SHORT,0)):(a&&n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,e.__webglFaceBuffer),n.drawElements(n.TRIANGLES,e.__webglFaceCount,n.UNSIGNED_SHORT,
0)),M.info.render.calls++,M.info.render.vertices+=e.__webglFaceCount,M.info.render.faces+=e.__webglFaceCount/3):f instanceof THREE.Line?(f=f.type===THREE.LineStrip?n.LINE_STRIP:n.LINES,d=d.linewidth,d!==Ma&&(n.lineWidth(d),Ma=d),n.drawArrays(f,0,e.__webglLineCount),M.info.render.calls++):f instanceof THREE.ParticleSystem?(n.drawArrays(n.POINTS,0,e.__webglParticleCount),M.info.render.calls++,M.info.render.points+=e.__webglParticleCount):f instanceof THREE.Ribbon&&(n.drawArrays(n.TRIANGLE_STRIP,0,e.__webglVertexCount),
M.info.render.calls++)}};this.render=function(a,b,c,d){if(!1===b instanceof THREE.Camera)console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");else{var e,f,g,i,h=a.__lights,j=a.fog;Fa=-1;Gb=!0;this.autoUpdateScene&&a.updateMatrixWorld();void 0===b.parent&&b.updateMatrixWorld();b.matrixWorldInverse.getInverse(b.matrixWorld);Mb.multiplyMatrices(b.projectionMatrix,b.matrixWorldInverse);bb.setFromMatrix(Mb);this.autoUpdateObjects&&this.initWebGLObjects(a);q(this.renderPluginsPre,
a,b);M.info.render.calls=0;M.info.render.vertices=0;M.info.render.faces=0;M.info.render.points=0;this.setRenderTarget(c);(this.autoClear||d)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);i=a.__webglObjects;d=0;for(e=i.length;d<e;d++)if(f=i[d],g=f.object,f.render=!1,g.visible&&(!(g instanceof THREE.Mesh||g instanceof THREE.ParticleSystem)||!g.frustumCulled||bb.intersectsObject(g))){C(g,b);var k=f,l=k.buffer,Q=void 0,s=Q=void 0,s=k.object.material;if(s instanceof THREE.MeshFaceMaterial)Q=
l.materialIndex,Q=s.materials[Q],Q.transparent?(k.transparent=Q,k.opaque=null):(k.opaque=Q,k.transparent=null);else if(Q=s)Q.transparent?(k.transparent=Q,k.opaque=null):(k.opaque=Q,k.transparent=null);f.render=!0;!0===this.sortObjects&&(null!==g.renderDepth?f.z=g.renderDepth:(Wa.copy(g.matrixWorld.getPosition()),Wa.applyProjection(Mb),f.z=Wa.z),f.id=g.id)}this.sortObjects&&i.sort(m);i=a.__webglObjectsImmediate;d=0;for(e=i.length;d<e;d++)f=i[d],g=f.object,g.visible&&(C(g,b),g=f.object.material,g.transparent?
(f.transparent=g,f.opaque=null):(f.opaque=g,f.transparent=null));a.overrideMaterial?(d=a.overrideMaterial,this.setBlending(d.blending,d.blendEquation,d.blendSrc,d.blendDst),this.setDepthTest(d.depthTest),this.setDepthWrite(d.depthWrite),z(d.polygonOffset,d.polygonOffsetFactor,d.polygonOffsetUnits),p(a.__webglObjects,!1,"",b,h,j,!0,d),r(a.__webglObjectsImmediate,"",b,h,j,!1,d)):(d=null,this.setBlending(THREE.NoBlending),p(a.__webglObjects,!0,"opaque",b,h,j,!1,d),r(a.__webglObjectsImmediate,"opaque",
b,h,j,!1,d),p(a.__webglObjects,!1,"transparent",b,h,j,!0,d),r(a.__webglObjectsImmediate,"transparent",b,h,j,!0,d));q(this.renderPluginsPost,a,b);c&&(c.generateMipmaps&&c.minFilter!==THREE.NearestFilter&&c.minFilter!==THREE.LinearFilter)&&(c instanceof THREE.WebGLRenderTargetCube?(n.bindTexture(n.TEXTURE_CUBE_MAP,c.__webglTexture),n.generateMipmap(n.TEXTURE_CUBE_MAP),n.bindTexture(n.TEXTURE_CUBE_MAP,null)):(n.bindTexture(n.TEXTURE_2D,c.__webglTexture),n.generateMipmap(n.TEXTURE_2D),n.bindTexture(n.TEXTURE_2D,
null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(a,b,c,d,e){var f=y(a,b,c,d,e);ba=-1;M.setMaterialFaces(d);e.immediateRenderCallback?e.immediateRenderCallback(f,n,bb):e.render(function(a){M.renderBufferImmediate(a,f,d)})};this.initWebGLObjects=function(a){a.__webglObjects||(a.__webglObjects=[],a.__webglObjectsImmediate=[],a.__webglSprites=[],a.__webglFlares=[]);for(;a.__objectsAdded.length;){var b=a.__objectsAdded[0],j=a,k=void 0,m=void 0,q=void 0,r=void 0;
if(!b.__webglInit)if(b.__webglInit=!0,b._modelViewMatrix=new THREE.Matrix4,b._normalMatrix=new THREE.Matrix3,void 0!==b.geometry&&void 0===b.geometry.__webglInit&&(b.geometry.__webglInit=!0,b.geometry.addEventListener("dispose",hb)),b instanceof THREE.Mesh)if(m=b.geometry,q=b.material,m instanceof THREE.Geometry){if(void 0===m.geometryGroups){var p=m,Q=void 0,oa=void 0,y=void 0,bb=void 0,u=void 0,z=void 0,D={},C=p.morphTargets.length,E=p.morphNormals.length,H=q instanceof THREE.MeshFaceMaterial;p.geometryGroups=
{};Q=0;for(oa=p.faces.length;Q<oa;Q++)y=p.faces[Q],bb=H?y.materialIndex:0,void 0===D[bb]&&(D[bb]={hash:bb,counter:0}),z=D[bb].hash+"_"+D[bb].counter,void 0===p.geometryGroups[z]&&(p.geometryGroups[z]={faces3:[],faces4:[],materialIndex:bb,vertices:0,numMorphTargets:C,numMorphNormals:E}),u=y instanceof THREE.Face3?3:4,65535<p.geometryGroups[z].vertices+u&&(D[bb].counter+=1,z=D[bb].hash+"_"+D[bb].counter,void 0===p.geometryGroups[z]&&(p.geometryGroups[z]={faces3:[],faces4:[],materialIndex:bb,vertices:0,
numMorphTargets:C,numMorphNormals:E})),y instanceof THREE.Face3?p.geometryGroups[z].faces3.push(Q):p.geometryGroups[z].faces4.push(Q),p.geometryGroups[z].vertices+=u;p.geometryGroupsList=[];var F=void 0;for(F in p.geometryGroups)p.geometryGroups[F].id=Ba++,p.geometryGroupsList.push(p.geometryGroups[F])}for(k in m.geometryGroups)if(r=m.geometryGroups[k],!r.__webglVertexBuffer){var G=r;G.__webglVertexBuffer=n.createBuffer();G.__webglNormalBuffer=n.createBuffer();G.__webglTangentBuffer=n.createBuffer();
G.__webglColorBuffer=n.createBuffer();G.__webglUVBuffer=n.createBuffer();G.__webglUV2Buffer=n.createBuffer();G.__webglSkinIndicesBuffer=n.createBuffer();G.__webglSkinWeightsBuffer=n.createBuffer();G.__webglFaceBuffer=n.createBuffer();G.__webglLineBuffer=n.createBuffer();var I=void 0,Da=void 0;if(G.numMorphTargets){G.__webglMorphTargetsBuffers=[];I=0;for(Da=G.numMorphTargets;I<Da;I++)G.__webglMorphTargetsBuffers.push(n.createBuffer())}if(G.numMorphNormals){G.__webglMorphNormalsBuffers=[];I=0;for(Da=
G.numMorphNormals;I<Da;I++)G.__webglMorphNormalsBuffers.push(n.createBuffer())}M.info.memory.geometries++;d(r,b);m.verticesNeedUpdate=!0;m.morphTargetsNeedUpdate=!0;m.elementsNeedUpdate=!0;m.uvsNeedUpdate=!0;m.normalsNeedUpdate=!0;m.tangentsNeedUpdate=!0;m.colorsNeedUpdate=!0}}else m instanceof THREE.BufferGeometry&&i(m);else if(b instanceof THREE.Ribbon){if(m=b.geometry,!m.__webglVertexBuffer){var K=m;K.__webglVertexBuffer=n.createBuffer();K.__webglColorBuffer=n.createBuffer();K.__webglNormalBuffer=
n.createBuffer();M.info.memory.geometries++;var L=m,O=b,pb=L.vertices.length;L.__vertexArray=new Float32Array(3*pb);L.__colorArray=new Float32Array(3*pb);L.__normalArray=new Float32Array(3*pb);L.__webglVertexCount=pb;c(L,O);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0;m.normalsNeedUpdate=!0}}else if(b instanceof THREE.Line){if(m=b.geometry,!m.__webglVertexBuffer)if(m instanceof THREE.Geometry){var S=m;S.__webglVertexBuffer=n.createBuffer();S.__webglColorBuffer=n.createBuffer();S.__webglLineDistanceBuffer=
n.createBuffer();M.info.memory.geometries++;var N=m,ia=b,R=N.vertices.length;N.__vertexArray=new Float32Array(3*R);N.__colorArray=new Float32Array(3*R);N.__lineDistanceArray=new Float32Array(1*R);N.__webglLineCount=R;c(N,ia);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0;m.lineDistancesNeedUpdate=!0}else m instanceof THREE.BufferGeometry&&i(m)}else if(b instanceof THREE.ParticleSystem&&(m=b.geometry,!m.__webglVertexBuffer))if(m instanceof THREE.Geometry){var ca=m;ca.__webglVertexBuffer=n.createBuffer();
ca.__webglColorBuffer=n.createBuffer();M.info.memory.geometries++;var Y=m,Gb=b,aa=Y.vertices.length;Y.__vertexArray=new Float32Array(3*aa);Y.__colorArray=new Float32Array(3*aa);Y.__sortArray=[];Y.__webglParticleCount=aa;c(Y,Gb);m.verticesNeedUpdate=!0;m.colorsNeedUpdate=!0}else m instanceof THREE.BufferGeometry&&i(m);if(!b.__webglActive){if(b instanceof THREE.Mesh)if(m=b.geometry,m instanceof THREE.BufferGeometry)s(j.__webglObjects,m,b);else{if(m instanceof THREE.Geometry)for(k in m.geometryGroups)r=
m.geometryGroups[k],s(j.__webglObjects,r,b)}else b instanceof THREE.Ribbon||b instanceof THREE.Line||b instanceof THREE.ParticleSystem?(m=b.geometry,s(j.__webglObjects,m,b)):b instanceof THREE.ImmediateRenderObject||b.immediateRenderCallback?j.__webglObjectsImmediate.push({object:b,opaque:null,transparent:null}):b instanceof THREE.Sprite?j.__webglSprites.push(b):b instanceof THREE.LensFlare&&j.__webglFlares.push(b);b.__webglActive=!0}a.__objectsAdded.splice(0,1)}for(;a.__objectsRemoved.length;){var Z=
a.__objectsRemoved[0],ha=a;Z instanceof THREE.Mesh||Z instanceof THREE.ParticleSystem||Z instanceof THREE.Ribbon||Z instanceof THREE.Line?v(ha.__webglObjects,Z):Z instanceof THREE.Sprite?w(ha.__webglSprites,Z):Z instanceof THREE.LensFlare?w(ha.__webglFlares,Z):(Z instanceof THREE.ImmediateRenderObject||Z.immediateRenderCallback)&&v(ha.__webglObjectsImmediate,Z);Z.__webglActive=!1;a.__objectsRemoved.splice(0,1)}for(var fc=0,Aa=a.__webglObjects.length;fc<Aa;fc++){var yb=a.__webglObjects[fc].object,
T=yb.geometry,Rb=void 0,va=void 0,ba=void 0;if(yb instanceof THREE.Mesh)if(T instanceof THREE.BufferGeometry)(T.verticesNeedUpdate||T.elementsNeedUpdate||T.uvsNeedUpdate||T.normalsNeedUpdate||T.colorsNeedUpdate||T.tangentsNeedUpdate)&&h(T,n.DYNAMIC_DRAW,!T.dynamic),T.verticesNeedUpdate=!1,T.elementsNeedUpdate=!1,T.uvsNeedUpdate=!1,T.normalsNeedUpdate=!1,T.colorsNeedUpdate=!1,T.tangentsNeedUpdate=!1;else{for(var xa=0,la=T.geometryGroupsList.length;xa<la;xa++)if(Rb=T.geometryGroupsList[xa],ba=e(yb,
Rb),T.buffersNeedUpdate&&d(Rb,yb),va=ba.attributes&&t(ba),T.verticesNeedUpdate||T.morphTargetsNeedUpdate||T.elementsNeedUpdate||T.uvsNeedUpdate||T.normalsNeedUpdate||T.colorsNeedUpdate||T.tangentsNeedUpdate||va){var P=Rb,ka=yb,gb=n.DYNAMIC_DRAW,Na=!T.dynamic,ja=ba;if(P.__inittedArrays){var wa=g(ja),pa=ja.vertexColors?ja.vertexColors:!1,ra=f(ja),Fa=wa===THREE.SmoothShading,J=void 0,$=void 0,na=void 0,U=void 0,Ia=void 0,Sb=void 0,qa=void 0,mc=void 0,sa=void 0,La=void 0,Va=void 0,V=void 0,W=void 0,X=
void 0,ua=void 0,Ca=void 0,kb=void 0,qb=void 0,ab=void 0,Ma=void 0,Hb=void 0,Qa=void 0,lb=void 0,Xa=void 0,Ya=void 0,Za=void 0,tb=void 0,eb=void 0,fb=void 0,Fb=void 0,xb=void 0,Ob=void 0,Ub=void 0,Vb=void 0,Db=void 0,Ea=void 0,Fc=void 0,hc=void 0,rc=void 0,sc=void 0,mb=void 0,gc=void 0,ib=void 0,jb=void 0,ic=void 0,ac=void 0,$a=0,db=0,bc=0,cc=0,Ib=0,ub=0,Ja=0,wb=0,cb=0,ea=0,ma=0,B=0,Ga=void 0,nb=P.__vertexArray,wc=P.__uvArray,xc=P.__uv2Array,Jb=P.__normalArray,Ra=P.__tangentArray,ob=P.__colorArray,
Sa=P.__skinIndexArray,Ta=P.__skinWeightArray,Xc=P.__morphTargetsArrays,Yc=P.__morphNormalsArrays,Zc=P.__webglCustomAttributesList,A=void 0,Wb=P.__faceArray,Eb=P.__lineArray,zb=ka.geometry,td=zb.elementsNeedUpdate,gd=zb.uvsNeedUpdate,ud=zb.normalsNeedUpdate,vd=zb.tangentsNeedUpdate,wd=zb.colorsNeedUpdate,xd=zb.morphTargetsNeedUpdate,nc=zb.vertices,ya=P.faces3,za=P.faces4,vb=zb.faces,$c=zb.faceVertexUvs[0],ad=zb.faceVertexUvs[1],oc=zb.skinIndices,jc=zb.skinWeights,kc=zb.morphTargets,Gc=zb.morphNormals;
if(zb.verticesNeedUpdate){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],V=nc[U.a],W=nc[U.b],X=nc[U.c],nb[db]=V.x,nb[db+1]=V.y,nb[db+2]=V.z,nb[db+3]=W.x,nb[db+4]=W.y,nb[db+5]=W.z,nb[db+6]=X.x,nb[db+7]=X.y,nb[db+8]=X.z,db+=9;J=0;for($=za.length;J<$;J++)U=vb[za[J]],V=nc[U.a],W=nc[U.b],X=nc[U.c],ua=nc[U.d],nb[db]=V.x,nb[db+1]=V.y,nb[db+2]=V.z,nb[db+3]=W.x,nb[db+4]=W.y,nb[db+5]=W.z,nb[db+6]=X.x,nb[db+7]=X.y,nb[db+8]=X.z,nb[db+9]=ua.x,nb[db+10]=ua.y,nb[db+11]=ua.z,db+=12;n.bindBuffer(n.ARRAY_BUFFER,P.__webglVertexBuffer);
n.bufferData(n.ARRAY_BUFFER,nb,gb)}if(xd){mb=0;for(gc=kc.length;mb<gc;mb++){J=ma=0;for($=ya.length;J<$;J++)ic=ya[J],U=vb[ic],V=kc[mb].vertices[U.a],W=kc[mb].vertices[U.b],X=kc[mb].vertices[U.c],ib=Xc[mb],ib[ma]=V.x,ib[ma+1]=V.y,ib[ma+2]=V.z,ib[ma+3]=W.x,ib[ma+4]=W.y,ib[ma+5]=W.z,ib[ma+6]=X.x,ib[ma+7]=X.y,ib[ma+8]=X.z,ja.morphNormals&&(Fa?(ac=Gc[mb].vertexNormals[ic],Ma=ac.a,Hb=ac.b,Qa=ac.c):Qa=Hb=Ma=Gc[mb].faceNormals[ic],jb=Yc[mb],jb[ma]=Ma.x,jb[ma+1]=Ma.y,jb[ma+2]=Ma.z,jb[ma+3]=Hb.x,jb[ma+4]=Hb.y,
jb[ma+5]=Hb.z,jb[ma+6]=Qa.x,jb[ma+7]=Qa.y,jb[ma+8]=Qa.z),ma+=9;J=0;for($=za.length;J<$;J++)ic=za[J],U=vb[ic],V=kc[mb].vertices[U.a],W=kc[mb].vertices[U.b],X=kc[mb].vertices[U.c],ua=kc[mb].vertices[U.d],ib=Xc[mb],ib[ma]=V.x,ib[ma+1]=V.y,ib[ma+2]=V.z,ib[ma+3]=W.x,ib[ma+4]=W.y,ib[ma+5]=W.z,ib[ma+6]=X.x,ib[ma+7]=X.y,ib[ma+8]=X.z,ib[ma+9]=ua.x,ib[ma+10]=ua.y,ib[ma+11]=ua.z,ja.morphNormals&&(Fa?(ac=Gc[mb].vertexNormals[ic],Ma=ac.a,Hb=ac.b,Qa=ac.c,lb=ac.d):lb=Qa=Hb=Ma=Gc[mb].faceNormals[ic],jb=Yc[mb],jb[ma]=
Ma.x,jb[ma+1]=Ma.y,jb[ma+2]=Ma.z,jb[ma+3]=Hb.x,jb[ma+4]=Hb.y,jb[ma+5]=Hb.z,jb[ma+6]=Qa.x,jb[ma+7]=Qa.y,jb[ma+8]=Qa.z,jb[ma+9]=lb.x,jb[ma+10]=lb.y,jb[ma+11]=lb.z),ma+=12;n.bindBuffer(n.ARRAY_BUFFER,P.__webglMorphTargetsBuffers[mb]);n.bufferData(n.ARRAY_BUFFER,Xc[mb],gb);ja.morphNormals&&(n.bindBuffer(n.ARRAY_BUFFER,P.__webglMorphNormalsBuffers[mb]),n.bufferData(n.ARRAY_BUFFER,Yc[mb],gb))}}if(jc.length){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],eb=jc[U.a],fb=jc[U.b],Fb=jc[U.c],Ta[ea]=eb.x,Ta[ea+1]=eb.y,
Ta[ea+2]=eb.z,Ta[ea+3]=eb.w,Ta[ea+4]=fb.x,Ta[ea+5]=fb.y,Ta[ea+6]=fb.z,Ta[ea+7]=fb.w,Ta[ea+8]=Fb.x,Ta[ea+9]=Fb.y,Ta[ea+10]=Fb.z,Ta[ea+11]=Fb.w,Ob=oc[U.a],Ub=oc[U.b],Vb=oc[U.c],Sa[ea]=Ob.x,Sa[ea+1]=Ob.y,Sa[ea+2]=Ob.z,Sa[ea+3]=Ob.w,Sa[ea+4]=Ub.x,Sa[ea+5]=Ub.y,Sa[ea+6]=Ub.z,Sa[ea+7]=Ub.w,Sa[ea+8]=Vb.x,Sa[ea+9]=Vb.y,Sa[ea+10]=Vb.z,Sa[ea+11]=Vb.w,ea+=12;J=0;for($=za.length;J<$;J++)U=vb[za[J]],eb=jc[U.a],fb=jc[U.b],Fb=jc[U.c],xb=jc[U.d],Ta[ea]=eb.x,Ta[ea+1]=eb.y,Ta[ea+2]=eb.z,Ta[ea+3]=eb.w,Ta[ea+4]=fb.x,
Ta[ea+5]=fb.y,Ta[ea+6]=fb.z,Ta[ea+7]=fb.w,Ta[ea+8]=Fb.x,Ta[ea+9]=Fb.y,Ta[ea+10]=Fb.z,Ta[ea+11]=Fb.w,Ta[ea+12]=xb.x,Ta[ea+13]=xb.y,Ta[ea+14]=xb.z,Ta[ea+15]=xb.w,Ob=oc[U.a],Ub=oc[U.b],Vb=oc[U.c],Db=oc[U.d],Sa[ea]=Ob.x,Sa[ea+1]=Ob.y,Sa[ea+2]=Ob.z,Sa[ea+3]=Ob.w,Sa[ea+4]=Ub.x,Sa[ea+5]=Ub.y,Sa[ea+6]=Ub.z,Sa[ea+7]=Ub.w,Sa[ea+8]=Vb.x,Sa[ea+9]=Vb.y,Sa[ea+10]=Vb.z,Sa[ea+11]=Vb.w,Sa[ea+12]=Db.x,Sa[ea+13]=Db.y,Sa[ea+14]=Db.z,Sa[ea+15]=Db.w,ea+=16;0<ea&&(n.bindBuffer(n.ARRAY_BUFFER,P.__webglSkinIndicesBuffer),
n.bufferData(n.ARRAY_BUFFER,Sa,gb),n.bindBuffer(n.ARRAY_BUFFER,P.__webglSkinWeightsBuffer),n.bufferData(n.ARRAY_BUFFER,Ta,gb))}if(wd&&pa){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],qa=U.vertexColors,mc=U.color,3===qa.length&&pa===THREE.VertexColors?(Xa=qa[0],Ya=qa[1],Za=qa[2]):Za=Ya=Xa=mc,ob[cb]=Xa.r,ob[cb+1]=Xa.g,ob[cb+2]=Xa.b,ob[cb+3]=Ya.r,ob[cb+4]=Ya.g,ob[cb+5]=Ya.b,ob[cb+6]=Za.r,ob[cb+7]=Za.g,ob[cb+8]=Za.b,cb+=9;J=0;for($=za.length;J<$;J++)U=vb[za[J]],qa=U.vertexColors,mc=U.color,4===qa.length&&
pa===THREE.VertexColors?(Xa=qa[0],Ya=qa[1],Za=qa[2],tb=qa[3]):tb=Za=Ya=Xa=mc,ob[cb]=Xa.r,ob[cb+1]=Xa.g,ob[cb+2]=Xa.b,ob[cb+3]=Ya.r,ob[cb+4]=Ya.g,ob[cb+5]=Ya.b,ob[cb+6]=Za.r,ob[cb+7]=Za.g,ob[cb+8]=Za.b,ob[cb+9]=tb.r,ob[cb+10]=tb.g,ob[cb+11]=tb.b,cb+=12;0<cb&&(n.bindBuffer(n.ARRAY_BUFFER,P.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,ob,gb))}if(vd&&zb.hasTangents){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],sa=U.vertexTangents,Ca=sa[0],kb=sa[1],qb=sa[2],Ra[Ja]=Ca.x,Ra[Ja+1]=Ca.y,Ra[Ja+2]=Ca.z,Ra[Ja+
3]=Ca.w,Ra[Ja+4]=kb.x,Ra[Ja+5]=kb.y,Ra[Ja+6]=kb.z,Ra[Ja+7]=kb.w,Ra[Ja+8]=qb.x,Ra[Ja+9]=qb.y,Ra[Ja+10]=qb.z,Ra[Ja+11]=qb.w,Ja+=12;J=0;for($=za.length;J<$;J++)U=vb[za[J]],sa=U.vertexTangents,Ca=sa[0],kb=sa[1],qb=sa[2],ab=sa[3],Ra[Ja]=Ca.x,Ra[Ja+1]=Ca.y,Ra[Ja+2]=Ca.z,Ra[Ja+3]=Ca.w,Ra[Ja+4]=kb.x,Ra[Ja+5]=kb.y,Ra[Ja+6]=kb.z,Ra[Ja+7]=kb.w,Ra[Ja+8]=qb.x,Ra[Ja+9]=qb.y,Ra[Ja+10]=qb.z,Ra[Ja+11]=qb.w,Ra[Ja+12]=ab.x,Ra[Ja+13]=ab.y,Ra[Ja+14]=ab.z,Ra[Ja+15]=ab.w,Ja+=16;n.bindBuffer(n.ARRAY_BUFFER,P.__webglTangentBuffer);
n.bufferData(n.ARRAY_BUFFER,Ra,gb)}if(ud&&wa){J=0;for($=ya.length;J<$;J++)if(U=vb[ya[J]],Ia=U.vertexNormals,Sb=U.normal,3===Ia.length&&Fa)for(Ea=0;3>Ea;Ea++)hc=Ia[Ea],Jb[ub]=hc.x,Jb[ub+1]=hc.y,Jb[ub+2]=hc.z,ub+=3;else for(Ea=0;3>Ea;Ea++)Jb[ub]=Sb.x,Jb[ub+1]=Sb.y,Jb[ub+2]=Sb.z,ub+=3;J=0;for($=za.length;J<$;J++)if(U=vb[za[J]],Ia=U.vertexNormals,Sb=U.normal,4===Ia.length&&Fa)for(Ea=0;4>Ea;Ea++)hc=Ia[Ea],Jb[ub]=hc.x,Jb[ub+1]=hc.y,Jb[ub+2]=hc.z,ub+=3;else for(Ea=0;4>Ea;Ea++)Jb[ub]=Sb.x,Jb[ub+1]=Sb.y,Jb[ub+
2]=Sb.z,ub+=3;n.bindBuffer(n.ARRAY_BUFFER,P.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,Jb,gb)}if(gd&&$c&&ra){J=0;for($=ya.length;J<$;J++)if(na=ya[J],La=$c[na],void 0!==La)for(Ea=0;3>Ea;Ea++)rc=La[Ea],wc[bc]=rc.x,wc[bc+1]=rc.y,bc+=2;J=0;for($=za.length;J<$;J++)if(na=za[J],La=$c[na],void 0!==La)for(Ea=0;4>Ea;Ea++)rc=La[Ea],wc[bc]=rc.x,wc[bc+1]=rc.y,bc+=2;0<bc&&(n.bindBuffer(n.ARRAY_BUFFER,P.__webglUVBuffer),n.bufferData(n.ARRAY_BUFFER,wc,gb))}if(gd&&ad&&ra){J=0;for($=ya.length;J<$;J++)if(na=ya[J],
Va=ad[na],void 0!==Va)for(Ea=0;3>Ea;Ea++)sc=Va[Ea],xc[cc]=sc.x,xc[cc+1]=sc.y,cc+=2;J=0;for($=za.length;J<$;J++)if(na=za[J],Va=ad[na],void 0!==Va)for(Ea=0;4>Ea;Ea++)sc=Va[Ea],xc[cc]=sc.x,xc[cc+1]=sc.y,cc+=2;0<cc&&(n.bindBuffer(n.ARRAY_BUFFER,P.__webglUV2Buffer),n.bufferData(n.ARRAY_BUFFER,xc,gb))}if(td){J=0;for($=ya.length;J<$;J++)Wb[Ib]=$a,Wb[Ib+1]=$a+1,Wb[Ib+2]=$a+2,Ib+=3,Eb[wb]=$a,Eb[wb+1]=$a+1,Eb[wb+2]=$a,Eb[wb+3]=$a+2,Eb[wb+4]=$a+1,Eb[wb+5]=$a+2,wb+=6,$a+=3;J=0;for($=za.length;J<$;J++)Wb[Ib]=
$a,Wb[Ib+1]=$a+1,Wb[Ib+2]=$a+3,Wb[Ib+3]=$a+1,Wb[Ib+4]=$a+2,Wb[Ib+5]=$a+3,Ib+=6,Eb[wb]=$a,Eb[wb+1]=$a+1,Eb[wb+2]=$a,Eb[wb+3]=$a+3,Eb[wb+4]=$a+1,Eb[wb+5]=$a+2,Eb[wb+6]=$a+2,Eb[wb+7]=$a+3,wb+=8,$a+=4;n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,P.__webglFaceBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Wb,gb);n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,P.__webglLineBuffer);n.bufferData(n.ELEMENT_ARRAY_BUFFER,Eb,gb)}if(Zc){Ea=0;for(Fc=Zc.length;Ea<Fc;Ea++)if(A=Zc[Ea],A.__original.needsUpdate){B=0;if(1===A.size)if(void 0===
A.boundTo||"vertices"===A.boundTo){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],A.array[B]=A.value[U.a],A.array[B+1]=A.value[U.b],A.array[B+2]=A.value[U.c],B+=3;J=0;for($=za.length;J<$;J++)U=vb[za[J]],A.array[B]=A.value[U.a],A.array[B+1]=A.value[U.b],A.array[B+2]=A.value[U.c],A.array[B+3]=A.value[U.d],B+=4}else{if("faces"===A.boundTo){J=0;for($=ya.length;J<$;J++)Ga=A.value[ya[J]],A.array[B]=Ga,A.array[B+1]=Ga,A.array[B+2]=Ga,B+=3;J=0;for($=za.length;J<$;J++)Ga=A.value[za[J]],A.array[B]=Ga,A.array[B+1]=
Ga,A.array[B+2]=Ga,A.array[B+3]=Ga,B+=4}}else if(2===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],V=A.value[U.a],W=A.value[U.b],X=A.value[U.c],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=W.x,A.array[B+3]=W.y,A.array[B+4]=X.x,A.array[B+5]=X.y,B+=6;J=0;for($=za.length;J<$;J++)U=vb[za[J]],V=A.value[U.a],W=A.value[U.b],X=A.value[U.c],ua=A.value[U.d],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=W.x,A.array[B+3]=W.y,A.array[B+4]=X.x,A.array[B+5]=X.y,A.array[B+
6]=ua.x,A.array[B+7]=ua.y,B+=8}else{if("faces"===A.boundTo){J=0;for($=ya.length;J<$;J++)X=W=V=Ga=A.value[ya[J]],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=W.x,A.array[B+3]=W.y,A.array[B+4]=X.x,A.array[B+5]=X.y,B+=6;J=0;for($=za.length;J<$;J++)ua=X=W=V=Ga=A.value[za[J]],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=W.x,A.array[B+3]=W.y,A.array[B+4]=X.x,A.array[B+5]=X.y,A.array[B+6]=ua.x,A.array[B+7]=ua.y,B+=8}}else if(3===A.size){var da;da="c"===A.type?["r","g","b"]:["x","y","z"];if(void 0===A.boundTo||
"vertices"===A.boundTo){J=0;for($=ya.length;J<$;J++)U=vb[ya[J]],V=A.value[U.a],W=A.value[U.b],X=A.value[U.c],A.array[B]=V[da[0]],A.array[B+1]=V[da[1]],A.array[B+2]=V[da[2]],A.array[B+3]=W[da[0]],A.array[B+4]=W[da[1]],A.array[B+5]=W[da[2]],A.array[B+6]=X[da[0]],A.array[B+7]=X[da[1]],A.array[B+8]=X[da[2]],B+=9;J=0;for($=za.length;J<$;J++)U=vb[za[J]],V=A.value[U.a],W=A.value[U.b],X=A.value[U.c],ua=A.value[U.d],A.array[B]=V[da[0]],A.array[B+1]=V[da[1]],A.array[B+2]=V[da[2]],A.array[B+3]=W[da[0]],A.array[B+
4]=W[da[1]],A.array[B+5]=W[da[2]],A.array[B+6]=X[da[0]],A.array[B+7]=X[da[1]],A.array[B+8]=X[da[2]],A.array[B+9]=ua[da[0]],A.array[B+10]=ua[da[1]],A.array[B+11]=ua[da[2]],B+=12}else if("faces"===A.boundTo){J=0;for($=ya.length;J<$;J++)X=W=V=Ga=A.value[ya[J]],A.array[B]=V[da[0]],A.array[B+1]=V[da[1]],A.array[B+2]=V[da[2]],A.array[B+3]=W[da[0]],A.array[B+4]=W[da[1]],A.array[B+5]=W[da[2]],A.array[B+6]=X[da[0]],A.array[B+7]=X[da[1]],A.array[B+8]=X[da[2]],B+=9;J=0;for($=za.length;J<$;J++)ua=X=W=V=Ga=A.value[za[J]],
A.array[B]=V[da[0]],A.array[B+1]=V[da[1]],A.array[B+2]=V[da[2]],A.array[B+3]=W[da[0]],A.array[B+4]=W[da[1]],A.array[B+5]=W[da[2]],A.array[B+6]=X[da[0]],A.array[B+7]=X[da[1]],A.array[B+8]=X[da[2]],A.array[B+9]=ua[da[0]],A.array[B+10]=ua[da[1]],A.array[B+11]=ua[da[2]],B+=12}else if("faceVertices"===A.boundTo){J=0;for($=ya.length;J<$;J++)Ga=A.value[ya[J]],V=Ga[0],W=Ga[1],X=Ga[2],A.array[B]=V[da[0]],A.array[B+1]=V[da[1]],A.array[B+2]=V[da[2]],A.array[B+3]=W[da[0]],A.array[B+4]=W[da[1]],A.array[B+5]=W[da[2]],
A.array[B+6]=X[da[0]],A.array[B+7]=X[da[1]],A.array[B+8]=X[da[2]],B+=9;J=0;for($=za.length;J<$;J++)Ga=A.value[za[J]],V=Ga[0],W=Ga[1],X=Ga[2],ua=Ga[3],A.array[B]=V[da[0]],A.array[B+1]=V[da[1]],A.array[B+2]=V[da[2]],A.array[B+3]=W[da[0]],A.array[B+4]=W[da[1]],A.array[B+5]=W[da[2]],A.array[B+6]=X[da[0]],A.array[B+7]=X[da[1]],A.array[B+8]=X[da[2]],A.array[B+9]=ua[da[0]],A.array[B+10]=ua[da[1]],A.array[B+11]=ua[da[2]],B+=12}}else if(4===A.size)if(void 0===A.boundTo||"vertices"===A.boundTo){J=0;for($=ya.length;J<
$;J++)U=vb[ya[J]],V=A.value[U.a],W=A.value[U.b],X=A.value[U.c],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=V.z,A.array[B+3]=V.w,A.array[B+4]=W.x,A.array[B+5]=W.y,A.array[B+6]=W.z,A.array[B+7]=W.w,A.array[B+8]=X.x,A.array[B+9]=X.y,A.array[B+10]=X.z,A.array[B+11]=X.w,B+=12;J=0;for($=za.length;J<$;J++)U=vb[za[J]],V=A.value[U.a],W=A.value[U.b],X=A.value[U.c],ua=A.value[U.d],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=V.z,A.array[B+3]=V.w,A.array[B+4]=W.x,A.array[B+5]=W.y,A.array[B+6]=W.z,A.array[B+
7]=W.w,A.array[B+8]=X.x,A.array[B+9]=X.y,A.array[B+10]=X.z,A.array[B+11]=X.w,A.array[B+12]=ua.x,A.array[B+13]=ua.y,A.array[B+14]=ua.z,A.array[B+15]=ua.w,B+=16}else if("faces"===A.boundTo){J=0;for($=ya.length;J<$;J++)X=W=V=Ga=A.value[ya[J]],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=V.z,A.array[B+3]=V.w,A.array[B+4]=W.x,A.array[B+5]=W.y,A.array[B+6]=W.z,A.array[B+7]=W.w,A.array[B+8]=X.x,A.array[B+9]=X.y,A.array[B+10]=X.z,A.array[B+11]=X.w,B+=12;J=0;for($=za.length;J<$;J++)ua=X=W=V=Ga=A.value[za[J]],
A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=V.z,A.array[B+3]=V.w,A.array[B+4]=W.x,A.array[B+5]=W.y,A.array[B+6]=W.z,A.array[B+7]=W.w,A.array[B+8]=X.x,A.array[B+9]=X.y,A.array[B+10]=X.z,A.array[B+11]=X.w,A.array[B+12]=ua.x,A.array[B+13]=ua.y,A.array[B+14]=ua.z,A.array[B+15]=ua.w,B+=16}else if("faceVertices"===A.boundTo){J=0;for($=ya.length;J<$;J++)Ga=A.value[ya[J]],V=Ga[0],W=Ga[1],X=Ga[2],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=V.z,A.array[B+3]=V.w,A.array[B+4]=W.x,A.array[B+5]=W.y,A.array[B+
6]=W.z,A.array[B+7]=W.w,A.array[B+8]=X.x,A.array[B+9]=X.y,A.array[B+10]=X.z,A.array[B+11]=X.w,B+=12;J=0;for($=za.length;J<$;J++)Ga=A.value[za[J]],V=Ga[0],W=Ga[1],X=Ga[2],ua=Ga[3],A.array[B]=V.x,A.array[B+1]=V.y,A.array[B+2]=V.z,A.array[B+3]=V.w,A.array[B+4]=W.x,A.array[B+5]=W.y,A.array[B+6]=W.z,A.array[B+7]=W.w,A.array[B+8]=X.x,A.array[B+9]=X.y,A.array[B+10]=X.z,A.array[B+11]=X.w,A.array[B+12]=ua.x,A.array[B+13]=ua.y,A.array[B+14]=ua.z,A.array[B+15]=ua.w,B+=16}n.bindBuffer(n.ARRAY_BUFFER,A.buffer);
n.bufferData(n.ARRAY_BUFFER,A.array,gb)}}Na&&(delete P.__inittedArrays,delete P.__colorArray,delete P.__normalArray,delete P.__tangentArray,delete P.__uvArray,delete P.__uv2Array,delete P.__faceArray,delete P.__vertexArray,delete P.__lineArray,delete P.__skinIndexArray,delete P.__skinWeightArray)}}T.verticesNeedUpdate=!1;T.morphTargetsNeedUpdate=!1;T.elementsNeedUpdate=!1;T.uvsNeedUpdate=!1;T.normalsNeedUpdate=!1;T.colorsNeedUpdate=!1;T.tangentsNeedUpdate=!1;T.buffersNeedUpdate=!1;ba.attributes&&
x(ba)}else if(yb instanceof THREE.Ribbon){ba=e(yb,T);va=ba.attributes&&t(ba);if(T.verticesNeedUpdate||T.colorsNeedUpdate||T.normalsNeedUpdate||va){var Kb=T,Hc=n.DYNAMIC_DRAW,yc=void 0,zc=void 0,Ac=void 0,Ic=void 0,Ha=void 0,Jc=void 0,Kc=void 0,Lc=void 0,hd=void 0,rb=void 0,tc=void 0,Oa=void 0,Ab=void 0,id=Kb.vertices,jd=Kb.colors,kd=Kb.normals,yd=id.length,zd=jd.length,Ad=kd.length,Mc=Kb.__vertexArray,Nc=Kb.__colorArray,Oc=Kb.__normalArray,Bd=Kb.colorsNeedUpdate,Cd=Kb.normalsNeedUpdate,bd=Kb.__webglCustomAttributesList;
if(Kb.verticesNeedUpdate){for(yc=0;yc<yd;yc++)Ic=id[yc],Ha=3*yc,Mc[Ha]=Ic.x,Mc[Ha+1]=Ic.y,Mc[Ha+2]=Ic.z;n.bindBuffer(n.ARRAY_BUFFER,Kb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Mc,Hc)}if(Bd){for(zc=0;zc<zd;zc++)Jc=jd[zc],Ha=3*zc,Nc[Ha]=Jc.r,Nc[Ha+1]=Jc.g,Nc[Ha+2]=Jc.b;n.bindBuffer(n.ARRAY_BUFFER,Kb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Nc,Hc)}if(Cd){for(Ac=0;Ac<Ad;Ac++)Kc=kd[Ac],Ha=3*Ac,Oc[Ha]=Kc.x,Oc[Ha+1]=Kc.y,Oc[Ha+2]=Kc.z;n.bindBuffer(n.ARRAY_BUFFER,Kb.__webglNormalBuffer);n.bufferData(n.ARRAY_BUFFER,
Oc,Hc)}if(bd){Lc=0;for(hd=bd.length;Lc<hd;Lc++)if(Oa=bd[Lc],Oa.needsUpdate&&(void 0===Oa.boundTo||"vertices"===Oa.boundTo)){Ha=0;tc=Oa.value.length;if(1===Oa.size)for(rb=0;rb<tc;rb++)Oa.array[rb]=Oa.value[rb];else if(2===Oa.size)for(rb=0;rb<tc;rb++)Ab=Oa.value[rb],Oa.array[Ha]=Ab.x,Oa.array[Ha+1]=Ab.y,Ha+=2;else if(3===Oa.size)if("c"===Oa.type)for(rb=0;rb<tc;rb++)Ab=Oa.value[rb],Oa.array[Ha]=Ab.r,Oa.array[Ha+1]=Ab.g,Oa.array[Ha+2]=Ab.b,Ha+=3;else for(rb=0;rb<tc;rb++)Ab=Oa.value[rb],Oa.array[Ha]=Ab.x,
Oa.array[Ha+1]=Ab.y,Oa.array[Ha+2]=Ab.z,Ha+=3;else if(4===Oa.size)for(rb=0;rb<tc;rb++)Ab=Oa.value[rb],Oa.array[Ha]=Ab.x,Oa.array[Ha+1]=Ab.y,Oa.array[Ha+2]=Ab.z,Oa.array[Ha+3]=Ab.w,Ha+=4;n.bindBuffer(n.ARRAY_BUFFER,Oa.buffer);n.bufferData(n.ARRAY_BUFFER,Oa.array,Hc)}}}T.verticesNeedUpdate=!1;T.colorsNeedUpdate=!1;T.normalsNeedUpdate=!1;ba.attributes&&x(ba)}else if(yb instanceof THREE.Line)if(T instanceof THREE.BufferGeometry)(T.verticesNeedUpdate||T.colorsNeedUpdate)&&h(T,n.DYNAMIC_DRAW,!T.dynamic),
T.verticesNeedUpdate=!1,T.colorsNeedUpdate=!1;else{ba=e(yb,T);va=ba.attributes&&t(ba);if(T.verticesNeedUpdate||T.colorsNeedUpdate||T.lineDistancesNeedUpdate||va){var Lb=T,Pc=n.DYNAMIC_DRAW,Bc=void 0,Cc=void 0,Dc=void 0,Qc=void 0,Ua=void 0,Rc=void 0,ld=Lb.vertices,md=Lb.colors,nd=Lb.lineDistances,Dd=ld.length,Ed=md.length,Fd=nd.length,Sc=Lb.__vertexArray,Tc=Lb.__colorArray,od=Lb.__lineDistanceArray,Gd=Lb.colorsNeedUpdate,Hd=Lb.lineDistancesNeedUpdate,cd=Lb.__webglCustomAttributesList,Uc=void 0,pd=
void 0,sb=void 0,uc=void 0,Bb=void 0,Pa=void 0;if(Lb.verticesNeedUpdate){for(Bc=0;Bc<Dd;Bc++)Qc=ld[Bc],Ua=3*Bc,Sc[Ua]=Qc.x,Sc[Ua+1]=Qc.y,Sc[Ua+2]=Qc.z;n.bindBuffer(n.ARRAY_BUFFER,Lb.__webglVertexBuffer);n.bufferData(n.ARRAY_BUFFER,Sc,Pc)}if(Gd){for(Cc=0;Cc<Ed;Cc++)Rc=md[Cc],Ua=3*Cc,Tc[Ua]=Rc.r,Tc[Ua+1]=Rc.g,Tc[Ua+2]=Rc.b;n.bindBuffer(n.ARRAY_BUFFER,Lb.__webglColorBuffer);n.bufferData(n.ARRAY_BUFFER,Tc,Pc)}if(Hd){for(Dc=0;Dc<Fd;Dc++)od[Dc]=nd[Dc];n.bindBuffer(n.ARRAY_BUFFER,Lb.__webglLineDistanceBuffer);
n.bufferData(n.ARRAY_BUFFER,od,Pc)}if(cd){Uc=0;for(pd=cd.length;Uc<pd;Uc++)if(Pa=cd[Uc],Pa.needsUpdate&&(void 0===Pa.boundTo||"vertices"===Pa.boundTo)){Ua=0;uc=Pa.value.length;if(1===Pa.size)for(sb=0;sb<uc;sb++)Pa.array[sb]=Pa.value[sb];else if(2===Pa.size)for(sb=0;sb<uc;sb++)Bb=Pa.value[sb],Pa.array[Ua]=Bb.x,Pa.array[Ua+1]=Bb.y,Ua+=2;else if(3===Pa.size)if("c"===Pa.type)for(sb=0;sb<uc;sb++)Bb=Pa.value[sb],Pa.array[Ua]=Bb.r,Pa.array[Ua+1]=Bb.g,Pa.array[Ua+2]=Bb.b,Ua+=3;else for(sb=0;sb<uc;sb++)Bb=
Pa.value[sb],Pa.array[Ua]=Bb.x,Pa.array[Ua+1]=Bb.y,Pa.array[Ua+2]=Bb.z,Ua+=3;else if(4===Pa.size)for(sb=0;sb<uc;sb++)Bb=Pa.value[sb],Pa.array[Ua]=Bb.x,Pa.array[Ua+1]=Bb.y,Pa.array[Ua+2]=Bb.z,Pa.array[Ua+3]=Bb.w,Ua+=4;n.bindBuffer(n.ARRAY_BUFFER,Pa.buffer);n.bufferData(n.ARRAY_BUFFER,Pa.array,Pc)}}}T.verticesNeedUpdate=!1;T.colorsNeedUpdate=!1;T.lineDistancesNeedUpdate=!1;ba.attributes&&x(ba)}else if(yb instanceof THREE.ParticleSystem)if(T instanceof THREE.BufferGeometry)(T.verticesNeedUpdate||T.colorsNeedUpdate)&&
h(T,n.DYNAMIC_DRAW,!T.dynamic),T.verticesNeedUpdate=!1,T.colorsNeedUpdate=!1;else{ba=e(yb,T);va=ba.attributes&&t(ba);if(T.verticesNeedUpdate||T.colorsNeedUpdate||yb.sortParticles||va){var Xb=T,dd=n.DYNAMIC_DRAW,Ec=yb,Cb=void 0,Yb=void 0,Zb=void 0,ga=void 0,$b=void 0,lc=void 0,Vc=Xb.vertices,ed=Vc.length,fd=Xb.colors,qd=fd.length,pc=Xb.__vertexArray,qc=Xb.__colorArray,dc=Xb.__sortArray,rd=Xb.verticesNeedUpdate,sd=Xb.colorsNeedUpdate,ec=Xb.__webglCustomAttributesList,Pb=void 0,vc=void 0,ta=void 0,Qb=
void 0,Ka=void 0,fa=void 0;if(Ec.sortParticles){Nb.copy(Mb);Nb.multiply(Ec.matrixWorld);for(Cb=0;Cb<ed;Cb++)Zb=Vc[Cb],Wa.copy(Zb),Wa.applyProjection(Nb),dc[Cb]=[Wa.z,Cb];dc.sort(l);for(Cb=0;Cb<ed;Cb++)Zb=Vc[dc[Cb][1]],ga=3*Cb,pc[ga]=Zb.x,pc[ga+1]=Zb.y,pc[ga+2]=Zb.z;for(Yb=0;Yb<qd;Yb++)ga=3*Yb,lc=fd[dc[Yb][1]],qc[ga]=lc.r,qc[ga+1]=lc.g,qc[ga+2]=lc.b;if(ec){Pb=0;for(vc=ec.length;Pb<vc;Pb++)if(fa=ec[Pb],void 0===fa.boundTo||"vertices"===fa.boundTo)if(ga=0,Qb=fa.value.length,1===fa.size)for(ta=0;ta<Qb;ta++)$b=
dc[ta][1],fa.array[ta]=fa.value[$b];else if(2===fa.size)for(ta=0;ta<Qb;ta++)$b=dc[ta][1],Ka=fa.value[$b],fa.array[ga]=Ka.x,fa.array[ga+1]=Ka.y,ga+=2;else if(3===fa.size)if("c"===fa.type)for(ta=0;ta<Qb;ta++)$b=dc[ta][1],Ka=fa.value[$b],fa.array[ga]=Ka.r,fa.array[ga+1]=Ka.g,fa.array[ga+2]=Ka.b,ga+=3;else for(ta=0;ta<Qb;ta++)$b=dc[ta][1],Ka=fa.value[$b],fa.array[ga]=Ka.x,fa.array[ga+1]=Ka.y,fa.array[ga+2]=Ka.z,ga+=3;else if(4===fa.size)for(ta=0;ta<Qb;ta++)$b=dc[ta][1],Ka=fa.value[$b],fa.array[ga]=Ka.x,
fa.array[ga+1]=Ka.y,fa.array[ga+2]=Ka.z,fa.array[ga+3]=Ka.w,ga+=4}}else{if(rd)for(Cb=0;Cb<ed;Cb++)Zb=Vc[Cb],ga=3*Cb,pc[ga]=Zb.x,pc[ga+1]=Zb.y,pc[ga+2]=Zb.z;if(sd)for(Yb=0;Yb<qd;Yb++)lc=fd[Yb],ga=3*Yb,qc[ga]=lc.r,qc[ga+1]=lc.g,qc[ga+2]=lc.b;if(ec){Pb=0;for(vc=ec.length;Pb<vc;Pb++)if(fa=ec[Pb],fa.needsUpdate&&(void 0===fa.boundTo||"vertices"===fa.boundTo))if(Qb=fa.value.length,ga=0,1===fa.size)for(ta=0;ta<Qb;ta++)fa.array[ta]=fa.value[ta];else if(2===fa.size)for(ta=0;ta<Qb;ta++)Ka=fa.value[ta],fa.array[ga]=
Ka.x,fa.array[ga+1]=Ka.y,ga+=2;else if(3===fa.size)if("c"===fa.type)for(ta=0;ta<Qb;ta++)Ka=fa.value[ta],fa.array[ga]=Ka.r,fa.array[ga+1]=Ka.g,fa.array[ga+2]=Ka.b,ga+=3;else for(ta=0;ta<Qb;ta++)Ka=fa.value[ta],fa.array[ga]=Ka.x,fa.array[ga+1]=Ka.y,fa.array[ga+2]=Ka.z,ga+=3;else if(4===fa.size)for(ta=0;ta<Qb;ta++)Ka=fa.value[ta],fa.array[ga]=Ka.x,fa.array[ga+1]=Ka.y,fa.array[ga+2]=Ka.z,fa.array[ga+3]=Ka.w,ga+=4}}if(rd||Ec.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,Xb.__webglVertexBuffer),n.bufferData(n.ARRAY_BUFFER,
pc,dd);if(sd||Ec.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,Xb.__webglColorBuffer),n.bufferData(n.ARRAY_BUFFER,qc,dd);if(ec){Pb=0;for(vc=ec.length;Pb<vc;Pb++)if(fa=ec[Pb],fa.needsUpdate||Ec.sortParticles)n.bindBuffer(n.ARRAY_BUFFER,fa.buffer),n.bufferData(n.ARRAY_BUFFER,fa.array,dd)}}T.verticesNeedUpdate=!1;T.colorsNeedUpdate=!1;ba.attributes&&x(ba)}}};this.initMaterial=function(a,b,c,d){var e,f,g,i;a.addEventListener("dispose",Ya);var h,j,k,l,m;a instanceof THREE.MeshDepthMaterial?m="depth":a instanceof
THREE.MeshNormalMaterial?m="normal":a instanceof THREE.MeshBasicMaterial?m="basic":a instanceof THREE.MeshLambertMaterial?m="lambert":a instanceof THREE.MeshPhongMaterial?m="phong":a instanceof THREE.LineBasicMaterial?m="basic":a instanceof THREE.LineDashedMaterial?m="dashed":a instanceof THREE.ParticleBasicMaterial&&(m="particle_basic");if(m){var q=THREE.ShaderLib[m];a.uniforms=THREE.UniformsUtils.clone(q.uniforms);a.vertexShader=q.vertexShader;a.fragmentShader=q.fragmentShader}var r,p,Q;e=g=p=Q=
q=0;for(f=b.length;e<f;e++)r=b[e],r.onlyShadow||(r instanceof THREE.DirectionalLight&&g++,r instanceof THREE.PointLight&&p++,r instanceof THREE.SpotLight&&Q++,r instanceof THREE.HemisphereLight&&q++);e=g;f=p;g=Q;i=q;q=r=0;for(Q=b.length;q<Q;q++)p=b[q],p.castShadow&&(p instanceof THREE.SpotLight&&r++,p instanceof THREE.DirectionalLight&&!p.shadowCascade&&r++);l=r;kb&&d&&d.useVertexTexture?k=1024:(b=n.getParameter(n.MAX_VERTEX_UNIFORM_VECTORS),b=Math.floor((b-20)/4),void 0!==d&&d instanceof THREE.SkinnedMesh&&
(b=Math.min(d.bones.length,b),b<d.bones.length&&console.warn("WebGLRenderer: too many bones - "+d.bones.length+", this GPU supports just "+b+" (try OpenGL instead of ANGLE)")),k=b);a:{p=a.fragmentShader;Q=a.vertexShader;q=a.uniforms;b=a.attributes;r=a.defines;var c={map:!!a.map,envMap:!!a.envMap,lightMap:!!a.lightMap,bumpMap:!!a.bumpMap,normalMap:!!a.normalMap,specularMap:!!a.specularMap,vertexColors:a.vertexColors,fog:c,useFog:a.fog,fogExp:c instanceof THREE.FogExp2,sizeAttenuation:a.sizeAttenuation,
skinning:a.skinning,maxBones:k,useVertexTexture:kb&&d&&d.useVertexTexture,boneTextureWidth:d&&d.boneTextureWidth,boneTextureHeight:d&&d.boneTextureHeight,morphTargets:a.morphTargets,morphNormals:a.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:e,maxPointLights:f,maxSpotLights:g,maxHemiLights:i,maxShadows:l,shadowMapEnabled:this.shadowMapEnabled&&d.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,
alphaTest:a.alphaTest,metal:a.metal,perPixel:a.perPixel,wrapAround:a.wrapAround,doubleSided:a.side===THREE.DoubleSide,flipSided:a.side===THREE.BackSide},s,oa,t,d=[];m?d.push(m):(d.push(p),d.push(Q));for(oa in r)d.push(oa),d.push(r[oa]);for(s in c)d.push(s),d.push(c[s]);m=d.join();s=0;for(oa=ia.length;s<oa;s++)if(d=ia[s],d.code===m){d.usedTimes++;j=d.program;break a}s="SHADOWMAP_TYPE_BASIC";c.shadowMapType===THREE.PCFShadowMap?s="SHADOWMAP_TYPE_PCF":c.shadowMapType===THREE.PCFSoftShadowMap&&(s="SHADOWMAP_TYPE_PCF_SOFT");
oa=[];for(t in r)d=r[t],!1!==d&&(d="#define "+t+" "+d,oa.push(d));d=oa.join("\n");t=n.createProgram();oa=["precision "+S+" float;",d,Fb?"#define VERTEX_TEXTURES":"",M.gammaInput?"#define GAMMA_INPUT":"",M.gammaOutput?"#define GAMMA_OUTPUT":"",M.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+
c.maxShadows,"#define MAX_BONES "+c.maxBones,c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.skinning?"#define USE_SKINNING":"",c.useVertexTexture?"#define BONE_TEXTURE":"",c.boneTextureWidth?"#define N_BONE_PIXEL_X "+c.boneTextureWidth.toFixed(1):"",c.boneTextureHeight?"#define N_BONE_PIXEL_Y "+
c.boneTextureHeight.toFixed(1):"",c.morphTargets?"#define USE_MORPHTARGETS":"",c.morphNormals?"#define USE_MORPHNORMALS":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+s:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",c.sizeAttenuation?"#define USE_SIZEATTENUATION":
"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");
s=["precision "+S+" float;",c.bumpMap||c.normalMap?"#extension GL_OES_standard_derivatives : enable":"",d,"#define MAX_DIR_LIGHTS "+c.maxDirLights,"#define MAX_POINT_LIGHTS "+c.maxPointLights,"#define MAX_SPOT_LIGHTS "+c.maxSpotLights,"#define MAX_HEMI_LIGHTS "+c.maxHemiLights,"#define MAX_SHADOWS "+c.maxShadows,c.alphaTest?"#define ALPHATEST "+c.alphaTest:"",M.gammaInput?"#define GAMMA_INPUT":"",M.gammaOutput?"#define GAMMA_OUTPUT":"",M.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",
c.useFog&&c.fog?"#define USE_FOG":"",c.useFog&&c.fogExp?"#define FOG_EXP2":"",c.map?"#define USE_MAP":"",c.envMap?"#define USE_ENVMAP":"",c.lightMap?"#define USE_LIGHTMAP":"",c.bumpMap?"#define USE_BUMPMAP":"",c.normalMap?"#define USE_NORMALMAP":"",c.specularMap?"#define USE_SPECULARMAP":"",c.vertexColors?"#define USE_COLOR":"",c.metal?"#define METAL":"",c.perPixel?"#define PHONG_PER_PIXEL":"",c.wrapAround?"#define WRAP_AROUND":"",c.doubleSided?"#define DOUBLE_SIDED":"",c.flipSided?"#define FLIP_SIDED":
"",c.shadowMapEnabled?"#define USE_SHADOWMAP":"",c.shadowMapEnabled?"#define "+s:"",c.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",c.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");s=O("fragment",s+p);oa=O("vertex",oa+Q);n.attachShader(t,oa);n.attachShader(t,s);n.linkProgram(t);n.getProgramParameter(t,n.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+n.getProgramParameter(t,n.VALIDATE_STATUS)+", gl error ["+
n.getError()+"]");n.deleteShader(s);n.deleteShader(oa);t.uniforms={};t.attributes={};var y;s="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");c.useVertexTexture?s.push("boneTexture"):s.push("boneGlobalMatrices");for(y in q)s.push(y);y=s;s=0;for(oa=y.length;s<oa;s++)q=y[s],t.uniforms[q]=n.getUniformLocation(t,q);s="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(y=0;y<c.maxMorphTargets;y++)s.push("morphTarget"+
y);for(y=0;y<c.maxMorphNormals;y++)s.push("morphNormal"+y);for(j in b)s.push(j);j=s;y=0;for(b=j.length;y<b;y++)s=j[y],t.attributes[s]=n.getAttribLocation(t,s);t.id=Aa++;ia.push({program:t,code:m,usedTimes:1});M.info.memory.programs=ia.length;j=t}a.program=j;y=a.program.attributes;if(a.morphTargets){a.numSupportedMorphTargets=0;b="morphTarget";for(j=0;j<this.maxMorphTargets;j++)t=b+j,0<=y[t]&&a.numSupportedMorphTargets++}if(a.morphNormals){a.numSupportedMorphNormals=0;b="morphNormal";for(j=0;j<this.maxMorphNormals;j++)t=
b+j,0<=y[t]&&a.numSupportedMorphNormals++}a.uniformsList=[];for(h in a.uniforms)a.uniformsList.push([a.uniforms[h],h])};this.setFaceCulling=function(a,b){a===THREE.CullFaceNone?n.disable(n.CULL_FACE):(b===THREE.FrontFaceDirectionCW?n.frontFace(n.CW):n.frontFace(n.CCW),a===THREE.CullFaceBack?n.cullFace(n.BACK):a===THREE.CullFaceFront?n.cullFace(n.FRONT):n.cullFace(n.FRONT_AND_BACK),n.enable(n.CULL_FACE))};this.setMaterialFaces=function(a){var b=a.side===THREE.DoubleSide,a=a.side===THREE.BackSide;P!==
b&&(b?n.disable(n.CULL_FACE):n.enable(n.CULL_FACE),P=b);pa!==a&&(a?n.frontFace(n.CW):n.frontFace(n.CCW),pa=a)};this.setDepthTest=function(a){Qa!==a&&(a?n.enable(n.DEPTH_TEST):n.disable(n.DEPTH_TEST),Qa=a)};this.setDepthWrite=function(a){qa!==a&&(n.depthMask(a),qa=a)};this.setBlending=function(a,b,c,d){a!==na&&(a===THREE.NoBlending?n.disable(n.BLEND):a===THREE.AdditiveBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.SRC_ALPHA,n.ONE)):a===THREE.SubtractiveBlending?(n.enable(n.BLEND),
n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.ONE_MINUS_SRC_COLOR)):a===THREE.MultiplyBlending?(n.enable(n.BLEND),n.blendEquation(n.FUNC_ADD),n.blendFunc(n.ZERO,n.SRC_COLOR)):a===THREE.CustomBlending?n.enable(n.BLEND):(n.enable(n.BLEND),n.blendEquationSeparate(n.FUNC_ADD,n.FUNC_ADD),n.blendFuncSeparate(n.SRC_ALPHA,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA)),na=a);if(a===THREE.CustomBlending){if(b!==ka&&(n.blendEquation(K(b)),ka=b),c!==ra||d!==Va)n.blendFunc(K(c),K(d)),ra=c,Va=d}else Va=
ra=ka=null};this.setTexture=function(a,b){if(a.needsUpdate){a.__webglInit||(a.__webglInit=!0,a.addEventListener("dispose",lb),a.__webglTexture=n.createTexture(),M.info.memory.textures++);n.activeTexture(n.TEXTURE0+b);n.bindTexture(n.TEXTURE_2D,a.__webglTexture);n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,a.flipY);n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,a.premultiplyAlpha);n.pixelStorei(n.UNPACK_ALIGNMENT,a.unpackAlignment);var c=a.image,d=0===(c.width&c.width-1)&&0===(c.height&c.height-1),e=K(a.format),
f=K(a.type);F(n.TEXTURE_2D,a,d);var g=a.mipmaps;if(a instanceof THREE.DataTexture)if(0<g.length&&d){for(var i=0,h=g.length;i<h;i++)c=g[i],n.texImage2D(n.TEXTURE_2D,i,e,c.width,c.height,0,e,f,c.data);a.generateMipmaps=!1}else n.texImage2D(n.TEXTURE_2D,0,e,c.width,c.height,0,e,f,c.data);else if(a instanceof THREE.CompressedTexture){i=0;for(h=g.length;i<h;i++)c=g[i],n.compressedTexImage2D(n.TEXTURE_2D,i,e,c.width,c.height,0,c.data)}else if(0<g.length&&d){i=0;for(h=g.length;i<h;i++)c=g[i],n.texImage2D(n.TEXTURE_2D,
i,e,e,f,c);a.generateMipmaps=!1}else n.texImage2D(n.TEXTURE_2D,0,e,e,f,a.image);a.generateMipmaps&&d&&n.generateMipmap(n.TEXTURE_2D);a.needsUpdate=!1;if(a.onUpdate)a.onUpdate()}else n.activeTexture(n.TEXTURE0+b),n.bindTexture(n.TEXTURE_2D,a.__webglTexture)};this.setRenderTarget=function(a){var b=a instanceof THREE.WebGLRenderTargetCube;if(a&&!a.__webglFramebuffer){void 0===a.depthBuffer&&(a.depthBuffer=!0);void 0===a.stencilBuffer&&(a.stencilBuffer=!0);a.addEventListener("dispose",Xa);a.__webglTexture=
n.createTexture();M.info.memory.textures++;var c=0===(a.width&a.width-1)&&0===(a.height&a.height-1),d=K(a.format),e=K(a.type);if(b){a.__webglFramebuffer=[];a.__webglRenderbuffer=[];n.bindTexture(n.TEXTURE_CUBE_MAP,a.__webglTexture);F(n.TEXTURE_CUBE_MAP,a,c);for(var f=0;6>f;f++){a.__webglFramebuffer[f]=n.createFramebuffer();a.__webglRenderbuffer[f]=n.createRenderbuffer();n.texImage2D(n.TEXTURE_CUBE_MAP_POSITIVE_X+f,0,d,a.width,a.height,0,d,e,null);var g=a,i=n.TEXTURE_CUBE_MAP_POSITIVE_X+f;n.bindFramebuffer(n.FRAMEBUFFER,
a.__webglFramebuffer[f]);n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,i,g.__webglTexture,0);R(a.__webglRenderbuffer[f],a)}c&&n.generateMipmap(n.TEXTURE_CUBE_MAP)}else a.__webglFramebuffer=n.createFramebuffer(),a.__webglRenderbuffer=a.shareDepthFrom?a.shareDepthFrom.__webglRenderbuffer:n.createRenderbuffer(),n.bindTexture(n.TEXTURE_2D,a.__webglTexture),F(n.TEXTURE_2D,a,c),n.texImage2D(n.TEXTURE_2D,0,d,a.width,a.height,0,d,e,null),d=n.TEXTURE_2D,n.bindFramebuffer(n.FRAMEBUFFER,a.__webglFramebuffer),
n.framebufferTexture2D(n.FRAMEBUFFER,n.COLOR_ATTACHMENT0,d,a.__webglTexture,0),a.shareDepthFrom?a.depthBuffer&&!a.stencilBuffer?n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_ATTACHMENT,n.RENDERBUFFER,a.__webglRenderbuffer):a.depthBuffer&&a.stencilBuffer&&n.framebufferRenderbuffer(n.FRAMEBUFFER,n.DEPTH_STENCIL_ATTACHMENT,n.RENDERBUFFER,a.__webglRenderbuffer):R(a.__webglRenderbuffer,a),c&&n.generateMipmap(n.TEXTURE_2D);b?n.bindTexture(n.TEXTURE_CUBE_MAP,null):n.bindTexture(n.TEXTURE_2D,null);n.bindRenderbuffer(n.RENDERBUFFER,
null);n.bindFramebuffer(n.FRAMEBUFFER,null)}a?(b=b?a.__webglFramebuffer[a.activeCubeFace]:a.__webglFramebuffer,c=a.width,a=a.height,e=d=0):(b=null,c=Ca,a=ab,d=sa,e=La);b!==Na&&(n.bindFramebuffer(n.FRAMEBUFFER,b),n.viewport(d,e,c,a),Na=b);tb=c;Q=a};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(a,b,c){THREE.EventDispatcher.call(this);this.width=a;this.height=b;c=c||{};this.wrapS=void 0!==c.wrapS?c.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==c.wrapT?c.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==c.magFilter?c.magFilter:THREE.LinearFilter;this.minFilter=void 0!==c.minFilter?c.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==c.anisotropy?c.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);
this.format=void 0!==c.format?c.format:THREE.RGBAFormat;this.type=void 0!==c.type?c.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==c.depthBuffer?c.depthBuffer:!0;this.stencilBuffer=void 0!==c.stencilBuffer?c.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};
THREE.WebGLRenderTarget.prototype.clone=function(){var a=new THREE.WebGLRenderTarget(this.width,this.height);a.wrapS=this.wrapS;a.wrapT=this.wrapT;a.magFilter=this.magFilter;a.minFilter=this.minFilter;a.anisotropy=this.anisotropy;a.offset.copy(this.offset);a.repeat.copy(this.repeat);a.format=this.format;a.type=this.type;a.depthBuffer=this.depthBuffer;a.stencilBuffer=this.stencilBuffer;a.generateMipmaps=this.generateMipmaps;a.shareDepthFrom=this.shareDepthFrom;return a};
THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.WebGLRenderTargetCube=function(a,b,c){THREE.WebGLRenderTarget.call(this,a,b,c);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(a){this.positionWorld.copy(a.positionWorld);this.positionScreen.copy(a.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidModel=new THREE.Vector3;this.normalModel=new THREE.Vector3;this.normalModelView=new THREE.Vector3;this.vertexNormalsLength=0;this.vertexNormalsModel=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsModelView=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];
this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};THREE.ColorUtils={adjustHSV:function(a,b,c,d){var e=THREE.ColorUtils.__hsv;a.getHSV(e);e.h=THREE.Math.clamp(e.h+b,0,1);e.s=THREE.Math.clamp(e.s+c,0,1);e.v=THREE.Math.clamp(e.v+d,0,1);a.setHSV(e.h,e.s,e.v)}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};THREE.GeometryUtils={merge:function(a,b){var c,d,e=a.vertices.length,g=b instanceof THREE.Mesh?b.geometry:b,f=a.vertices,i=g.vertices,h=a.faces,j=g.faces,k=a.faceVertexUvs[0],g=g.faceVertexUvs[0];b instanceof THREE.Mesh&&(b.matrixAutoUpdate&&b.updateMatrix(),c=b.matrix,d=new THREE.Matrix3,d.getInverse(c),d.transpose());for(var m=0,l=i.length;m<l;m++){var q=i[m].clone();c&&q.applyMatrix4(c);f.push(q)}m=0;for(l=j.length;m<l;m++){var q=j[m],p,r,s=q.vertexNormals,t=q.vertexColors;q instanceof THREE.Face3?
p=new THREE.Face3(q.a+e,q.b+e,q.c+e):q instanceof THREE.Face4&&(p=new THREE.Face4(q.a+e,q.b+e,q.c+e,q.d+e));p.normal.copy(q.normal);d&&p.normal.applyMatrix3(d).normalize();f=0;for(i=s.length;f<i;f++)r=s[f].clone(),d&&r.applyMatrix3(d).normalize(),p.vertexNormals.push(r);p.color.copy(q.color);f=0;for(i=t.length;f<i;f++)r=t[f],p.vertexColors.push(r.clone());p.materialIndex=q.materialIndex;p.centroid.copy(q.centroid);c&&p.centroid.applyMatrix4(c);h.push(p)}m=0;for(l=g.length;m<l;m++){c=g[m];d=[];f=0;
for(i=c.length;f<i;f++)d.push(new THREE.Vector2(c[f].x,c[f].y));k.push(d)}},removeMaterials:function(a,b){for(var c={},d=0,e=b.length;d<e;d++)c[b[d]]=!0;for(var g,f=[],d=0,e=a.faces.length;d<e;d++)g=a.faces[d],g.materialIndex in c||f.push(g);a.faces=f},randomPointInTriangle:function(a,b,c){var d,e,g,f=new THREE.Vector3,i=THREE.GeometryUtils.__v1;d=THREE.GeometryUtils.random();e=THREE.GeometryUtils.random();1<d+e&&(d=1-d,e=1-e);g=1-d-e;f.copy(a);f.multiplyScalar(d);i.copy(b);i.multiplyScalar(e);f.add(i);
i.copy(c);i.multiplyScalar(g);f.add(i);return f},randomPointInFace:function(a,b,c){var d,e,g;if(a instanceof THREE.Face3)return d=b.vertices[a.a],e=b.vertices[a.b],g=b.vertices[a.c],THREE.GeometryUtils.randomPointInTriangle(d,e,g);if(a instanceof THREE.Face4){d=b.vertices[a.a];e=b.vertices[a.b];g=b.vertices[a.c];var b=b.vertices[a.d],f;c?a._area1&&a._area2?(c=a._area1,f=a._area2):(c=THREE.GeometryUtils.triangleArea(d,e,b),f=THREE.GeometryUtils.triangleArea(e,g,b),a._area1=c,a._area2=f):(c=THREE.GeometryUtils.triangleArea(d,
e,b),f=THREE.GeometryUtils.triangleArea(e,g,b));return THREE.GeometryUtils.random()*(c+f)<c?THREE.GeometryUtils.randomPointInTriangle(d,e,b):THREE.GeometryUtils.randomPointInTriangle(e,g,b)}},randomPointsInGeometry:function(a,b){function c(a){function b(c,d){if(d<c)return c;var e=c+Math.floor((d-c)/2);return j[e]>a?b(c,e-1):j[e]<a?b(e+1,d):e}return b(0,j.length-1)}var d,e,g=a.faces,f=a.vertices,i=g.length,h=0,j=[],k,m,l,q;for(e=0;e<i;e++)d=g[e],d instanceof THREE.Face3?(k=f[d.a],m=f[d.b],l=f[d.c],
d._area=THREE.GeometryUtils.triangleArea(k,m,l)):d instanceof THREE.Face4&&(k=f[d.a],m=f[d.b],l=f[d.c],q=f[d.d],d._area1=THREE.GeometryUtils.triangleArea(k,m,q),d._area2=THREE.GeometryUtils.triangleArea(m,l,q),d._area=d._area1+d._area2),h+=d._area,j[e]=h;d=[];for(e=0;e<b;e++)f=THREE.GeometryUtils.random()*h,f=c(f),d[e]=THREE.GeometryUtils.randomPointInFace(g[f],a,!0);return d},triangleArea:function(a,b,c){var d=THREE.GeometryUtils.__v1,e=THREE.GeometryUtils.__v2;d.subVectors(b,a);e.subVectors(c,a);
d.cross(e);return 0.5*d.length()},center:function(a){a.computeBoundingBox();var b=a.boundingBox,c=new THREE.Vector3;c.addVectors(b.min,b.max);c.multiplyScalar(-0.5);a.applyMatrix((new THREE.Matrix4).makeTranslation(c.x,c.y,c.z));a.computeBoundingBox();return c},normalizeUVs:function(a){for(var a=a.faceVertexUvs[0],b=0,c=a.length;b<c;b++)for(var d=a[b],e=0,g=d.length;e<g;e++)1!==d[e].x&&(d[e].x-=Math.floor(d[e].x)),1!==d[e].y&&(d[e].y-=Math.floor(d[e].y))},triangulateQuads:function(a){var b,c,d,e,
g=[],f=[],i=[];b=0;for(c=a.faceUvs.length;b<c;b++)f[b]=[];b=0;for(c=a.faceVertexUvs.length;b<c;b++)i[b]=[];b=0;for(c=a.faces.length;b<c;b++)if(d=a.faces[b],d instanceof THREE.Face4){e=d.a;var h=d.b,j=d.c,k=d.d,m=new THREE.Face3,l=new THREE.Face3;m.color.copy(d.color);l.color.copy(d.color);m.materialIndex=d.materialIndex;l.materialIndex=d.materialIndex;m.a=e;m.b=h;m.c=k;l.a=h;l.b=j;l.c=k;4===d.vertexColors.length&&(m.vertexColors[0]=d.vertexColors[0].clone(),m.vertexColors[1]=d.vertexColors[1].clone(),
m.vertexColors[2]=d.vertexColors[3].clone(),l.vertexColors[0]=d.vertexColors[1].clone(),l.vertexColors[1]=d.vertexColors[2].clone(),l.vertexColors[2]=d.vertexColors[3].clone());g.push(m,l);d=0;for(e=a.faceVertexUvs.length;d<e;d++)a.faceVertexUvs[d].length&&(m=a.faceVertexUvs[d][b],h=m[1],j=m[2],k=m[3],m=[m[0].clone(),h.clone(),k.clone()],h=[h.clone(),j.clone(),k.clone()],i[d].push(m,h));d=0;for(e=a.faceUvs.length;d<e;d++)a.faceUvs[d].length&&(h=a.faceUvs[d][b],f[d].push(h,h))}else{g.push(d);d=0;for(e=
a.faceUvs.length;d<e;d++)f[d].push(a.faceUvs[d][b]);d=0;for(e=a.faceVertexUvs.length;d<e;d++)i[d].push(a.faceVertexUvs[d][b])}a.faces=g;a.faceUvs=f;a.faceVertexUvs=i;a.computeCentroids();a.computeFaceNormals();a.computeVertexNormals();a.hasTangents&&a.computeTangents()},setMaterialIndex:function(a,b,c,d){a=a.faces;d=d||a.length-1;for(c=c||0;c<=d;c++)a[c].materialIndex=b}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(a,b,c,d){var e=new Image,g=new THREE.Texture(e,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){g.image=a.content;g.needsUpdate=!0;c&&c(g)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,e);g.sourceFile=a;return g},loadCompressedTexture:function(a,b,c,d){var e=new THREE.CompressedTexture;e.mapping=b;var g=new XMLHttpRequest;g.onload=function(){var a=THREE.ImageUtils.parseDDS(g.response,
!0);e.format=a.format;e.mipmaps=a.mipmaps;e.image.width=a.width;e.image.height=a.height;e.generateMipmaps=!1;e.needsUpdate=!0;c&&c(e)};g.onerror=d;g.open("GET",a,!0);g.responseType="arraybuffer";g.send(null);return e},loadTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var g=new THREE.Texture;g.image=e;void 0!==b&&(g.mapping=b);g.flipY=!1;for(var b=0,f=a.length;b<f;++b){var i=new Image;e[b]=i;i.onload=function(){e.loadCount+=1;6===e.loadCount&&(g.needsUpdate=!0,c&&c(g))};i.onerror=d;i.crossOrigin=
this.crossOrigin;i.src=a[b]}return g},loadCompressedTextureCube:function(a,b,c,d){var e=[];e.loadCount=0;var g=new THREE.CompressedTexture;g.image=e;void 0!==b&&(g.mapping=b);g.flipY=!1;g.generateMipmaps=!1;b=function(a,b){return function(){var d=THREE.ImageUtils.parseDDS(a.response,!0);b.format=d.format;b.mipmaps=d.mipmaps;b.width=d.width;b.height=d.height;e.loadCount+=1;6===e.loadCount&&(g.format=d.format,g.needsUpdate=!0,c&&c(g))}};if(a instanceof Array)for(var f=0,i=a.length;f<i;++f){var h={};
e[f]=h;var j=new XMLHttpRequest;j.onload=b(j,h);j.onerror=d;h=a[f];j.open("GET",h,!0);j.responseType="arraybuffer";j.send(null)}else j=new XMLHttpRequest,j.onload=function(){var a=THREE.ImageUtils.parseDDS(j.response,!0);if(a.isCubemap){for(var b=a.mipmaps.length/a.mipmapCount,d=0;d<b;d++){e[d]={mipmaps:[]};for(var f=0;f<a.mipmapCount;f++)e[d].mipmaps.push(a.mipmaps[d*a.mipmapCount+f]),e[d].format=a.format,e[d].width=a.width,e[d].height=a.height}g.format=a.format;g.needsUpdate=!0;c&&c(g)}},j.onerror=
d,j.open("GET",a,!0),j.responseType="arraybuffer",j.send(null);return g},parseDDS:function(a,b){function c(a){return a.charCodeAt(0)+(a.charCodeAt(1)<<8)+(a.charCodeAt(2)<<16)+(a.charCodeAt(3)<<24)}var d={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},e=c("DXT1"),g=c("DXT3"),f=c("DXT5"),i=new Int32Array(a,0,31);if(542327876!==i[0])return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),d;if(!i[20]&4)return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),
d;var h=i[21];switch(h){case e:e=8;d.format=THREE.RGB_S3TC_DXT1_Format;break;case g:e=16;d.format=THREE.RGBA_S3TC_DXT3_Format;break;case f:e=16;d.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(h&255,h>>8&255,h>>16&255,h>>24&255)),d}d.mipmapCount=1;i[2]&131072&&!1!==b&&(d.mipmapCount=Math.max(1,i[7]));d.isCubemap=i[28]&512?!0:!1;d.width=i[4];d.height=i[3];for(var i=i[1]+4,g=d.width,f=d.height,h=d.isCubemap?
6:1,j=0;j<h;j++){for(var k=0;k<d.mipmapCount;k++){var m=Math.max(4,g)/4*Math.max(4,f)/4*e,l={data:new Uint8Array(a,i,m),width:g,height:f};d.mipmaps.push(l);i+=m;g=Math.max(0.5*g,1);f=Math.max(0.5*f,1)}g=d.width;f=d.height}return d},getNormalMap:function(a,b){var c=function(a){var b=Math.sqrt(a[0]*a[0]+a[1]*a[1]+a[2]*a[2]);return[a[0]/b,a[1]/b,a[2]/b]},b=b|1,d=a.width,e=a.height,g=document.createElement("canvas");g.width=d;g.height=e;var f=g.getContext("2d");f.drawImage(a,0,0);for(var i=f.getImageData(0,
0,d,e).data,h=f.createImageData(d,e),j=h.data,k=0;k<d;k++)for(var m=0;m<e;m++){var l=0>m-1?0:m-1,q=m+1>e-1?e-1:m+1,p=0>k-1?0:k-1,r=k+1>d-1?d-1:k+1,s=[],t=[0,0,i[4*(m*d+k)]/255*b];s.push([-1,0,i[4*(m*d+p)]/255*b]);s.push([-1,-1,i[4*(l*d+p)]/255*b]);s.push([0,-1,i[4*(l*d+k)]/255*b]);s.push([1,-1,i[4*(l*d+r)]/255*b]);s.push([1,0,i[4*(m*d+r)]/255*b]);s.push([1,1,i[4*(q*d+r)]/255*b]);s.push([0,1,i[4*(q*d+k)]/255*b]);s.push([-1,1,i[4*(q*d+p)]/255*b]);l=[];p=s.length;for(q=0;q<p;q++){var r=s[q],x=s[(q+1)%
p],r=[r[0]-t[0],r[1]-t[1],r[2]-t[2]],x=[x[0]-t[0],x[1]-t[1],x[2]-t[2]];l.push(c([r[1]*x[2]-r[2]*x[1],r[2]*x[0]-r[0]*x[2],r[0]*x[1]-r[1]*x[0]]))}s=[0,0,0];for(q=0;q<l.length;q++)s[0]+=l[q][0],s[1]+=l[q][1],s[2]+=l[q][2];s[0]/=l.length;s[1]/=l.length;s[2]/=l.length;t=4*(m*d+k);j[t]=255*((s[0]+1)/2)|0;j[t+1]=255*((s[1]+1)/2)|0;j[t+2]=255*s[2]|0;j[t+3]=255}f.putImageData(h,0,0);return g},generateDataTexture:function(a,b,c){for(var d=a*b,e=new Uint8Array(3*d),g=Math.floor(255*c.r),f=Math.floor(255*c.g),
c=Math.floor(255*c.b),i=0;i<d;i++)e[3*i]=g,e[3*i+1]=f,e[3*i+2]=c;a=new THREE.DataTexture(e,a,b,THREE.RGBFormat);a.needsUpdate=!0;return a}};THREE.SceneUtils={createMultiMaterialObject:function(a,b){for(var c=new THREE.Object3D,d=0,e=b.length;d<e;d++)c.add(new THREE.Mesh(a,b[d]));return c},detach:function(a,b,c){a.applyMatrix(b.matrixWorld);b.remove(a);c.add(a)},attach:function(a,b,c){var d=new THREE.Matrix4;d.getInverse(c.matrixWorld);a.applyMatrix(d);b.remove(a);c.add(a)}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(a){var b=a.familyName.toLowerCase();this.faces[b]=this.faces[b]||{};this.faces[b][a.cssFontWeight]=this.faces[b][a.cssFontWeight]||{};this.faces[b][a.cssFontWeight][a.cssFontStyle]=a;return this.faces[b][a.cssFontWeight][a.cssFontStyle]=a},drawText:function(a){for(var b=this.getFace(),c=this.size/b.resolution,d=
0,e=String(a).split(""),g=e.length,f=[],a=0;a<g;a++){var i=new THREE.Path,i=this.extractGlyphPoints(e[a],b,c,d,i),d=d+i.offset;f.push(i.path)}return{paths:f,offset:d/2}},extractGlyphPoints:function(a,b,c,d,e){var g=[],f,i,h,j,k,m,l,q,p,r,s,t=b.glyphs[a]||b.glyphs["?"];if(t){if(t.o){b=t._cachedOutline||(t._cachedOutline=t.o.split(" "));j=b.length;for(a=0;a<j;)switch(h=b[a++],h){case "m":h=b[a++]*c+d;k=b[a++]*c;e.moveTo(h,k);break;case "l":h=b[a++]*c+d;k=b[a++]*c;e.lineTo(h,k);break;case "q":h=b[a++]*
c+d;k=b[a++]*c;q=b[a++]*c+d;p=b[a++]*c;e.quadraticCurveTo(q,p,h,k);if(f=g[g.length-1]){m=f.x;l=f.y;f=1;for(i=this.divisions;f<=i;f++){var x=f/i;THREE.Shape.Utils.b2(x,m,q,h);THREE.Shape.Utils.b2(x,l,p,k)}}break;case "b":if(h=b[a++]*c+d,k=b[a++]*c,q=b[a++]*c+d,p=b[a++]*-c,r=b[a++]*c+d,s=b[a++]*-c,e.bezierCurveTo(h,k,q,p,r,s),f=g[g.length-1]){m=f.x;l=f.y;f=1;for(i=this.divisions;f<=i;f++)x=f/i,THREE.Shape.Utils.b3(x,m,q,r,h),THREE.Shape.Utils.b3(x,l,p,s,k)}}}return{offset:t.ha*c,path:e}}}};
THREE.FontUtils.generateShapes=function(a,b){var b=b||{},c=void 0!==b.curveSegments?b.curveSegments:4,d=void 0!==b.font?b.font:"helvetiker",e=void 0!==b.weight?b.weight:"normal",g=void 0!==b.style?b.style:"normal";THREE.FontUtils.size=void 0!==b.size?b.size:100;THREE.FontUtils.divisions=c;THREE.FontUtils.face=d;THREE.FontUtils.weight=e;THREE.FontUtils.style=g;c=THREE.FontUtils.drawText(a).paths;d=[];e=0;for(g=c.length;e<g;e++)Array.prototype.push.apply(d,c[e].toShapes());return d};
(function(a){var b=function(a){for(var b=a.length,e=0,g=b-1,f=0;f<b;g=f++)e+=a[g].x*a[f].y-a[f].x*a[g].y;return 0.5*e};a.Triangulate=function(a,d){var e=a.length;if(3>e)return null;var g=[],f=[],i=[],h,j,k;if(0<b(a))for(j=0;j<e;j++)f[j]=j;else for(j=0;j<e;j++)f[j]=e-1-j;var m=2*e;for(j=e-1;2<e;){if(0>=m--){console.log("Warning, unable to triangulate polygon!");break}h=j;e<=h&&(h=0);j=h+1;e<=j&&(j=0);k=j+1;e<=k&&(k=0);var l;a:{var q=l=void 0,p=void 0,r=void 0,s=void 0,t=void 0,x=void 0,v=void 0,w=
void 0,q=a[f[h]].x,p=a[f[h]].y,r=a[f[j]].x,s=a[f[j]].y,t=a[f[k]].x,x=a[f[k]].y;if(1E-10>(r-q)*(x-p)-(s-p)*(t-q))l=!1;else{var y=void 0,D=void 0,C=void 0,u=void 0,E=void 0,z=void 0,H=void 0,O=void 0,F=void 0,R=void 0,F=O=H=w=v=void 0,y=t-r,D=x-s,C=q-t,u=p-x,E=r-q,z=s-p;for(l=0;l<e;l++)if(!(l===h||l===j||l===k))if(v=a[f[l]].x,w=a[f[l]].y,H=v-q,O=w-p,F=v-r,R=w-s,v-=t,w-=x,F=y*R-D*F,H=E*O-z*H,O=C*w-u*v,0<=F&&0<=O&&0<=H){l=!1;break a}l=!0}}if(l){g.push([a[f[h]],a[f[j]],a[f[k]]]);i.push([f[h],f[j],f[k]]);
h=j;for(k=j+1;k<e;h++,k++)f[h]=f[k];e--;m=2*e}}return d?i:g};a.Triangulate.area=b;return a})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(a){a=this.getUtoTmapping(a);return this.getPoint(a)};THREE.Curve.prototype.getPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPoint(b/a));return c};THREE.Curve.prototype.getSpacedPoints=function(a){a||(a=5);var b,c=[];for(b=0;b<=a;b++)c.push(this.getPointAt(b/a));return c};
THREE.Curve.prototype.getLength=function(){var a=this.getLengths();return a[a.length-1]};THREE.Curve.prototype.getLengths=function(a){a||(a=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==a+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var b=[],c,d=this.getPoint(0),e,g=0;b.push(0);for(e=1;e<=a;e++)c=this.getPoint(e/a),g+=c.distanceTo(d),b.push(g),d=c;return this.cacheArcLengths=b};
THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(a,b){var c=this.getLengths(),d=0,e=c.length,g;g=b?b:a*c[e-1];for(var f=0,i=e-1,h;f<=i;)if(d=Math.floor(f+(i-f)/2),h=c[d]-g,0>h)f=d+1;else if(0<h)i=d-1;else{i=d;break}d=i;if(c[d]==g)return d/(e-1);f=c[d];return c=(d+(g-f)/(c[d+1]-f))/(e-1)};THREE.Curve.prototype.getTangent=function(a){var b=a-1E-4,a=a+1E-4;0>b&&(b=0);1<a&&(a=1);b=this.getPoint(b);return this.getPoint(a).clone().sub(b).normalize()};
THREE.Curve.prototype.getTangentAt=function(a){a=this.getUtoTmapping(a);return this.getTangent(a)};THREE.LineCurve=function(a,b){this.v1=a;this.v2=b};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(a){var b=this.v2.clone().sub(this.v1);b.multiplyScalar(a).add(this.v1);return b};THREE.LineCurve.prototype.getPointAt=function(a){return this.getPoint(a)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().sub(this.v1).normalize()};
THREE.QuadraticBezierCurve=function(a,b,c){this.v0=a;this.v1=b;this.v2=c};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(b,a)};
THREE.QuadraticBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.x,this.v1.x,this.v2.x);a=THREE.Curve.Utils.tangentQuadraticBezier(a,this.v0.y,this.v1.y,this.v2.y);b=new THREE.Vector2(b,a);b.normalize();return b};THREE.CubicBezierCurve=function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);
THREE.CubicBezierCurve.prototype.getPoint=function(a){var b;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(b,a)};THREE.CubicBezierCurve.prototype.getTangent=function(a){var b;b=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);a=THREE.Curve.Utils.tangentCubicBezier(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);b=new THREE.Vector2(b,a);b.normalize();return b};
THREE.SplineCurve=function(a){this.points=void 0==a?[]:a};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(a){var b=new THREE.Vector2,c=[],d=this.points,e;e=(d.length-1)*a;a=Math.floor(e);e-=a;c[0]=0==a?a:a-1;c[1]=a;c[2]=a>d.length-2?d.length-1:a+1;c[3]=a>d.length-3?d.length-1:a+2;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);return b};
THREE.EllipseCurve=function(a,b,c,d,e,g,f){this.aX=a;this.aY=b;this.xRadius=c;this.yRadius=d;this.aStartAngle=e;this.aEndAngle=g;this.aClockwise=f};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(a){var b=this.aEndAngle-this.aStartAngle;this.aClockwise||(a=1-a);b=this.aStartAngle+a*b;a=this.aX+this.xRadius*Math.cos(b);b=this.aY+this.yRadius*Math.sin(b);return new THREE.Vector2(a,b)};
THREE.ArcCurve=function(a,b,c,d,e,g){THREE.EllipseCurve.call(this,a,b,c,c,d,e,g)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);
THREE.Curve.Utils={tangentQuadraticBezier:function(a,b,c,d){return 2*(1-a)*(c-b)+2*a*(d-c)},tangentCubicBezier:function(a,b,c,d,e){return-3*b*(1-a)*(1-a)+3*c*(1-a)*(1-a)-6*a*c*(1-a)+6*a*d*(1-a)-3*a*a*d+3*a*a*e},tangentSpline:function(a){return 6*a*a-6*a+(3*a*a-4*a+1)+(-6*a*a+6*a)+(3*a*a-2*a)},interpolate:function(a,b,c,d,e){var a=0.5*(c-a),d=0.5*(d-b),g=e*e;return(2*b-2*c+a+d)*e*g+(-3*b+3*c-2*a-d)*g+a*e+b}};
THREE.Curve.create=function(a,b){a.prototype=Object.create(THREE.Curve.prototype);a.prototype.getPoint=b;return a};THREE.LineCurve3=THREE.Curve.create(function(a,b){this.v1=a;this.v2=b},function(a){var b=new THREE.Vector3;b.subVectors(this.v2,this.v1);b.multiplyScalar(a);b.add(this.v1);return b});
THREE.QuadraticBezierCurve3=THREE.Curve.create(function(a,b,c){this.v0=a;this.v1=b;this.v2=c},function(a){var b,c;b=THREE.Shape.Utils.b2(a,this.v0.x,this.v1.x,this.v2.x);c=THREE.Shape.Utils.b2(a,this.v0.y,this.v1.y,this.v2.y);a=THREE.Shape.Utils.b2(a,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(b,c,a)});
THREE.CubicBezierCurve3=THREE.Curve.create(function(a,b,c,d){this.v0=a;this.v1=b;this.v2=c;this.v3=d},function(a){var b,c;b=THREE.Shape.Utils.b3(a,this.v0.x,this.v1.x,this.v2.x,this.v3.x);c=THREE.Shape.Utils.b3(a,this.v0.y,this.v1.y,this.v2.y,this.v3.y);a=THREE.Shape.Utils.b3(a,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(b,c,a)});
THREE.SplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e,a=(d.length-1)*a;e=Math.floor(a);a-=e;c[0]=0==e?e:e-1;c[1]=e;c[2]=e>d.length-2?d.length-1:e+1;c[3]=e>d.length-3?d.length-1:e+2;e=d[c[0]];var g=d[c[1]],f=d[c[2]],c=d[c[3]];b.x=THREE.Curve.Utils.interpolate(e.x,g.x,f.x,c.x,a);b.y=THREE.Curve.Utils.interpolate(e.y,g.y,f.y,c.y,a);b.z=THREE.Curve.Utils.interpolate(e.z,g.z,f.z,c.z,a);return b});
THREE.ClosedSplineCurve3=THREE.Curve.create(function(a){this.points=void 0==a?[]:a},function(a){var b=new THREE.Vector3,c=[],d=this.points,e;e=(d.length-0)*a;a=Math.floor(e);e-=a;a+=0<a?0:(Math.floor(Math.abs(a)/d.length)+1)*d.length;c[0]=(a-1)%d.length;c[1]=a%d.length;c[2]=(a+1)%d.length;c[3]=(a+2)%d.length;b.x=THREE.Curve.Utils.interpolate(d[c[0]].x,d[c[1]].x,d[c[2]].x,d[c[3]].x,e);b.y=THREE.Curve.Utils.interpolate(d[c[0]].y,d[c[1]].y,d[c[2]].y,d[c[3]].y,e);b.z=THREE.Curve.Utils.interpolate(d[c[0]].z,
d[c[1]].z,d[c[2]].z,d[c[3]].z,e);return b});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(a){this.curves.push(a)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var a=this.curves[0].getPoint(0),b=this.curves[this.curves.length-1].getPoint(1);a.equals(b)||this.curves.push(new THREE.LineCurve(b,a))};
THREE.CurvePath.prototype.getPoint=function(a){for(var b=a*this.getLength(),c=this.getCurveLengths(),a=0;a<c.length;){if(c[a]>=b)return b=c[a]-b,a=this.curves[a],b=1-b/a.getLength(),a.getPointAt(b);a++}return null};THREE.CurvePath.prototype.getLength=function(){var a=this.getCurveLengths();return a[a.length-1]};
THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length)return this.cacheLengths;var a=[],b=0,c,d=this.curves.length;for(c=0;c<d;c++)b+=this.curves[c].getLength(),a.push(b);return this.cacheLengths=a};
THREE.CurvePath.prototype.getBoundingBox=function(){var a=this.getPoints(),b,c,d,e,g,f;b=c=Number.NEGATIVE_INFINITY;e=g=Number.POSITIVE_INFINITY;var i,h,j,k,m=a[0]instanceof THREE.Vector3;k=m?new THREE.Vector3:new THREE.Vector2;h=0;for(j=a.length;h<j;h++)i=a[h],i.x>b?b=i.x:i.x<e&&(e=i.x),i.y>c?c=i.y:i.y<g&&(g=i.y),m&&(i.z>d?d=i.z:i.z<f&&(f=i.z)),k.add(i);a={minX:e,minY:g,maxX:b,maxY:c,centroid:k.divideScalar(j)};m&&(a.maxZ=d,a.minZ=f);return a};
THREE.CurvePath.prototype.createPointsGeometry=function(a){a=this.getPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(a){a=this.getSpacedPoints(a,!0);return this.createGeometry(a)};THREE.CurvePath.prototype.createGeometry=function(a){for(var b=new THREE.Geometry,c=0;c<a.length;c++)b.vertices.push(new THREE.Vector3(a[c].x,a[c].y,a[c].z||0));return b};THREE.CurvePath.prototype.addWrapPath=function(a){this.bends.push(a)};
THREE.CurvePath.prototype.getTransformedPoints=function(a,b){var c=this.getPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(a,b){var c=this.getSpacedPoints(a),d,e;b||(b=this.bends);d=0;for(e=b.length;d<e;d++)c=this.getWrapPoints(c,b[d]);return c};
THREE.CurvePath.prototype.getWrapPoints=function(a,b){var c=this.getBoundingBox(),d,e,g,f,i,h;d=0;for(e=a.length;d<e;d++)g=a[d],f=g.x,i=g.y,h=f/c.maxX,h=b.getUtoTmapping(h,f),f=b.getPoint(h),i=b.getNormalVector(h).multiplyScalar(i),g.x=f.x+i.x,g.y=f.y+i.y;return a};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);
THREE.Gyroscope.prototype.updateMatrixWorld=function(a){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||a)this.parent?(this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),
this.matrixWorldNeedsUpdate=!1,a=!0;for(var b=0,c=this.children.length;b<c;b++)this.children[b].updateMatrixWorld(a)};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(a){THREE.CurvePath.call(this);this.actions=[];a&&this.fromPoints(a)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(a){this.moveTo(a[0].x,a[0].y);for(var b=1,c=a.length;b<c;b++)this.lineTo(a[b].x,a[b].y)};
THREE.Path.prototype.moveTo=function(a,b){var c=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:c})};THREE.Path.prototype.lineTo=function(a,b){var c=Array.prototype.slice.call(arguments),d=this.actions[this.actions.length-1].args,d=new THREE.LineCurve(new THREE.Vector2(d[d.length-2],d[d.length-1]),new THREE.Vector2(a,b));this.curves.push(d);this.actions.push({action:THREE.PathActions.LINE_TO,args:c})};
THREE.Path.prototype.quadraticCurveTo=function(a,b,c,d){var e=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.QuadraticBezierCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d));this.curves.push(g);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:e})};
THREE.Path.prototype.bezierCurveTo=function(a,b,c,d,e,g){var f=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.CubicBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(a,b),new THREE.Vector2(c,d),new THREE.Vector2(e,g));this.curves.push(i);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:f})};
THREE.Path.prototype.splineThru=function(a){var b=Array.prototype.slice.call(arguments),c=this.actions[this.actions.length-1].args,c=[new THREE.Vector2(c[c.length-2],c[c.length-1])];Array.prototype.push.apply(c,a);c=new THREE.SplineCurve(c);this.curves.push(c);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:b})};THREE.Path.prototype.arc=function(a,b,c,d,e,g){var f=this.actions[this.actions.length-1].args;this.absarc(a+f[f.length-2],b+f[f.length-1],c,d,e,g)};
THREE.Path.prototype.absarc=function(a,b,c,d,e,g){this.absellipse(a,b,c,c,d,e,g)};THREE.Path.prototype.ellipse=function(a,b,c,d,e,g,f){var i=this.actions[this.actions.length-1].args;this.absellipse(a+i[i.length-2],b+i[i.length-1],c,d,e,g,f)};THREE.Path.prototype.absellipse=function(a,b,c,d,e,g,f){var i=Array.prototype.slice.call(arguments),h=new THREE.EllipseCurve(a,b,c,d,e,g,f);this.curves.push(h);h=h.getPoint(f?1:0);i.push(h.x);i.push(h.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:i})};
THREE.Path.prototype.getSpacedPoints=function(a){a||(a=40);for(var b=[],c=0;c<a;c++)b.push(this.getPoint(c/a));return b};
THREE.Path.prototype.getPoints=function(a,b){if(this.useSpacedPoints)return console.log("tata"),this.getSpacedPoints(a,b);var a=a||12,c=[],d,e,g,f,i,h,j,k,m,l,q,p,r;d=0;for(e=this.actions.length;d<e;d++)switch(g=this.actions[d],f=g.action,g=g.args,f){case THREE.PathActions.MOVE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.LINE_TO:c.push(new THREE.Vector2(g[0],g[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:i=g[2];h=g[3];m=g[0];l=g[1];0<c.length?(f=c[c.length-1],q=f.x,
p=f.y):(f=this.actions[d-1].args,q=f[f.length-2],p=f[f.length-1]);for(g=1;g<=a;g++)r=g/a,f=THREE.Shape.Utils.b2(r,q,m,i),r=THREE.Shape.Utils.b2(r,p,l,h),c.push(new THREE.Vector2(f,r));break;case THREE.PathActions.BEZIER_CURVE_TO:i=g[4];h=g[5];m=g[0];l=g[1];j=g[2];k=g[3];0<c.length?(f=c[c.length-1],q=f.x,p=f.y):(f=this.actions[d-1].args,q=f[f.length-2],p=f[f.length-1]);for(g=1;g<=a;g++)r=g/a,f=THREE.Shape.Utils.b3(r,q,m,j,i),r=THREE.Shape.Utils.b3(r,p,l,k,h),c.push(new THREE.Vector2(f,r));break;case THREE.PathActions.CSPLINE_THRU:f=
this.actions[d-1].args;r=[new THREE.Vector2(f[f.length-2],f[f.length-1])];f=a*g[0].length;r=r.concat(g[0]);r=new THREE.SplineCurve(r);for(g=1;g<=f;g++)c.push(r.getPointAt(g/f));break;case THREE.PathActions.ARC:i=g[0];h=g[1];l=g[2];j=g[3];f=g[4];m=!!g[5];q=f-j;p=2*a;for(g=1;g<=p;g++)r=g/p,m||(r=1-r),r=j+r*q,f=i+l*Math.cos(r),r=h+l*Math.sin(r),c.push(new THREE.Vector2(f,r));break;case THREE.PathActions.ELLIPSE:i=g[0];h=g[1];l=g[2];k=g[3];j=g[4];f=g[5];m=!!g[6];q=f-j;p=2*a;for(g=1;g<=p;g++)r=g/p,m||
(r=1-r),r=j+r*q,f=i+l*Math.cos(r),r=h+k*Math.sin(r),c.push(new THREE.Vector2(f,r))}d=c[c.length-1];1E-10>Math.abs(d.x-c[0].x)&&1E-10>Math.abs(d.y-c[0].y)&&c.splice(c.length-1,1);b&&c.push(c[0]);return c};
THREE.Path.prototype.toShapes=function(){var a,b,c,d,e=[],g=new THREE.Path;a=0;for(b=this.actions.length;a<b;a++)c=this.actions[a],d=c.args,c=c.action,c==THREE.PathActions.MOVE_TO&&0!=g.actions.length&&(e.push(g),g=new THREE.Path),g[c].apply(g,d);0!=g.actions.length&&e.push(g);if(0==e.length)return[];var f;d=[];a=!THREE.Shape.Utils.isClockWise(e[0].getPoints());if(1==e.length)return g=e[0],f=new THREE.Shape,f.actions=g.actions,f.curves=g.curves,d.push(f),d;if(a){f=new THREE.Shape;a=0;for(b=e.length;a<
b;a++)g=e[a],THREE.Shape.Utils.isClockWise(g.getPoints())?(f.actions=g.actions,f.curves=g.curves,d.push(f),f=new THREE.Shape):f.holes.push(g)}else{a=0;for(b=e.length;a<b;a++)g=e[a],THREE.Shape.Utils.isClockWise(g.getPoints())?(f&&d.push(f),f=new THREE.Shape,f.actions=g.actions,f.curves=g.curves):f.holes.push(g);d.push(f)}return d};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(a){return new THREE.ExtrudeGeometry(this,a)};THREE.Shape.prototype.makeGeometry=function(a){return new THREE.ShapeGeometry(this,a)};THREE.Shape.prototype.getPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedPoints(a,this.bends);return d};
THREE.Shape.prototype.getSpacedPointsHoles=function(a){var b,c=this.holes.length,d=[];for(b=0;b<c;b++)d[b]=this.holes[b].getTransformedSpacedPoints(a,this.bends);return d};THREE.Shape.prototype.extractAllPoints=function(a){return{shape:this.getTransformedPoints(a),holes:this.getPointsHoles(a)}};THREE.Shape.prototype.extractPoints=function(a){return this.useSpacedPoints?this.extractAllSpacedPoints(a):this.extractAllPoints(a)};
THREE.Shape.prototype.extractAllSpacedPoints=function(a){return{shape:this.getTransformedSpacedPoints(a),holes:this.getSpacedPointsHoles(a)}};
THREE.Shape.Utils={removeHoles:function(a,b){var c=a.concat(),d=c.concat(),e,g,f,i,h,j,k,m,l,q,p=[];for(h=0;h<b.length;h++){j=b[h];Array.prototype.push.apply(d,j);g=Number.POSITIVE_INFINITY;for(e=0;e<j.length;e++){l=j[e];q=[];for(m=0;m<c.length;m++)k=c[m],k=l.distanceToSquared(k),q.push(k),k<g&&(g=k,f=e,i=m)}e=0<=i-1?i-1:c.length-1;g=0<=f-1?f-1:j.length-1;var r=[j[f],c[i],c[e]];m=THREE.FontUtils.Triangulate.area(r);var s=[j[f],j[g],c[i]];l=THREE.FontUtils.Triangulate.area(s);q=i;k=f;i+=1;f+=-1;0>
i&&(i+=c.length);i%=c.length;0>f&&(f+=j.length);f%=j.length;e=0<=i-1?i-1:c.length-1;g=0<=f-1?f-1:j.length-1;r=[j[f],c[i],c[e]];r=THREE.FontUtils.Triangulate.area(r);s=[j[f],j[g],c[i]];s=THREE.FontUtils.Triangulate.area(s);m+l>r+s&&(i=q,f=k,0>i&&(i+=c.length),i%=c.length,0>f&&(f+=j.length),f%=j.length,e=0<=i-1?i-1:c.length-1,g=0<=f-1?f-1:j.length-1);m=c.slice(0,i);l=c.slice(i);q=j.slice(f);k=j.slice(0,f);g=[j[f],j[g],c[i]];p.push([j[f],c[i],c[e]]);p.push(g);c=m.concat(q).concat(k).concat(l)}return{shape:c,
isolatedPts:p,allpoints:d}},triangulateShape:function(a,b){var c=THREE.Shape.Utils.removeHoles(a,b),d=c.allpoints,e=c.isolatedPts,c=THREE.FontUtils.Triangulate(c.shape,!1),g,f,i,h,j={};g=0;for(f=d.length;g<f;g++)h=d[g].x+":"+d[g].y,void 0!==j[h]&&console.log("Duplicate point",h),j[h]=g;g=0;for(f=c.length;g<f;g++){i=c[g];for(d=0;3>d;d++)h=i[d].x+":"+i[d].y,h=j[h],void 0!==h&&(i[d]=h)}g=0;for(f=e.length;g<f;g++){i=e[g];for(d=0;3>d;d++)h=i[d].x+":"+i[d].y,h=j[h],void 0!==h&&(i[d]=h)}return c.concat(e)},
isClockWise:function(a){return 0>THREE.FontUtils.Triangulate.area(a)},b2p0:function(a,b){var c=1-a;return c*c*b},b2p1:function(a,b){return 2*(1-a)*a*b},b2p2:function(a,b){return a*a*b},b2:function(a,b,c,d){return this.b2p0(a,b)+this.b2p1(a,c)+this.b2p2(a,d)},b3p0:function(a,b){var c=1-a;return c*c*c*b},b3p1:function(a,b){var c=1-a;return 3*c*c*a*b},b3p2:function(a,b){return 3*(1-a)*a*a*b},b3p3:function(a,b){return a*a*a*b},b3:function(a,b,c,d,e){return this.b3p0(a,b)+this.b3p1(a,c)+this.b3p2(a,d)+
this.b3p3(a,e)}};THREE.AnimationHandler=function(){var a=[],b={},c={update:function(b){for(var c=0;c<a.length;c++)a[c].update(b)},addToUpdate:function(b){-1===a.indexOf(b)&&a.push(b)},removeFromUpdate:function(b){b=a.indexOf(b);-1!==b&&a.splice(b,1)},add:function(a){void 0!==b[a.name]&&console.log("THREE.AnimationHandler.add: Warning! "+a.name+" already exists in library. Overwriting.");b[a.name]=a;if(!0!==a.initialized){for(var c=0;c<a.hierarchy.length;c++){for(var d=0;d<a.hierarchy[c].keys.length;d++)if(0>a.hierarchy[c].keys[d].time&&
(a.hierarchy[c].keys[d].time=0),void 0!==a.hierarchy[c].keys[d].rot&&!(a.hierarchy[c].keys[d].rot instanceof THREE.Quaternion)){var i=a.hierarchy[c].keys[d].rot;a.hierarchy[c].keys[d].rot=new THREE.Quaternion(i[0],i[1],i[2],i[3])}if(a.hierarchy[c].keys.length&&void 0!==a.hierarchy[c].keys[0].morphTargets){i={};for(d=0;d<a.hierarchy[c].keys.length;d++)for(var h=0;h<a.hierarchy[c].keys[d].morphTargets.length;h++){var j=a.hierarchy[c].keys[d].morphTargets[h];i[j]=-1}a.hierarchy[c].usedMorphTargets=i;
for(d=0;d<a.hierarchy[c].keys.length;d++){var k={};for(j in i){for(h=0;h<a.hierarchy[c].keys[d].morphTargets.length;h++)if(a.hierarchy[c].keys[d].morphTargets[h]===j){k[j]=a.hierarchy[c].keys[d].morphTargetsInfluences[h];break}h===a.hierarchy[c].keys[d].morphTargets.length&&(k[j]=0)}a.hierarchy[c].keys[d].morphTargetsInfluences=k}}for(d=1;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].time===a.hierarchy[c].keys[d-1].time&&(a.hierarchy[c].keys.splice(d,1),d--);for(d=0;d<a.hierarchy[c].keys.length;d++)a.hierarchy[c].keys[d].index=
d}d=parseInt(a.length*a.fps,10);a.JIT={};a.JIT.hierarchy=[];for(c=0;c<a.hierarchy.length;c++)a.JIT.hierarchy.push(Array(d));a.initialized=!0}},get:function(a){if("string"===typeof a){if(b[a])return b[a];console.log("THREE.AnimationHandler.get: Couldn't find animation "+a);return null}},parse:function(a){var b=[];if(a instanceof THREE.SkinnedMesh)for(var c=0;c<a.bones.length;c++)b.push(a.bones[c]);else d(a,b);return b}},d=function(a,b){b.push(a);for(var c=0;c<a.children.length;c++)d(a.children[c],
b)};c.LINEAR=0;c.CATMULLROM=1;c.CATMULLROM_FORWARD=2;return c}();THREE.Animation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==c?c:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};
THREE.Animation.prototype.play=function(a,b){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;var c,d=this.hierarchy.length,e;for(c=0;c<d;c++){e=this.hierarchy[c];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(e.useQuaternion=!0);e.matrixAutoUpdate=!0;void 0===e.animationCache&&(e.animationCache={},e.animationCache.prevKey={pos:0,rot:0,scl:0},e.animationCache.nextKey={pos:0,rot:0,scl:0},e.animationCache.originalMatrix=e instanceof
THREE.Bone?e.skinMatrix:e.matrix);var g=e.animationCache.prevKey;e=e.animationCache.nextKey;g.pos=this.data.hierarchy[c].keys[0];g.rot=this.data.hierarchy[c].keys[0];g.scl=this.data.hierarchy[c].keys[0];e.pos=this.getNextKeyWith("pos",c,1);e.rot=this.getNextKeyWith("rot",c,1);e.scl=this.getNextKeyWith("scl",c,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};
THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};
THREE.Animation.prototype.update=function(a){if(!1!==this.isPlaying){var b=["pos","rot","scl"],c,d,e,g,f,i,h,j,k;k=this.currentTime+=a*this.timeScale;j=this.currentTime%=this.data.length;parseInt(Math.min(j*this.data.fps,this.data.length*this.data.fps),10);for(var m=0,l=this.hierarchy.length;m<l;m++){a=this.hierarchy[m];h=a.animationCache;for(var q=0;3>q;q++){c=b[q];f=h.prevKey[c];i=h.nextKey[c];if(i.time<=k){if(j<k)if(this.loop){f=this.data.hierarchy[m].keys[0];for(i=this.getNextKeyWith(c,m,1);i.time<
j;)f=i,i=this.getNextKeyWith(c,m,i.index+1)}else{this.stop();return}else{do f=i,i=this.getNextKeyWith(c,m,i.index+1);while(i.time<j)}h.prevKey[c]=f;h.nextKey[c]=i}a.matrixAutoUpdate=!0;a.matrixWorldNeedsUpdate=!0;d=(j-f.time)/(i.time-f.time);e=f[c];g=i[c];if(0>d||1<d)console.log("THREE.Animation.update: Warning! Scale out of bounds:"+d+" on bone "+m),d=0>d?0:1;if("pos"===c)if(c=a.position,this.interpolationType===THREE.AnimationHandler.LINEAR)c.x=e[0]+(g[0]-e[0])*d,c.y=e[1]+(g[1]-e[1])*d,c.z=e[2]+
(g[2]-e[2])*d;else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD)this.points[0]=this.getPrevKeyWith("pos",m,f.index-1).pos,this.points[1]=e,this.points[2]=g,this.points[3]=this.getNextKeyWith("pos",m,i.index+1).pos,d=0.33*d+0.33,e=this.interpolateCatmullRom(this.points,d),c.x=e[0],c.y=e[1],c.z=e[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(d=this.interpolateCatmullRom(this.points,1.01*d),
this.target.set(d[0],d[1],d[2]),this.target.sub(c),this.target.y=0,this.target.normalize(),d=Math.atan2(this.target.x,this.target.z),a.rotation.set(0,d,0))}else"rot"===c?THREE.Quaternion.slerp(e,g,a.quaternion,d):"scl"===c&&(c=a.scale,c.x=e[0]+(g[0]-e[0])*d,c.y=e[1]+(g[1]-e[1])*d,c.z=e[2]+(g[2]-e[2])*d)}}}};
THREE.Animation.prototype.interpolateCatmullRom=function(a,b){var c=[],d=[],e,g,f,i,h,j;e=(a.length-1)*b;g=Math.floor(e);e-=g;c[0]=0===g?g:g-1;c[1]=g;c[2]=g>a.length-2?g:g+1;c[3]=g>a.length-3?g:g+2;g=a[c[0]];i=a[c[1]];h=a[c[2]];j=a[c[3]];c=e*e;f=e*c;d[0]=this.interpolate(g[0],i[0],h[0],j[0],e,c,f);d[1]=this.interpolate(g[1],i[1],h[1],j[1],e,c,f);d[2]=this.interpolate(g[2],i[2],h[2],j[2],e,c,f);return d};
THREE.Animation.prototype.interpolate=function(a,b,c,d,e,g,f){a=0.5*(c-a);d=0.5*(d-b);return(2*(b-c)+a+d)*f+(-3*(b-c)-2*a-d)*g+a*e+b};THREE.Animation.prototype.getNextKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?c<d.length-1?c:d.length-1:c%d.length;c<d.length;c++)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[0]};
THREE.Animation.prototype.getPrevKeyWith=function(a,b,c){for(var d=this.data.hierarchy[b].keys,c=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<c?c:0:0<=c?c:c+d.length;0<=c;c--)if(void 0!==d[c][a])return d[c];return this.data.hierarchy[b].keys[d.length-1]};THREE.KeyFrameAnimation=function(a,b,c){this.root=a;this.data=THREE.AnimationHandler.get(b);this.hierarchy=THREE.AnimationHandler.parse(a);this.currentTime=0;this.timeScale=0.0010;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==c?c:!0;a=0;for(b=this.hierarchy.length;a<b;a++){var c=this.data.hierarchy[a].sids,d=this.hierarchy[a];if(this.data.hierarchy[a].keys.length&&c){for(var e=0;e<c.length;e++){var g=c[e],f=this.getNextKeyWith(g,a,0);f&&f.apply(g)}d.matrixAutoUpdate=!1;this.data.hierarchy[a].node.updateMatrix();
d.matrixWorldNeedsUpdate=!0}}};
THREE.KeyFrameAnimation.prototype.play=function(a,b){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==a?a:!0;this.currentTime=void 0!==b?b:0;this.startTimeMs=b;this.startTime=1E7;this.endTime=-this.startTime;var c,d=this.hierarchy.length,e,g;for(c=0;c<d;c++)e=this.hierarchy[c],g=this.data.hierarchy[c],e.useQuaternion=!0,void 0===g.animationCache&&(g.animationCache={},g.animationCache.prevKey=null,g.animationCache.nextKey=null,g.animationCache.originalMatrix=e instanceof THREE.Bone?e.skinMatrix:
e.matrix),e=this.data.hierarchy[c].keys,e.length&&(g.animationCache.prevKey=e[0],g.animationCache.nextKey=e[1],this.startTime=Math.min(e[0].time,this.startTime),this.endTime=Math.max(e[e.length-1].time,this.endTime));this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};
THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var a=0;a<this.data.hierarchy.length;a++){var b=this.hierarchy[a],c=this.data.hierarchy[a];if(void 0!==c.animationCache){var d=c.animationCache.originalMatrix;b instanceof THREE.Bone?(d.copy(b.skinMatrix),b.skinMatrix=d):(d.copy(b.matrix),b.matrix=d);delete c.animationCache}}};
THREE.KeyFrameAnimation.prototype.update=function(a){if(this.isPlaying){var b,c,d,e,g=this.data.JIT.hierarchy,f,i,h;i=this.currentTime+=a*this.timeScale;f=this.currentTime%=this.data.length;f<this.startTimeMs&&(f=this.currentTime=this.startTimeMs+f);e=parseInt(Math.min(f*this.data.fps,this.data.length*this.data.fps),10);if((h=f<i)&&!this.loop){for(var a=0,j=this.hierarchy.length;a<j;a++){var k=this.data.hierarchy[a].keys,g=this.data.hierarchy[a].sids;d=k.length-1;e=this.hierarchy[a];if(k.length){for(k=
0;k<g.length;k++)f=g[k],(i=this.getPrevKeyWith(f,a,d))&&i.apply(f);this.data.hierarchy[a].node.updateMatrix();e.matrixWorldNeedsUpdate=!0}}this.stop()}else if(!(f<this.startTime)){a=0;for(j=this.hierarchy.length;a<j;a++){d=this.hierarchy[a];b=this.data.hierarchy[a];var k=b.keys,m=b.animationCache;if(this.JITCompile&&void 0!==g[a][e])d instanceof THREE.Bone?(d.skinMatrix=g[a][e],d.matrixWorldNeedsUpdate=!1):(d.matrix=g[a][e],d.matrixWorldNeedsUpdate=!0);else if(k.length){this.JITCompile&&m&&(d instanceof
THREE.Bone?d.skinMatrix=m.originalMatrix:d.matrix=m.originalMatrix);b=m.prevKey;c=m.nextKey;if(b&&c){if(c.time<=i){if(h&&this.loop){b=k[0];for(c=k[1];c.time<f;)b=c,c=k[b.index+1]}else if(!h)for(var l=k.length-1;c.time<f&&c.index!==l;)b=c,c=k[b.index+1];m.prevKey=b;m.nextKey=c}c.time>=f?b.interpolate(c,f):b.interpolate(c,c.time)}this.data.hierarchy[a].node.updateMatrix();d.matrixWorldNeedsUpdate=!0}}if(this.JITCompile&&void 0===g[0][e]){this.hierarchy[0].updateMatrixWorld(!0);for(a=0;a<this.hierarchy.length;a++)g[a][e]=
this.hierarchy[a]instanceof THREE.Bone?this.hierarchy[a].skinMatrix.clone():this.hierarchy[a].matrix.clone()}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c%=b.length;c<b.length;c++)if(b[c].hasTarget(a))return b[c];return b[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(a,b,c){b=this.data.hierarchy[b].keys;for(c=0<=c?c:c+b.length;0<=c;c--)if(b[c].hasTarget(a))return b[c];return b[b.length-1]};THREE.CubeCamera=function(a,b,c){THREE.Object3D.call(this);var d=new THREE.PerspectiveCamera(90,1,a,b);d.up.set(0,-1,0);d.lookAt(new THREE.Vector3(1,0,0));this.add(d);var e=new THREE.PerspectiveCamera(90,1,a,b);e.up.set(0,-1,0);e.lookAt(new THREE.Vector3(-1,0,0));this.add(e);var g=new THREE.PerspectiveCamera(90,1,a,b);g.up.set(0,0,1);g.lookAt(new THREE.Vector3(0,1,0));this.add(g);var f=new THREE.PerspectiveCamera(90,1,a,b);f.up.set(0,0,-1);f.lookAt(new THREE.Vector3(0,-1,0));this.add(f);var i=new THREE.PerspectiveCamera(90,
1,a,b);i.up.set(0,-1,0);i.lookAt(new THREE.Vector3(0,0,1));this.add(i);var h=new THREE.PerspectiveCamera(90,1,a,b);h.up.set(0,-1,0);h.lookAt(new THREE.Vector3(0,0,-1));this.add(h);this.renderTarget=new THREE.WebGLRenderTargetCube(c,c,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(a,b){var c=this.renderTarget,l=c.generateMipmaps;c.generateMipmaps=!1;c.activeCubeFace=0;a.render(b,d,c);c.activeCubeFace=1;a.render(b,e,c);c.activeCubeFace=
2;a.render(b,g,c);c.activeCubeFace=3;a.render(b,f,c);c.activeCubeFace=4;a.render(b,i,c);c.generateMipmaps=l;c.activeCubeFace=5;a.render(b,h,c)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(a,b,c,d,e,g,f){THREE.Camera.call(this);this.fov=c;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2;this.cameraO=new THREE.OrthographicCamera(a/-2,a/2,b/2,b/-2,g,f);this.cameraP=new THREE.PerspectiveCamera(c,a/b,d,e);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);
THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};
THREE.CombinedCamera.prototype.toOrthographic=function(){var a=this.cameraP.aspect,b=(this.cameraP.near+this.cameraP.far)/2,b=Math.tan(this.fov/2)*b,a=2*b*a/2,b=b/this.zoom,a=a/this.zoom;this.cameraO.left=-a;this.cameraO.right=a;this.cameraO.top=b;this.cameraO.bottom=-b;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};
THREE.CombinedCamera.prototype.setSize=function(a,b){this.cameraP.aspect=a/b;this.left=-a/2;this.right=a/2;this.top=b/2;this.bottom=-b/2};THREE.CombinedCamera.prototype.setFov=function(a){this.fov=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};
THREE.CombinedCamera.prototype.setLens=function(a,b){void 0===b&&(b=24);var c=2*THREE.Math.radToDeg(Math.atan(b/(2*a)));this.setFov(c);return c};THREE.CombinedCamera.prototype.setZoom=function(a){this.zoom=a;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};
THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.AsteriskGeometry=function(a,b){THREE.Geometry.call(this);for(var c=0.707*a,d=0.707*b,c=[[a,0,0],[b,0,0],[-a,0,0],[-b,0,0],[0,a,0],[0,b,0],[0,-a,0],[0,-b,0],[0,0,a],[0,0,b],[0,0,-a],[0,0,-b],[c,c,0],[d,d,0],[-c,-c,0],[-d,-d,0],[c,-c,0],[d,-d,0],[-c,c,0],[-d,d,0],[c,0,c],[d,0,d],[-c,0,-c],[-d,0,-d],[c,0,-c],[d,0,-d],[-c,0,c],[-d,0,d],[0,c,c],[0,d,d],[0,-c,-c],[0,-d,-d],[0,c,-c],[0,d,-d],[0,-c,c],[0,-d,d]],d=0,e=c.length;d<e;d++)this.vertices.push(new THREE.Vector3(c[d][0],c[d][1],c[d][2]))};
THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(a,b,c,d){THREE.Geometry.call(this);var a=a||50,c=void 0!==c?c:0,d=void 0!==d?d:2*Math.PI,b=void 0!==b?Math.max(3,b):8,e,g=[];e=new THREE.Vector3;var f=new THREE.Vector2(0.5,0.5);this.vertices.push(e);g.push(f);for(e=0;e<=b;e++){var i=new THREE.Vector3;i.x=a*Math.cos(c+e/b*d);i.y=a*Math.sin(c+e/b*d);this.vertices.push(i);g.push(new THREE.Vector2((i.x/a+1)/2,-(i.y/a+1)/2+1))}c=new THREE.Vector3(0,0,-1);for(e=1;e<=b;e++)this.faces.push(new THREE.Face3(e,e+1,0,[c,c,c])),
this.faceVertexUvs[0].push([g[e],g[e+1],f]);this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(a,b,c,d,e,g){function f(a,b,c,d,e,f,g,r){var s,t=i.widthSegments,x=i.heightSegments,v=e/2,w=f/2,y=i.vertices.length;if("x"===a&&"y"===b||"y"===a&&"x"===b)s="z";else if("x"===a&&"z"===b||"z"===a&&"x"===b)s="y",x=i.depthSegments;else if("z"===a&&"y"===b||"y"===a&&"z"===b)s="x",t=i.depthSegments;var D=t+1,C=x+1,u=e/t,E=f/x,z=new THREE.Vector3;z[s]=0<g?1:-1;for(e=0;e<C;e++)for(f=0;f<D;f++){var H=new THREE.Vector3;H[a]=(f*u-v)*c;H[b]=(e*E-w)*d;H[s]=g;i.vertices.push(H)}for(e=
0;e<x;e++)for(f=0;f<t;f++)a=new THREE.Face4(f+D*e+y,f+D*(e+1)+y,f+1+D*(e+1)+y,f+1+D*e+y),a.normal.copy(z),a.vertexNormals.push(z.clone(),z.clone(),z.clone(),z.clone()),a.materialIndex=r,i.faces.push(a),i.faceVertexUvs[0].push([new THREE.Vector2(f/t,1-e/x),new THREE.Vector2(f/t,1-(e+1)/x),new THREE.Vector2((f+1)/t,1-(e+1)/x),new THREE.Vector2((f+1)/t,1-e/x)])}THREE.Geometry.call(this);var i=this;this.width=a;this.height=b;this.depth=c;this.widthSegments=d||1;this.heightSegments=e||1;this.depthSegments=
g||1;a=this.width/2;b=this.height/2;c=this.depth/2;f("z","y",-1,-1,this.depth,this.height,a,0);f("z","y",1,-1,this.depth,this.height,-a,1);f("x","z",1,1,this.width,this.depth,b,2);f("x","z",1,-1,this.width,this.depth,-b,3);f("x","y",1,-1,this.width,this.height,c,4);f("x","y",-1,-1,this.width,this.height,-c,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);var a=void 0!==a?a:20,b=void 0!==b?b:20,c=void 0!==c?c:100,f=c/2,d=d||8,e=e||1,i,h,j=[],k=[];for(h=0;h<=e;h++){var m=[],l=[],q=h/e,p=q*(b-a)+a;for(i=0;i<=d;i++){var r=i/d,s=new THREE.Vector3;s.x=p*Math.sin(2*r*Math.PI);s.y=-q*c+f;s.z=p*Math.cos(2*r*Math.PI);this.vertices.push(s);m.push(this.vertices.length-1);l.push(new THREE.Vector2(r,1-q))}j.push(m);k.push(l)}c=(b-a)/c;for(i=0;i<d;i++){0!==a?(m=this.vertices[j[0][i]].clone(),
l=this.vertices[j[0][i+1]].clone()):(m=this.vertices[j[1][i]].clone(),l=this.vertices[j[1][i+1]].clone());m.setY(Math.sqrt(m.x*m.x+m.z*m.z)*c).normalize();l.setY(Math.sqrt(l.x*l.x+l.z*l.z)*c).normalize();for(h=0;h<e;h++){var q=j[h][i],p=j[h+1][i],r=j[h+1][i+1],s=j[h][i+1],t=m.clone(),x=m.clone(),v=l.clone(),w=l.clone(),y=k[h][i].clone(),D=k[h+1][i].clone(),C=k[h+1][i+1].clone(),u=k[h][i+1].clone();this.faces.push(new THREE.Face4(q,p,r,s,[t,x,v,w]));this.faceVertexUvs[0].push([y,D,C,u])}}if(!g&&0<
a){this.vertices.push(new THREE.Vector3(0,f,0));for(i=0;i<d;i++)q=j[0][i],p=j[0][i+1],r=this.vertices.length-1,t=new THREE.Vector3(0,1,0),x=new THREE.Vector3(0,1,0),v=new THREE.Vector3(0,1,0),y=k[0][i].clone(),D=k[0][i+1].clone(),C=new THREE.Vector2(D.u,0),this.faces.push(new THREE.Face3(q,p,r,[t,x,v])),this.faceVertexUvs[0].push([y,D,C])}if(!g&&0<b){this.vertices.push(new THREE.Vector3(0,-f,0));for(i=0;i<d;i++)q=j[h][i+1],p=j[h][i],r=this.vertices.length-1,t=new THREE.Vector3(0,-1,0),x=new THREE.Vector3(0,
-1,0),v=new THREE.Vector3(0,-1,0),y=k[h][i+1].clone(),D=k[h][i].clone(),C=new THREE.Vector2(D.u,1),this.faces.push(new THREE.Face3(q,p,r,[t,x,v])),this.faceVertexUvs[0].push([y,D,C])}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(a,b){"undefined"!==typeof a&&(THREE.Geometry.call(this),a=a instanceof Array?a:[a],this.shapebb=a[a.length-1].getBoundingBox(),this.addShapeList(a,b),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(a,b){for(var c=a.length,d=0;d<c;d++)this.addShape(a[d],b)};
THREE.ExtrudeGeometry.prototype.addShape=function(a,b){function c(a,b,c){b||console.log("die");return b.clone().multiplyScalar(c).add(a)}function d(a,b,c){var d=THREE.ExtrudeGeometry.__v1,e=THREE.ExtrudeGeometry.__v2,f=THREE.ExtrudeGeometry.__v3,g=THREE.ExtrudeGeometry.__v4,i=THREE.ExtrudeGeometry.__v5,h=THREE.ExtrudeGeometry.__v6;d.set(a.x-b.x,a.y-b.y);e.set(a.x-c.x,a.y-c.y);d=d.normalize();e=e.normalize();f.set(-d.y,d.x);g.set(e.y,-e.x);i.copy(a).add(f);h.copy(a).add(g);if(i.equals(h))return g.clone();
i.copy(b).add(f);h.copy(c).add(g);f=d.dot(g);g=h.sub(i).dot(g);0===f&&(console.log("Either infinite or no solutions!"),0===g?console.log("Its finite solutions."):console.log("Too bad, no solutions."));g/=f;0>g?(b=Math.atan2(b.y-a.y,b.x-a.x),a=Math.atan2(c.y-a.y,c.x-a.x),b>a&&(a+=2*Math.PI),c=(b+a)/2,a=-Math.cos(c),c=-Math.sin(c),a=new THREE.Vector2(a,c)):a=d.multiplyScalar(g).add(i).sub(a).clone();return a}function e(c,d){var e,f;for(G=c.length;0<=--G;){e=G;f=G-1;0>f&&(f=c.length-1);for(var g=0,i=
q+2*k,g=0;g<i;g++){var h=ca*g,j=ca*(g+1),l=d+e+h,h=d+f+h,m=d+f+j,j=d+e+j,r=c,p=g,s=i,t=e,y=f,l=l+O,h=h+O,m=m+O,j=j+O;H.faces.push(new THREE.Face4(l,h,m,j,null,null,x));l=v.generateSideWallUV(H,a,r,b,l,h,m,j,p,s,t,y);H.faceVertexUvs[0].push(l)}}}function g(a,b,c){H.vertices.push(new THREE.Vector3(a,b,c))}function f(c,d,e,f){c+=O;d+=O;e+=O;H.faces.push(new THREE.Face3(c,d,e,null,null,t));c=f?v.generateBottomUV(H,a,b,c,d,e):v.generateTopUV(H,a,b,c,d,e);H.faceVertexUvs[0].push(c)}var i=void 0!==b.amount?
b.amount:100,h=void 0!==b.bevelThickness?b.bevelThickness:6,j=void 0!==b.bevelSize?b.bevelSize:h-2,k=void 0!==b.bevelSegments?b.bevelSegments:3,m=void 0!==b.bevelEnabled?b.bevelEnabled:!0,l=void 0!==b.curveSegments?b.curveSegments:12,q=void 0!==b.steps?b.steps:1,p=b.extrudePath,r,s=!1,t=b.material,x=b.extrudeMaterial,v=void 0!==b.UVGenerator?b.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,w,y,D,C;p&&(r=p.getSpacedPoints(q),s=!0,m=!1,w=void 0!==b.frames?b.frames:new THREE.TubeGeometry.FrenetFrames(p,
q,!1),y=new THREE.Vector3,D=new THREE.Vector3,C=new THREE.Vector3);m||(j=h=k=0);var u,E,z,H=this,O=this.vertices.length,l=a.extractPoints(l),F=l.shape,l=l.holes;if(p=!THREE.Shape.Utils.isClockWise(F)){F=F.reverse();E=0;for(z=l.length;E<z;E++)u=l[E],THREE.Shape.Utils.isClockWise(u)&&(l[E]=u.reverse());p=!1}var R=THREE.Shape.Utils.triangulateShape(F,l),p=F;E=0;for(z=l.length;E<z;E++)u=l[E],F=F.concat(u);var I,K,L,S,ca=F.length,Y=R.length,N=[],G=0,ha=p.length;I=ha-1;for(K=G+1;G<ha;G++,I++,K++)I===ha&&
(I=0),K===ha&&(K=0),N[G]=d(p[G],p[I],p[K]);var la=[],wa,M=N.concat();E=0;for(z=l.length;E<z;E++){u=l[E];wa=[];G=0;ha=u.length;I=ha-1;for(K=G+1;G<ha;G++,I++,K++)I===ha&&(I=0),K===ha&&(K=0),wa[G]=d(u[G],u[I],u[K]);la.push(wa);M=M.concat(wa)}for(I=0;I<k;I++){u=I/k;L=h*(1-u);K=j*Math.sin(u*Math.PI/2);G=0;for(ha=p.length;G<ha;G++)S=c(p[G],N[G],K),g(S.x,S.y,-L);E=0;for(z=l.length;E<z;E++){u=l[E];wa=la[E];G=0;for(ha=u.length;G<ha;G++)S=c(u[G],wa[G],K),g(S.x,S.y,-L)}}K=j;for(G=0;G<ca;G++)S=m?c(F[G],M[G],
K):F[G],s?(D.copy(w.normals[0]).multiplyScalar(S.x),y.copy(w.binormals[0]).multiplyScalar(S.y),C.copy(r[0]).add(D).add(y),g(C.x,C.y,C.z)):g(S.x,S.y,0);for(u=1;u<=q;u++)for(G=0;G<ca;G++)S=m?c(F[G],M[G],K):F[G],s?(D.copy(w.normals[u]).multiplyScalar(S.x),y.copy(w.binormals[u]).multiplyScalar(S.y),C.copy(r[u]).add(D).add(y),g(C.x,C.y,C.z)):g(S.x,S.y,i/q*u);for(I=k-1;0<=I;I--){u=I/k;L=h*(1-u);K=j*Math.sin(u*Math.PI/2);G=0;for(ha=p.length;G<ha;G++)S=c(p[G],N[G],K),g(S.x,S.y,i+L);E=0;for(z=l.length;E<z;E++){u=
l[E];wa=la[E];G=0;for(ha=u.length;G<ha;G++)S=c(u[G],wa[G],K),s?g(S.x,S.y+r[q-1].y,r[q-1].x+L):g(S.x,S.y,i+L)}}if(m){h=0*ca;for(G=0;G<Y;G++)i=R[G],f(i[2]+h,i[1]+h,i[0]+h,!0);h=ca*(q+2*k);for(G=0;G<Y;G++)i=R[G],f(i[0]+h,i[1]+h,i[2]+h,!1)}else{for(G=0;G<Y;G++)i=R[G],f(i[2],i[1],i[0],!0);for(G=0;G<Y;G++)i=R[G],f(i[0]+ca*q,i[1]+ca*q,i[2]+ca*q,!1)}i=0;e(p,i);i+=p.length;E=0;for(z=l.length;E<z;E++)u=l[E],e(u,i),i+=u.length};
THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(a,b,c,d,e,g){b=a.vertices[e].x;e=a.vertices[e].y;c=a.vertices[g].x;g=a.vertices[g].y;return[new THREE.Vector2(a.vertices[d].x,a.vertices[d].y),new THREE.Vector2(b,e),new THREE.Vector2(c,g)]},generateBottomUV:function(a,b,c,d,e,g){return this.generateTopUV(a,b,c,d,e,g)},generateSideWallUV:function(a,b,c,d,e,g,f,i){var b=a.vertices[e].x,c=a.vertices[e].y,e=a.vertices[e].z,d=a.vertices[g].x,h=a.vertices[g].y,g=a.vertices[g].z,j=a.vertices[f].x,
k=a.vertices[f].y,f=a.vertices[f].z,m=a.vertices[i].x,l=a.vertices[i].y,a=a.vertices[i].z;return 0.01>Math.abs(c-h)?[new THREE.Vector2(b,1-e),new THREE.Vector2(d,1-g),new THREE.Vector2(j,1-f),new THREE.Vector2(m,1-a)]:[new THREE.Vector2(c,1-e),new THREE.Vector2(h,1-g),new THREE.Vector2(k,1-f),new THREE.Vector2(l,1-a)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;
THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(a,b){THREE.Geometry.call(this);!1===a instanceof Array&&(a=[a]);this.shapebb=a[a.length-1].getBoundingBox();this.addShapeList(a,b);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(a,b){for(var c=0,d=a.length;c<d;c++)this.addShape(a[c],b);return this};
THREE.ShapeGeometry.prototype.addShape=function(a,b){void 0===b&&(b={});var c=b.material,d=void 0===b.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:b.UVGenerator,e,g,f,i=this.vertices.length;e=a.extractPoints(void 0!==b.curveSegments?b.curveSegments:12);var h=e.shape,j=e.holes;if(!THREE.Shape.Utils.isClockWise(h)){h=h.reverse();e=0;for(g=j.length;e<g;e++)f=j[e],THREE.Shape.Utils.isClockWise(f)&&(j[e]=f.reverse())}var k=THREE.Shape.Utils.triangulateShape(h,j);e=0;for(g=j.length;e<g;e++)f=j[e],
h=h.concat(f);j=h.length;g=k.length;for(e=0;e<j;e++)f=h[e],this.vertices.push(new THREE.Vector3(f.x,f.y,0));for(e=0;e<g;e++)j=k[e],h=j[0]+i,f=j[1]+i,j=j[2]+i,this.faces.push(new THREE.Face3(h,f,j,null,null,c)),this.faceVertexUvs[0].push(d.generateBottomUV(this,a,b,h,f,j))};THREE.LatheGeometry=function(a,b,c,d){THREE.Geometry.call(this);for(var b=b||12,c=c||0,d=d||2*Math.PI,e=1/(a.length-1),g=1/b,f=0,i=b;f<=i;f++)for(var h=c+f*g*d,j=Math.cos(h),k=Math.sin(h),h=0,m=a.length;h<m;h++){var l=a[h],q=new THREE.Vector3;q.x=j*l.x-k*l.y;q.y=k*l.x+j*l.y;q.z=l.z;this.vertices.push(q)}c=a.length;f=0;for(i=b;f<i;f++){h=0;for(m=a.length-1;h<m;h++)d=b=h+c*f,k=b+c,j=b+1+c,this.faces.push(new THREE.Face4(d,k,j,b+1)),j=f*g,b=h*e,d=j+g,k=b+e,this.faceVertexUvs[0].push([new THREE.Vector2(j,
b),new THREE.Vector2(d,b),new THREE.Vector2(d,k),new THREE.Vector2(j,k)])}this.mergeVertices();this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(a,b,c,d){THREE.Geometry.call(this);this.width=a;this.height=b;this.widthSegments=c||1;this.heightSegments=d||1;for(var c=a/2,e=b/2,d=this.widthSegments,g=this.heightSegments,f=d+1,i=g+1,h=this.width/d,j=this.height/g,k=new THREE.Vector3(0,0,1),a=0;a<i;a++)for(b=0;b<f;b++)this.vertices.push(new THREE.Vector3(b*h-c,-(a*j-e),0));for(a=0;a<g;a++)for(b=0;b<d;b++)c=new THREE.Face4(b+f*a,b+f*(a+1),b+1+f*(a+1),b+1+f*a),c.normal.copy(k),c.vertexNormals.push(k.clone(),k.clone(),
k.clone(),k.clone()),this.faces.push(c),this.faceVertexUvs[0].push([new THREE.Vector2(b/d,1-a/g),new THREE.Vector2(b/d,1-(a+1)/g),new THREE.Vector2((b+1)/d,1-(a+1)/g),new THREE.Vector2((b+1)/d,1-a/g)]);this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(a,b,c,d,e,g,f){THREE.Geometry.call(this);this.radius=a||50;this.widthSegments=Math.max(3,Math.floor(b)||8);this.heightSegments=Math.max(2,Math.floor(c)||6);for(var d=void 0!==d?d:0,e=void 0!==e?e:2*Math.PI,g=void 0!==g?g:0,f=void 0!==f?f:Math.PI,i=[],h=[],c=0;c<=this.heightSegments;c++){for(var j=[],k=[],b=0;b<=this.widthSegments;b++){var m=b/this.widthSegments,l=c/this.heightSegments,q=new THREE.Vector3;q.x=-this.radius*Math.cos(d+m*e)*Math.sin(g+l*f);q.y=this.radius*
Math.cos(g+l*f);q.z=this.radius*Math.sin(d+m*e)*Math.sin(g+l*f);this.vertices.push(q);j.push(this.vertices.length-1);k.push(new THREE.Vector2(m,1-l))}i.push(j);h.push(k)}for(c=0;c<this.heightSegments;c++)for(b=0;b<this.widthSegments;b++){var d=i[c][b+1],e=i[c][b],g=i[c+1][b],f=i[c+1][b+1],j=this.vertices[d].clone().normalize(),k=this.vertices[e].clone().normalize(),m=this.vertices[g].clone().normalize(),l=this.vertices[f].clone().normalize(),q=h[c][b+1].clone(),p=h[c][b].clone(),r=h[c+1][b].clone(),
s=h[c+1][b+1].clone();Math.abs(this.vertices[d].y)===this.radius?(this.faces.push(new THREE.Face3(d,g,f,[j,m,l])),this.faceVertexUvs[0].push([q,r,s])):Math.abs(this.vertices[g].y)===this.radius?(this.faces.push(new THREE.Face3(d,e,g,[j,k,m])),this.faceVertexUvs[0].push([q,p,r])):(this.faces.push(new THREE.Face4(d,e,g,f,[j,k,m,l])),this.faceVertexUvs[0].push([q,p,r,s]))}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,a)};
THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(a,b){var c=THREE.FontUtils.generateShapes(a,b);b.amount=void 0!==b.height?b.height:50;void 0===b.bevelThickness&&(b.bevelThickness=10);void 0===b.bevelSize&&(b.bevelSize=8);void 0===b.bevelEnabled&&(b.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,c,b)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(a,b,c,d,e){THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||8;this.tubularSegments=d||6;this.arc=e||2*Math.PI;e=new THREE.Vector3;a=[];b=[];for(c=0;c<=this.radialSegments;c++)for(d=0;d<=this.tubularSegments;d++){var g=d/this.tubularSegments*this.arc,f=2*c/this.radialSegments*Math.PI;e.x=this.radius*Math.cos(g);e.y=this.radius*Math.sin(g);var i=new THREE.Vector3;i.x=(this.radius+this.tube*Math.cos(f))*Math.cos(g);i.y=(this.radius+this.tube*
Math.cos(f))*Math.sin(g);i.z=this.tube*Math.sin(f);this.vertices.push(i);a.push(new THREE.Vector2(d/this.tubularSegments,c/this.radialSegments));b.push(i.clone().sub(e).normalize())}for(c=1;c<=this.radialSegments;c++)for(d=1;d<=this.tubularSegments;d++){var e=(this.tubularSegments+1)*c+d-1,g=(this.tubularSegments+1)*(c-1)+d-1,f=(this.tubularSegments+1)*(c-1)+d,i=(this.tubularSegments+1)*c+d,h=new THREE.Face4(e,g,f,i,[b[e],b[g],b[f],b[i]]);h.normal.add(b[e]);h.normal.add(b[g]);h.normal.add(b[f]);h.normal.add(b[i]);
h.normal.normalize();this.faces.push(h);this.faceVertexUvs[0].push([a[e].clone(),a[g].clone(),a[f].clone(),a[i].clone()])}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(a,b,c,d,e,g,f){function i(a,b,c,d,e,f){var g=Math.cos(a);Math.cos(b);b=Math.sin(a);a*=c/d;c=Math.cos(a);g*=0.5*e*(2+c);b=0.5*e*(2+c)*b;e=0.5*f*e*Math.sin(a);return new THREE.Vector3(g,b,e)}THREE.Geometry.call(this);this.radius=a||100;this.tube=b||40;this.radialSegments=c||64;this.tubularSegments=d||8;this.p=e||2;this.q=g||3;this.heightScale=f||1;this.grid=Array(this.radialSegments);c=new THREE.Vector3;d=new THREE.Vector3;e=new THREE.Vector3;for(a=0;a<this.radialSegments;++a){this.grid[a]=
Array(this.tubularSegments);for(b=0;b<this.tubularSegments;++b){var h=2*(a/this.radialSegments)*this.p*Math.PI,f=2*(b/this.tubularSegments)*Math.PI,g=i(h,f,this.q,this.p,this.radius,this.heightScale),h=i(h+0.01,f,this.q,this.p,this.radius,this.heightScale);c.subVectors(h,g);d.addVectors(h,g);e.crossVectors(c,d);d.crossVectors(e,c);e.normalize();d.normalize();h=-this.tube*Math.cos(f);f=this.tube*Math.sin(f);g.x+=h*d.x+f*e.x;g.y+=h*d.y+f*e.y;g.z+=h*d.z+f*e.z;this.grid[a][b]=this.vertices.push(new THREE.Vector3(g.x,
g.y,g.z))-1}}for(a=0;a<this.radialSegments;++a)for(b=0;b<this.tubularSegments;++b){var e=(a+1)%this.radialSegments,g=(b+1)%this.tubularSegments,c=this.grid[a][b],d=this.grid[e][b],e=this.grid[e][g],g=this.grid[a][g],f=new THREE.Vector2(a/this.radialSegments,b/this.tubularSegments),h=new THREE.Vector2((a+1)/this.radialSegments,b/this.tubularSegments),j=new THREE.Vector2((a+1)/this.radialSegments,(b+1)/this.tubularSegments),k=new THREE.Vector2(a/this.radialSegments,(b+1)/this.tubularSegments);this.faces.push(new THREE.Face4(c,
d,e,g));this.faceVertexUvs[0].push([f,h,j,k])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(a,b,c,d,e,g){THREE.Geometry.call(this);this.path=a;this.segments=b||64;this.radius=c||1;this.radiusSegments=d||8;this.closed=e||!1;g&&(this.debug=new THREE.Object3D);this.grid=[];var f,i,e=this.segments+1,h,j,k,g=new THREE.Vector3,m,l,q,b=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);m=b.tangents;l=b.normals;q=b.binormals;this.tangents=m;this.normals=l;this.binormals=q;for(b=0;b<e;b++){this.grid[b]=[];d=b/(e-1);k=a.getPointAt(d);d=m[b];f=l[b];
i=q[b];this.debug&&(this.debug.add(new THREE.ArrowHelper(d,k,c,255)),this.debug.add(new THREE.ArrowHelper(f,k,c,16711680)),this.debug.add(new THREE.ArrowHelper(i,k,c,65280)));for(d=0;d<this.radiusSegments;d++)h=2*(d/this.radiusSegments)*Math.PI,j=-this.radius*Math.cos(h),h=this.radius*Math.sin(h),g.copy(k),g.x+=j*f.x+h*i.x,g.y+=j*f.y+h*i.y,g.z+=j*f.z+h*i.z,this.grid[b][d]=this.vertices.push(new THREE.Vector3(g.x,g.y,g.z))-1}for(b=0;b<this.segments;b++)for(d=0;d<this.radiusSegments;d++)e=this.closed?
(b+1)%this.segments:b+1,g=(d+1)%this.radiusSegments,a=this.grid[b][d],c=this.grid[e][d],e=this.grid[e][g],g=this.grid[b][g],m=new THREE.Vector2(b/this.segments,d/this.radiusSegments),l=new THREE.Vector2((b+1)/this.segments,d/this.radiusSegments),q=new THREE.Vector2((b+1)/this.segments,(d+1)/this.radiusSegments),f=new THREE.Vector2(b/this.segments,(d+1)/this.radiusSegments),this.faces.push(new THREE.Face4(a,c,e,g)),this.faceVertexUvs[0].push([m,l,q,f]);this.computeCentroids();this.computeFaceNormals();
this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.TubeGeometry.FrenetFrames=function(a,b,c){new THREE.Vector3;var d=new THREE.Vector3;new THREE.Vector3;var e=[],g=[],f=[],i=new THREE.Vector3,h=new THREE.Matrix4,b=b+1,j,k,m;this.tangents=e;this.normals=g;this.binormals=f;for(j=0;j<b;j++)k=j/(b-1),e[j]=a.getTangentAt(k),e[j].normalize();g[0]=new THREE.Vector3;f[0]=new THREE.Vector3;a=Number.MAX_VALUE;j=Math.abs(e[0].x);k=Math.abs(e[0].y);m=Math.abs(e[0].z);j<=a&&(a=j,d.set(1,0,0));k<=a&&(a=k,d.set(0,1,0));m<=a&&d.set(0,0,1);i.crossVectors(e[0],
d).normalize();g[0].crossVectors(e[0],i);f[0].crossVectors(e[0],g[0]);for(j=1;j<b;j++)g[j]=g[j-1].clone(),f[j]=f[j-1].clone(),i.crossVectors(e[j-1],e[j]),1E-4<i.length()&&(i.normalize(),d=Math.acos(e[j-1].dot(e[j])),g[j].applyMatrix4(h.makeRotationAxis(i,d))),f[j].crossVectors(e[j],g[j]);if(c){d=Math.acos(g[0].dot(g[b-1]));d/=b-1;0<e[0].dot(i.crossVectors(g[0],g[b-1]))&&(d=-d);for(j=1;j<b;j++)g[j].applyMatrix4(h.makeRotationAxis(e[j],d*j)),f[j].crossVectors(e[j],g[j])}};THREE.PolyhedronGeometry=function(a,b,c,d){function e(a){var b=a.normalize().clone();b.index=h.vertices.push(b)-1;var c=Math.atan2(a.z,-a.x)/2/Math.PI+0.5,a=Math.atan2(-a.y,Math.sqrt(a.x*a.x+a.z*a.z))/Math.PI+0.5;b.uv=new THREE.Vector2(c,1-a);return b}function g(a,b,c,d){1>d?(d=new THREE.Face3(a.index,b.index,c.index,[a.clone(),b.clone(),c.clone()]),d.centroid.add(a).add(b).add(c).divideScalar(3),d.normal=d.centroid.clone().normalize(),h.faces.push(d),d=Math.atan2(d.centroid.z,-d.centroid.x),h.faceVertexUvs[0].push([i(a.uv,
a,d),i(b.uv,b,d),i(c.uv,c,d)])):(d-=1,g(a,f(a,b),f(a,c),d),g(f(a,b),b,f(b,c),d),g(f(a,c),f(b,c),c,d),g(f(a,b),f(b,c),f(a,c),d))}function f(a,b){m[a.index]||(m[a.index]=[]);m[b.index]||(m[b.index]=[]);var c=m[a.index][b.index];void 0===c&&(m[a.index][b.index]=m[b.index][a.index]=c=e((new THREE.Vector3).addVectors(a,b).divideScalar(2)));return c}function i(a,b,c){0>c&&1===a.x&&(a=new THREE.Vector2(a.x-1,a.y));0===b.x&&0===b.z&&(a=new THREE.Vector2(c/2/Math.PI+0.5,a.y));return a}THREE.Geometry.call(this);
for(var c=c||1,d=d||0,h=this,j=0,k=a.length;j<k;j++)e(new THREE.Vector3(a[j][0],a[j][1],a[j][2]));for(var m=[],a=this.vertices,j=0,k=b.length;j<k;j++)g(a[b[j][0]],a[b[j][1]],a[b[j][2]],d);this.mergeVertices();j=0;for(k=this.vertices.length;j<k;j++)this.vertices[j].multiplyScalar(c);this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,c)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(a,b){var c=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,c,0],[1,c,0],[-1,-c,0],[1,-c,0],[0,-1,c],[0,1,c],[0,-1,-c],[0,1,-c],[c,0,-1],[c,0,1],[-c,0,-1],[-c,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],a,b)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],a,b)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(a,b){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],a,b)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(a,b,c,d){THREE.Geometry.call(this);var e=this.vertices,g=this.faces,f=this.faceVertexUvs[0],d=void 0===d?!1:d,i,h,j,k,m=b+1;for(i=0;i<=c;i++){k=i/c;for(h=0;h<=b;h++)j=h/b,j=a(j,k),e.push(j)}var l,q,p,r;for(i=0;i<c;i++)for(h=0;h<b;h++)a=i*m+h,e=i*m+h+1,k=(i+1)*m+h,j=(i+1)*m+h+1,l=new THREE.Vector2(h/b,i/c),q=new THREE.Vector2((h+1)/b,i/c),p=new THREE.Vector2(h/b,(i+1)/c),r=new THREE.Vector2((h+1)/b,(i+1)/c),d?(g.push(new THREE.Face3(a,e,k)),g.push(new THREE.Face3(e,
j,k)),f.push([l,q,p]),f.push([q,r,p])):(g.push(new THREE.Face4(a,e,j,k)),f.push([l,q,r,p]));this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(a){function b(a){var b=a.length();return new THREE.Vector2(a.x/b,a.y/b)}THREE.Geometry.call(this);for(var c=[[0,1,2],[0,2,1]],d=3;d<a.length;d++){var e=d,g=a[e].clone(),f=g.length();g.x+=f*2E-6*(Math.random()-0.5);g.y+=f*2E-6*(Math.random()-0.5);g.z+=f*2E-6*(Math.random()-0.5);for(var f=[],i=0;i<c.length;){var h=c[i],j=g,k=a[h[0]],m=a[h[1]],l=a[h[2]],q=new THREE.Vector3,p=new THREE.Vector3;q.subVectors(l,m);p.subVectors(k,m);q.cross(p);q.normalize();k=q.dot(k);if(q.dot(j)>=
k){for(j=0;3>j;j++){q=[h[j],h[(j+1)%3]];k=!0;for(m=0;m<f.length;m++)if(f[m][0]===q[1]&&f[m][1]===q[0]){f[m]=f[f.length-1];f.pop();k=!1;break}k&&f.push(q)}c[i]=c[c.length-1];c.pop()}else i++}for(m=0;m<f.length;m++)c.push([f[m][0],f[m][1],e])}e=0;g=Array(a.length);for(d=0;d<c.length;d++){f=c[d];for(i=0;3>i;i++)void 0===g[f[i]]&&(g[f[i]]=e++,this.vertices.push(a[f[i]])),f[i]=g[f[i]]}for(d=0;d<c.length;d++)this.faces.push(new THREE.Face3(c[d][0],c[d][1],c[d][2]));for(d=0;d<this.faces.length;d++)f=this.faces[d],
this.faceVertexUvs[0].push([b(this.vertices[f.a]),b(this.vertices[f.b]),b(this.vertices[f.c])]);this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(a){var b=new THREE.Geometry;b.vertices.push(new THREE.Vector3,new THREE.Vector3(a||1,0,0),new THREE.Vector3,new THREE.Vector3(0,a||1,0),new THREE.Vector3,new THREE.Vector3(0,0,a||1));b.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));a=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,b,a,THREE.LinePieces)};
THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(a,b,c,d){THREE.Object3D.call(this);void 0===c&&(c=20);void 0===d&&(d=16776960);var e=new THREE.Geometry;e.vertices.push(new THREE.Vector3(0,0,0));e.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(e,new THREE.LineBasicMaterial({color:d}));this.add(this.line);e=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(e,new THREE.MeshBasicMaterial({color:d}));this.cone.position.set(0,1,0);this.add(this.cone);b instanceof THREE.Vector3&&(this.position=
b);this.setDirection(a);this.setLength(c)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(a){var b=THREE.ArrowHelper.__v1.copy(a).normalize();0.999<b.y?this.rotation.set(0,0,0):-0.999>b.y?this.rotation.set(Math.PI,0,0):(a=THREE.ArrowHelper.__v2.set(b.z,0,-b.x).normalize(),b=Math.acos(b.y),a=THREE.ArrowHelper.__q1.setFromAxisAngle(a,b),this.rotation.setEulerFromQuaternion(a,this.eulerOrder))};
THREE.ArrowHelper.prototype.setLength=function(a){this.scale.set(a,a,a)};THREE.ArrowHelper.prototype.setColor=function(a){this.line.material.color.setHex(a);this.cone.material.color.setHex(a)};THREE.ArrowHelper.__v1=new THREE.Vector3;THREE.ArrowHelper.__v2=new THREE.Vector3;THREE.ArrowHelper.__q1=new THREE.Quaternion;THREE.CameraHelper=function(a){function b(a,b,d){c(a,d);c(b,d)}function c(a,b){d.geometry.vertices.push(new THREE.Vector3);d.geometry.colors.push(new THREE.Color(b));void 0===d.pointMap[a]&&(d.pointMap[a]=[]);d.pointMap[a].push(d.geometry.vertices.length-1)}THREE.Line.call(this);var d=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=a.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap=
{};b("n1","n2",16755200);b("n2","n4",16755200);b("n4","n3",16755200);b("n3","n1",16755200);b("f1","f2",16755200);b("f2","f4",16755200);b("f4","f3",16755200);b("f3","f1",16755200);b("n1","f1",16755200);b("n2","f2",16755200);b("n3","f3",16755200);b("n4","f4",16755200);b("p","n1",16711680);b("p","n2",16711680);b("p","n3",16711680);b("p","n4",16711680);b("u1","u2",43775);b("u2","u3",43775);b("u3","u1",43775);b("c","t",16777215);b("p","c",3355443);b("cn1","cn2",3355443);b("cn3","cn4",3355443);b("cf1",
"cf2",3355443);b("cf3","cf4",3355443);this.camera=a;this.update(a)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);
THREE.CameraHelper.prototype.update=function(){function a(a,d,e,g){THREE.CameraHelper.__v.set(d,e,g);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);a=b.pointMap[a];if(void 0!==a){d=0;for(e=a.length;d<e;d++)b.geometry.vertices[a[d]].copy(THREE.CameraHelper.__v)}}var b=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);a("c",0,0,-1);a("t",0,0,1);a("n1",-1,-1,-1);a("n2",1,-1,-1);a("n3",-1,1,-1);a("n4",1,1,-1);a("f1",-1,-1,1);
a("f2",1,-1,1);a("f3",-1,1,1);a("f4",1,1,1);a("u1",0.7,1.1,-1);a("u2",-0.7,1.1,-1);a("u3",0,2,-1);a("cf1",-1,0,1);a("cf2",1,0,1);a("cf3",0,-1,1);a("cf4",0,1,1);a("cn1",-1,0,-1);a("cn2",1,0,-1);a("cn3",0,-1,-1);a("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;THREE.DirectionalLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.subVectors(a.target.position,a.position);var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var c=this.color.getHex(),d=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.MeshBasicMaterial({color:c,fog:!1}),f=new THREE.LineBasicMaterial({color:c,fog:!1});this.lightSphere=
new THREE.Mesh(d,g);this.lightRays=new THREE.Line(e,f,THREE.LinePieces);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;void 0!==a.target.properties.targetInverse&&(d=new THREE.SphereGeometry(b,8,4),e=new THREE.MeshBasicMaterial({color:c,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(d,e),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=
!0,this.targetSphere.properties.gizmoSubject=a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,c=new THREE.LineDashedMaterial({color:c,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),d=new THREE.Geometry,d.vertices.push(this.position.clone()),d.vertices.push(this.targetSphere.position.clone()),d.computeLineDistances(),this.targetLine=new THREE.Line(d,c),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.DirectionalLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),
this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)};THREE.HemisphereLightHelper=function(a,b,c){THREE.Object3D.call(this);this.light=a;this.position=a.position;var d=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(d);var e=this.color.getHex();this.groundColor=a.groundColor.clone();this.groundColor.multiplyScalar(d);for(var d=this.groundColor.getHex(),g=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0,0.5*Math.PI),f=new THREE.SphereGeometry(b,16,8,0,2*Math.PI,0.5*Math.PI,Math.PI),i=new THREE.MeshBasicMaterial({color:e,
fog:!1}),h=new THREE.MeshBasicMaterial({color:d,fog:!1}),j=0,k=g.faces.length;j<k;j++)g.faces[j].materialIndex=0;j=0;for(k=f.faces.length;j<k;j++)f.faces[j].materialIndex=1;THREE.GeometryUtils.merge(g,f);this.lightSphere=new THREE.Mesh(g,new THREE.MeshFaceMaterial([i,h]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(b+c),0),c,e);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*
(b+c),0),c,d);b=new THREE.Object3D;b.rotation.x=0.5*-Math.PI;b.add(this.lightSphere);b.add(this.lightArrow);b.add(this.lightArrowGround);this.add(b);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.HemisphereLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.groundColor.copy(this.light.groundColor);this.groundColor.multiplyScalar(a);this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());this.lookAt(this.target)};THREE.PointLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var d=this.color.getHex(),c=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.IcosahedronGeometry(1,2),f=new THREE.MeshBasicMaterial({color:d,fog:!1}),i=new THREE.LineBasicMaterial({color:d,fog:!1}),d=new THREE.MeshBasicMaterial({color:d,fog:!1,wireframe:!0,opacity:0.1,
transparent:!0});this.lightSphere=new THREE.Mesh(c,f);this.lightRays=new THREE.Line(e,i,THREE.LinePieces);this.lightDistance=new THREE.Mesh(g,d);c=a.distance;0===c?this.lightDistance.visible=!1:this.lightDistance.scale.set(c,c,c);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.PointLightHelper.prototype.update=function(){var a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);a=this.light.distance;0===a?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(a,a,a))};THREE.SpotLightHelper=function(a,b){THREE.Object3D.call(this);this.light=a;this.position=a.position;this.direction=new THREE.Vector3;this.direction.subVectors(a.target.position,a.position);var c=THREE.Math.clamp(a.intensity,0,1);this.color=a.color.clone();this.color.multiplyScalar(c);var c=this.color.getHex(),d=new THREE.SphereGeometry(b,16,8),e=new THREE.AsteriskGeometry(1.25*b,2.25*b),g=new THREE.CylinderGeometry(1E-4,1,1,8,1,!0),f=new THREE.Matrix4;f.rotateX(-Math.PI/2);f.translate(new THREE.Vector3(0,
-0.5,0));g.applyMatrix(f);var i=new THREE.MeshBasicMaterial({color:c,fog:!1}),f=new THREE.LineBasicMaterial({color:c,fog:!1}),h=new THREE.MeshBasicMaterial({color:c,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightSphere=new THREE.Mesh(d,i);this.lightCone=new THREE.Mesh(g,h);d=a.distance?a.distance:1E4;g=2*d*Math.tan(0.5*a.angle);this.lightCone.scale.set(g,g,d);this.lightRays=new THREE.Line(e,f,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);
this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(a.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=a;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;void 0!==a.target.properties.targetInverse&&(e=new THREE.SphereGeometry(b,8,4),f=new THREE.MeshBasicMaterial({color:c,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(e,f),this.targetSphere.position=a.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=
a.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,c=new THREE.LineDashedMaterial({color:c,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),e=new THREE.Geometry,e.vertices.push(this.position.clone()),e.vertices.push(this.targetSphere.position.clone()),e.computeLineDistances(),this.targetLine=new THREE.Line(e,c),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);
THREE.SpotLightHelper.prototype.update=function(){this.direction.subVectors(this.light.target.position,this.light.position);this.lookAt(this.light.target.position);var a=this.light.distance?this.light.distance:1E4,b=2*a*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(b,b,a);a=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.color.multiplyScalar(a);this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);
null!==this.targetSphere&&(this.targetSphere.material.color.copy(this.color),this.targetLine.material.color.copy(this.color),this.targetLine.geometry.vertices[0].copy(this.light.position),this.targetLine.geometry.vertices[1].copy(this.light.target.position),this.targetLine.geometry.computeLineDistances(),this.targetLine.geometry.verticesNeedUpdate=!0)};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(a,b,c,d,e){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==a&&this.add(a,b,c,d,e)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);
THREE.LensFlare.prototype.add=function(a,b,c,d,e,g){void 0===b&&(b=-1);void 0===c&&(c=0);void 0===g&&(g=1);void 0===e&&(e=new THREE.Color(16777215));void 0===d&&(d=THREE.NormalBlending);c=Math.min(c,Math.max(0,c));this.lensFlares.push({texture:a,size:b,distance:c,x:0,y:0,z:0,scale:1,rotation:1,opacity:g,color:e,blending:d})};
THREE.LensFlare.prototype.updateLensFlares=function(){var a,b=this.lensFlares.length,c,d=2*-this.positionScreen.x,e=2*-this.positionScreen.y;for(a=0;a<b;a++)c=this.lensFlares[a],c.x=this.positionScreen.x+d*c.distance,c.y=this.positionScreen.y+e*c.distance,c.wantedRotation=0.25*c.x*Math.PI,c.rotation+=0.25*(c.wantedRotation-c.rotation)};THREE.MorphBlendMesh=function(a,b){THREE.Mesh.call(this,a,b);this.animationsMap={};this.animationsList=[];var c=this.geometry.morphTargets.length;this.createAnimation("__default",0,c-1,c/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);
THREE.MorphBlendMesh.prototype.createAnimation=function(a,b,c,d){b={startFrame:b,endFrame:c,length:c-b+1,fps:d,duration:(c-b)/d,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[a]=b;this.animationsList.push(b)};
THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(a){for(var b=/([a-z]+)(\d+)/,c,d={},e=this.geometry,g=0,f=e.morphTargets.length;g<f;g++){var i=e.morphTargets[g].name.match(b);if(i&&1<i.length){var h=i[1];d[h]||(d[h]={start:Infinity,end:-Infinity});i=d[h];g<i.start&&(i.start=g);g>i.end&&(i.end=g);c||(c=h)}}for(h in d)i=d[h],this.createAnimation(h,i.start,i.end,a);this.firstAnimation=c};
THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(a){if(a=this.animationsMap[a])a.direction=1,a.directionBackwards=!1};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(a){if(a=this.animationsMap[a])a.direction=-1,a.directionBackwards=!0};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(a,b){var c=this.animationsMap[a];c&&(c.fps=b,c.duration=(c.end-c.start)/c.fps)};
THREE.MorphBlendMesh.prototype.setAnimationDuration=function(a,b){var c=this.animationsMap[a];c&&(c.duration=b,c.fps=(c.end-c.start)/c.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(a,b){var c=this.animationsMap[a];c&&(c.weight=b)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(a,b){var c=this.animationsMap[a];c&&(c.time=b)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(a){var b=0;if(a=this.animationsMap[a])b=a.time;return b};
THREE.MorphBlendMesh.prototype.getAnimationDuration=function(a){var b=-1;if(a=this.animationsMap[a])b=a.duration;return b};THREE.MorphBlendMesh.prototype.playAnimation=function(a){var b=this.animationsMap[a];b?(b.time=0,b.active=!0):console.warn("animation["+a+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(a){if(a=this.animationsMap[a])a.active=!1};
THREE.MorphBlendMesh.prototype.update=function(a){for(var b=0,c=this.animationsList.length;b<c;b++){var d=this.animationsList[b];if(d.active){var e=d.duration/d.length;d.time+=d.direction*a;if(d.mirroredLoop){if(d.time>d.duration||0>d.time)d.direction*=-1,d.time>d.duration&&(d.time=d.duration,d.directionBackwards=!0),0>d.time&&(d.time=0,d.directionBackwards=!1)}else d.time%=d.duration,0>d.time&&(d.time+=d.duration);var g=d.startFrame+THREE.Math.clamp(Math.floor(d.time/e),0,d.length-1),f=d.weight;
g!==d.currentFrame&&(this.morphTargetInfluences[d.lastFrame]=0,this.morphTargetInfluences[d.currentFrame]=1*f,this.morphTargetInfluences[g]=0,d.lastFrame=d.currentFrame,d.currentFrame=g);e=d.time%e/e;d.directionBackwards&&(e=1-e);this.morphTargetInfluences[d.currentFrame]=e*f;this.morphTargetInfluences[d.lastFrame]=(1-e)*f}}};THREE.LensFlarePlugin=function(){function a(a,c){var d=b.createProgram(),e=b.createShader(b.FRAGMENT_SHADER),f=b.createShader(b.VERTEX_SHADER),g="precision "+c+" float;\n";b.shaderSource(e,g+a.fragmentShader);b.shaderSource(f,g+a.vertexShader);b.compileShader(e);b.compileShader(f);b.attachShader(d,e);b.attachShader(d,f);b.linkProgram(d);return d}var b,c,d,e,g,f,i,h,j,k,m,l,q;this.init=function(p){b=p.context;c=p;d=p.getPrecision();e=new Float32Array(16);g=new Uint16Array(6);p=0;e[p++]=-1;e[p++]=-1;
e[p++]=0;e[p++]=0;e[p++]=1;e[p++]=-1;e[p++]=1;e[p++]=0;e[p++]=1;e[p++]=1;e[p++]=1;e[p++]=1;e[p++]=-1;e[p++]=1;e[p++]=0;e[p++]=1;p=0;g[p++]=0;g[p++]=1;g[p++]=2;g[p++]=0;g[p++]=2;g[p++]=3;f=b.createBuffer();i=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,i);b.bufferData(b.ELEMENT_ARRAY_BUFFER,g,b.STATIC_DRAW);h=b.createTexture();j=b.createTexture();b.bindTexture(b.TEXTURE_2D,h);b.texImage2D(b.TEXTURE_2D,0,b.RGB,16,16,
0,b.RGB,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);b.bindTexture(b.TEXTURE_2D,j);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,16,16,0,b.RGBA,b.UNSIGNED_BYTE,null);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);
b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,b.NEAREST);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,b.NEAREST);0>=b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(k=!1,m=a(THREE.ShaderFlares.lensFlare,d)):(k=!0,m=a(THREE.ShaderFlares.lensFlareVertexTexture,d));l={};q={};l.vertex=b.getAttribLocation(m,"position");l.uv=b.getAttribLocation(m,"uv");q.renderType=b.getUniformLocation(m,"renderType");q.map=b.getUniformLocation(m,"map");q.occlusionMap=b.getUniformLocation(m,"occlusionMap");q.opacity=
b.getUniformLocation(m,"opacity");q.color=b.getUniformLocation(m,"color");q.scale=b.getUniformLocation(m,"scale");q.rotation=b.getUniformLocation(m,"rotation");q.screenPosition=b.getUniformLocation(m,"screenPosition")};this.render=function(a,d,e,g){var a=a.__webglFlares,x=a.length;if(x){var v=new THREE.Vector3,w=g/e,y=0.5*e,D=0.5*g,C=16/g,u=new THREE.Vector2(C*w,C),E=new THREE.Vector3(1,1,0),z=new THREE.Vector2(1,1),H=q,C=l;b.useProgram(m);b.enableVertexAttribArray(l.vertex);b.enableVertexAttribArray(l.uv);
b.uniform1i(H.occlusionMap,0);b.uniform1i(H.map,1);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(C.vertex,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(C.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,i);b.disable(b.CULL_FACE);b.depthMask(!1);var O,F,R,I,K;for(O=0;O<x;O++)if(C=16/g,u.set(C*w,C),I=a[O],v.set(I.matrixWorld.elements[12],I.matrixWorld.elements[13],I.matrixWorld.elements[14]),v.applyMatrix4(d.matrixWorldInverse),v.applyProjection(d.projectionMatrix),E.copy(v),z.x=E.x*y+y,
z.y=E.y*D+D,k||0<z.x&&z.x<e&&0<z.y&&z.y<g){b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGB,z.x-8,z.y-8,16,16,0);b.uniform1i(H.renderType,0);b.uniform2f(H.scale,u.x,u.y);b.uniform3f(H.screenPosition,E.x,E.y,E.z);b.disable(b.BLEND);b.enable(b.DEPTH_TEST);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);b.activeTexture(b.TEXTURE0);b.bindTexture(b.TEXTURE_2D,j);b.copyTexImage2D(b.TEXTURE_2D,0,b.RGBA,z.x-8,z.y-8,16,16,0);b.uniform1i(H.renderType,1);b.disable(b.DEPTH_TEST);
b.activeTexture(b.TEXTURE1);b.bindTexture(b.TEXTURE_2D,h);b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0);I.positionScreen.copy(E);I.customUpdateCallback?I.customUpdateCallback(I):I.updateLensFlares();b.uniform1i(H.renderType,2);b.enable(b.BLEND);F=0;for(R=I.lensFlares.length;F<R;F++)K=I.lensFlares[F],0.0010<K.opacity&&0.0010<K.scale&&(E.x=K.x,E.y=K.y,E.z=K.z,C=K.size*K.scale/g,u.x=C*w,u.y=C,b.uniform3f(H.screenPosition,E.x,E.y,E.z),b.uniform2f(H.scale,u.x,u.y),b.uniform1f(H.rotation,K.rotation),
b.uniform1f(H.opacity,K.opacity),b.uniform3f(H.color,K.color.r,K.color.g,K.color.b),c.setBlending(K.blending,K.blendEquation,K.blendSrc,K.blendDst),c.setTexture(K.texture,1),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0))}b.enable(b.CULL_FACE);b.enable(b.DEPTH_TEST);b.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var a,b,c,d,e,g,f=new THREE.Frustum,i=new THREE.Matrix4,h=new THREE.Vector3,j=new THREE.Vector3;this.init=function(f){a=f.context;b=f;var f=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(f.uniforms);c=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:i});d=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:i,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,
vertexShader:f.vertexShader,uniforms:i,skinning:!0});g=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:i,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;g._shadowPass=!0};this.render=function(a,c){b.shadowMapEnabled&&b.shadowMapAutoUpdate&&this.update(a,c)};this.update=function(k,m){var l,q,p,r,s,t,x,v,w,y=[];r=0;a.clearColor(1,1,1,1);a.disable(a.BLEND);a.enable(a.CULL_FACE);a.frontFace(a.CCW);b.shadowMapCullFace===THREE.CullFaceFront?
a.cullFace(a.FRONT):a.cullFace(a.BACK);b.setDepthTest(!0);l=0;for(q=k.__lights.length;l<q;l++)if(p=k.__lights[l],p.castShadow)if(p instanceof THREE.DirectionalLight&&p.shadowCascade)for(s=0;s<p.shadowCascadeCount;s++){var D;if(p.shadowCascadeArray[s])D=p.shadowCascadeArray[s];else{w=p;x=s;D=new THREE.DirectionalLight;D.isVirtual=!0;D.onlyShadow=!0;D.castShadow=!0;D.shadowCameraNear=w.shadowCameraNear;D.shadowCameraFar=w.shadowCameraFar;D.shadowCameraLeft=w.shadowCameraLeft;D.shadowCameraRight=w.shadowCameraRight;
D.shadowCameraBottom=w.shadowCameraBottom;D.shadowCameraTop=w.shadowCameraTop;D.shadowCameraVisible=w.shadowCameraVisible;D.shadowDarkness=w.shadowDarkness;D.shadowBias=w.shadowCascadeBias[x];D.shadowMapWidth=w.shadowCascadeWidth[x];D.shadowMapHeight=w.shadowCascadeHeight[x];D.pointsWorld=[];D.pointsFrustum=[];v=D.pointsWorld;t=D.pointsFrustum;for(var C=0;8>C;C++)v[C]=new THREE.Vector3,t[C]=new THREE.Vector3;v=w.shadowCascadeNearZ[x];w=w.shadowCascadeFarZ[x];t[0].set(-1,-1,v);t[1].set(1,-1,v);t[2].set(-1,
1,v);t[3].set(1,1,v);t[4].set(-1,-1,w);t[5].set(1,-1,w);t[6].set(-1,1,w);t[7].set(1,1,w);D.originalCamera=m;t=new THREE.Gyroscope;t.position=p.shadowCascadeOffset;t.add(D);t.add(D.target);m.add(t);p.shadowCascadeArray[s]=D;console.log("Created virtualLight",D)}x=p;v=s;w=x.shadowCascadeArray[v];w.position.copy(x.position);w.target.position.copy(x.target.position);w.lookAt(w.target);w.shadowCameraVisible=x.shadowCameraVisible;w.shadowDarkness=x.shadowDarkness;w.shadowBias=x.shadowCascadeBias[v];t=x.shadowCascadeNearZ[v];
x=x.shadowCascadeFarZ[v];w=w.pointsFrustum;w[0].z=t;w[1].z=t;w[2].z=t;w[3].z=t;w[4].z=x;w[5].z=x;w[6].z=x;w[7].z=x;y[r]=D;r++}else y[r]=p,r++;l=0;for(q=y.length;l<q;l++){p=y[l];p.shadowMap||(s=THREE.LinearFilter,b.shadowMapType===THREE.PCFSoftShadowMap&&(s=THREE.NearestFilter),p.shadowMap=new THREE.WebGLRenderTarget(p.shadowMapWidth,p.shadowMapHeight,{minFilter:s,magFilter:s,format:THREE.RGBAFormat}),p.shadowMapSize=new THREE.Vector2(p.shadowMapWidth,p.shadowMapHeight),p.shadowMatrix=new THREE.Matrix4);
if(!p.shadowCamera){if(p instanceof THREE.SpotLight)p.shadowCamera=new THREE.PerspectiveCamera(p.shadowCameraFov,p.shadowMapWidth/p.shadowMapHeight,p.shadowCameraNear,p.shadowCameraFar);else if(p instanceof THREE.DirectionalLight)p.shadowCamera=new THREE.OrthographicCamera(p.shadowCameraLeft,p.shadowCameraRight,p.shadowCameraTop,p.shadowCameraBottom,p.shadowCameraNear,p.shadowCameraFar);else{console.error("Unsupported light type for shadow");continue}k.add(p.shadowCamera);b.autoUpdateScene&&k.updateMatrixWorld()}p.shadowCameraVisible&&
!p.cameraHelper&&(p.cameraHelper=new THREE.CameraHelper(p.shadowCamera),p.shadowCamera.add(p.cameraHelper));if(p.isVirtual&&D.originalCamera==m){s=m;r=p.shadowCamera;t=p.pointsFrustum;w=p.pointsWorld;h.set(Infinity,Infinity,Infinity);j.set(-Infinity,-Infinity,-Infinity);for(x=0;8>x;x++)v=w[x],v.copy(t[x]),THREE.ShadowMapPlugin.__projector.unprojectVector(v,s),v.applyMatrix4(r.matrixWorldInverse),v.x<h.x&&(h.x=v.x),v.x>j.x&&(j.x=v.x),v.y<h.y&&(h.y=v.y),v.y>j.y&&(j.y=v.y),v.z<h.z&&(h.z=v.z),v.z>j.z&&
(j.z=v.z);r.left=h.x;r.right=j.x;r.top=j.y;r.bottom=h.y;r.updateProjectionMatrix()}r=p.shadowMap;t=p.shadowMatrix;s=p.shadowCamera;s.position.copy(p.matrixWorld.getPosition());s.lookAt(p.target.matrixWorld.getPosition());s.updateMatrixWorld();s.matrixWorldInverse.getInverse(s.matrixWorld);p.cameraHelper&&(p.cameraHelper.visible=p.shadowCameraVisible);p.shadowCameraVisible&&p.cameraHelper.update();t.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);t.multiply(s.projectionMatrix);t.multiply(s.matrixWorldInverse);
i.multiplyMatrices(s.projectionMatrix,s.matrixWorldInverse);f.setFromMatrix(i);b.setRenderTarget(r);b.clear();w=k.__webglObjects;p=0;for(r=w.length;p<r;p++)if(x=w[p],t=x.object,x.render=!1,t.visible&&t.castShadow&&(!(t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem)||!t.frustumCulled||f.intersectsObject(t)))t._modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,t.matrixWorld),x.render=!0;p=0;for(r=w.length;p<r;p++)x=w[p],x.render&&(t=x.object,x=x.buffer,C=t.material instanceof THREE.MeshFaceMaterial?
t.material.materials[0]:t.material,v=0<t.geometry.morphTargets.length&&C.morphTargets,C=t instanceof THREE.SkinnedMesh&&C.skinning,v=t.customDepthMaterial?t.customDepthMaterial:C?v?g:e:v?d:c,x instanceof THREE.BufferGeometry?b.renderBufferDirect(s,k.__lights,null,v,x,t):b.renderBuffer(s,k.__lights,null,v,x,t));w=k.__webglObjectsImmediate;p=0;for(r=w.length;p<r;p++)x=w[p],t=x.object,t.visible&&t.castShadow&&(t._modelViewMatrix.multiplyMatrices(s.matrixWorldInverse,t.matrixWorld),b.renderImmediateObject(s,
k.__lights,null,c,t))}l=b.getClearColor();q=b.getClearAlpha();a.clearColor(l.r,l.g,l.b,q);a.enable(a.BLEND);b.shadowMapCullFace===THREE.CullFaceFront&&a.cullFace(a.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function a(a,b){return a.z!==b.z?b.z-a.z:b.id-a.id}var b,c,d,e,g,f,i,h,j,k;this.init=function(a){b=a.context;c=a;d=a.getPrecision();e=new Float32Array(16);g=new Uint16Array(6);a=0;e[a++]=-1;e[a++]=-1;e[a++]=0;e[a++]=0;e[a++]=1;e[a++]=-1;e[a++]=1;e[a++]=0;e[a++]=1;e[a++]=1;e[a++]=1;e[a++]=1;e[a++]=-1;e[a++]=1;e[a++]=0;e[a++]=1;a=0;g[a++]=0;g[a++]=1;g[a++]=2;g[a++]=0;g[a++]=2;g[a++]=3;f=b.createBuffer();i=b.createBuffer();b.bindBuffer(b.ARRAY_BUFFER,f);b.bufferData(b.ARRAY_BUFFER,
e,b.STATIC_DRAW);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,i);b.bufferData(b.ELEMENT_ARRAY_BUFFER,g,b.STATIC_DRAW);var a=THREE.ShaderSprite.sprite,l=b.createProgram(),q=b.createShader(b.FRAGMENT_SHADER),p=b.createShader(b.VERTEX_SHADER),r="precision "+d+" float;\n";b.shaderSource(q,r+a.fragmentShader);b.shaderSource(p,r+a.vertexShader);b.compileShader(q);b.compileShader(p);b.attachShader(l,q);b.attachShader(l,p);b.linkProgram(l);h=l;j={};k={};j.position=b.getAttribLocation(h,"position");j.uv=b.getAttribLocation(h,
"uv");k.uvOffset=b.getUniformLocation(h,"uvOffset");k.uvScale=b.getUniformLocation(h,"uvScale");k.rotation=b.getUniformLocation(h,"rotation");k.scale=b.getUniformLocation(h,"scale");k.alignment=b.getUniformLocation(h,"alignment");k.color=b.getUniformLocation(h,"color");k.map=b.getUniformLocation(h,"map");k.opacity=b.getUniformLocation(h,"opacity");k.useScreenCoordinates=b.getUniformLocation(h,"useScreenCoordinates");k.sizeAttenuation=b.getUniformLocation(h,"sizeAttenuation");k.screenPosition=b.getUniformLocation(h,
"screenPosition");k.modelViewMatrix=b.getUniformLocation(h,"modelViewMatrix");k.projectionMatrix=b.getUniformLocation(h,"projectionMatrix");k.fogType=b.getUniformLocation(h,"fogType");k.fogDensity=b.getUniformLocation(h,"fogDensity");k.fogNear=b.getUniformLocation(h,"fogNear");k.fogFar=b.getUniformLocation(h,"fogFar");k.fogColor=b.getUniformLocation(h,"fogColor");k.alphaTest=b.getUniformLocation(h,"alphaTest")};this.render=function(d,e,g,p){var r=d.__webglSprites,s=r.length;if(s){var t=j,x=k,v=p/
g,g=0.5*g,w=0.5*p;b.useProgram(h);b.enableVertexAttribArray(t.position);b.enableVertexAttribArray(t.uv);b.disable(b.CULL_FACE);b.enable(b.BLEND);b.bindBuffer(b.ARRAY_BUFFER,f);b.vertexAttribPointer(t.position,2,b.FLOAT,!1,16,0);b.vertexAttribPointer(t.uv,2,b.FLOAT,!1,16,8);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,i);b.uniformMatrix4fv(x.projectionMatrix,!1,e.projectionMatrix.elements);b.activeTexture(b.TEXTURE0);b.uniform1i(x.map,0);var y=t=0,D=d.fog;D?(b.uniform3f(x.fogColor,D.color.r,D.color.g,D.color.b),
D instanceof THREE.Fog?(b.uniform1f(x.fogNear,D.near),b.uniform1f(x.fogFar,D.far),b.uniform1i(x.fogType,1),y=t=1):D instanceof THREE.FogExp2&&(b.uniform1f(x.fogDensity,D.density),b.uniform1i(x.fogType,2),y=t=2)):(b.uniform1i(x.fogType,0),y=t=0);for(var C,u,E=[],D=0;D<s;D++)C=r[D],u=C.material,C.visible&&0!==u.opacity&&(u.useScreenCoordinates?C.z=-C.position.z:(C._modelViewMatrix.multiplyMatrices(e.matrixWorldInverse,C.matrixWorld),C.z=-C._modelViewMatrix.elements[14]));r.sort(a);for(D=0;D<s;D++)C=
r[D],u=C.material,C.visible&&0!==u.opacity&&(u.map&&u.map.image&&u.map.image.width)&&(b.uniform1f(x.alphaTest,u.alphaTest),!0===u.useScreenCoordinates?(b.uniform1i(x.useScreenCoordinates,1),b.uniform3f(x.screenPosition,(C.position.x*c.devicePixelRatio-g)/g,(w-C.position.y*c.devicePixelRatio)/w,Math.max(0,Math.min(1,C.position.z))),E[0]=c.devicePixelRatio,E[1]=c.devicePixelRatio):(b.uniform1i(x.useScreenCoordinates,0),b.uniform1i(x.sizeAttenuation,u.sizeAttenuation?1:0),b.uniformMatrix4fv(x.modelViewMatrix,
!1,C._modelViewMatrix.elements),E[0]=1,E[1]=1),e=d.fog&&u.fog?y:0,t!==e&&(b.uniform1i(x.fogType,e),t=e),e=1/(u.scaleByViewport?p:1),E[0]*=e*v*C.scale.x,E[1]*=e*C.scale.y,b.uniform2f(x.uvScale,u.uvScale.x,u.uvScale.y),b.uniform2f(x.uvOffset,u.uvOffset.x,u.uvOffset.y),b.uniform2f(x.alignment,u.alignment.x,u.alignment.y),b.uniform1f(x.opacity,u.opacity),b.uniform3f(x.color,u.color.r,u.color.g,u.color.b),b.uniform1f(x.rotation,C.rotation),b.uniform2fv(x.scale,E),c.setBlending(u.blending,u.blendEquation,
u.blendSrc,u.blendDst),c.setDepthTest(u.depthTest),c.setDepthWrite(u.depthWrite),c.setTexture(u.map,0),b.drawElements(b.TRIANGLES,6,b.UNSIGNED_SHORT,0));b.enable(b.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var a,b,c,d,e,g,f=new THREE.Frustum,i=new THREE.Matrix4;this.init=function(f){a=f.context;b=f;var f=THREE.ShaderLib.depthRGBA,i=THREE.UniformsUtils.clone(f.uniforms);c=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:i});d=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:i,morphTargets:!0});e=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,
vertexShader:f.vertexShader,uniforms:i,skinning:!0});g=new THREE.ShaderMaterial({fragmentShader:f.fragmentShader,vertexShader:f.vertexShader,uniforms:i,morphTargets:!0,skinning:!0});c._shadowPass=!0;d._shadowPass=!0;e._shadowPass=!0;g._shadowPass=!0};this.render=function(a,b){this.enabled&&this.update(a,b)};this.update=function(h,j){var k,m,l,q,p,r;a.clearColor(1,1,1,1);a.disable(a.BLEND);b.setDepthTest(!0);b.autoUpdateScene&&h.updateMatrixWorld();j.matrixWorldInverse.getInverse(j.matrixWorld);i.multiplyMatrices(j.projectionMatrix,
j.matrixWorldInverse);f.setFromMatrix(i);b.setRenderTarget(this.renderTarget);b.clear();r=h.__webglObjects;k=0;for(m=r.length;k<m;k++)if(l=r[k],p=l.object,l.render=!1,p.visible&&(!(p instanceof THREE.Mesh||p instanceof THREE.ParticleSystem)||!p.frustumCulled||f.intersectsObject(p)))p._modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,p.matrixWorld),l.render=!0;var s;k=0;for(m=r.length;k<m;k++)if(l=r[k],l.render&&(p=l.object,l=l.buffer,!(p instanceof THREE.ParticleSystem)||p.customDepthMaterial))(s=
p.material instanceof THREE.MeshFaceMaterial?p.material.materials[0]:p.material)&&b.setMaterialFaces(p.material),q=0<p.geometry.morphTargets.length&&s.morphTargets,s=p instanceof THREE.SkinnedMesh&&s.skinning,q=p.customDepthMaterial?p.customDepthMaterial:s?q?g:e:q?d:c,l instanceof THREE.BufferGeometry?b.renderBufferDirect(j,h.__lights,null,q,l,p):b.renderBuffer(j,h.__lights,null,q,l,p);r=h.__webglObjectsImmediate;k=0;for(m=r.length;k<m;k++)l=r[k],p=l.object,p.visible&&(p._modelViewMatrix.multiplyMatrices(j.matrixWorldInverse,
p.matrixWorld),b.renderImmediateObject(j,h.__lights,null,c,p));k=b.getClearColor();m=b.getClearAlpha();a.clearColor(k.r,k.g,k.b,m);a.enable(a.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"uniform lowp int renderType;\nuniform sampler2D map;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform lowp int renderType;\nuniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",
fragmentShader:"precision mediump float;\nuniform lowp int renderType;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",
fragmentShader:"uniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};THREE.FirstPersonControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.target=new THREE.Vector3(0,0,0);this.domElement=void 0!==b?b:document;this.movementSpeed=1;this.lookSpeed=0.0050;this.lookVertical=!0;this.autoForward=!1;this.activeLook=!0;this.heightSpeed=!1;this.heightCoef=1;this.heightMin=0;this.heightMax=1;this.constrainVertical=!1;this.verticalMin=0;this.verticalMax=Math.PI;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=this.autoSpeedFactor=
0;this.mouseDragOn=this.freeze=this.moveRight=this.moveLeft=this.moveBackward=this.moveForward=!1;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.onMouseDown=function(a){this.domElement!==document&&this.domElement.focus();
a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!0;break;case 2:this.moveBackward=!0}this.mouseDragOn=!0};this.onMouseUp=function(a){a.preventDefault();a.stopPropagation();if(this.activeLook)switch(a.button){case 0:this.moveForward=!1;break;case 2:this.moveBackward=!1}this.mouseDragOn=!1};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-
this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.onKeyDown=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!0;break;case 37:case 65:this.moveLeft=!0;break;case 40:case 83:this.moveBackward=!0;break;case 39:case 68:this.moveRight=!0;break;case 82:this.moveUp=!0;break;case 70:this.moveDown=!0;break;case 81:this.freeze=!this.freeze}};this.onKeyUp=function(a){switch(a.keyCode){case 38:case 87:this.moveForward=!1;break;case 37:case 65:this.moveLeft=!1;break;
case 40:case 83:this.moveBackward=!1;break;case 39:case 68:this.moveRight=!1;break;case 82:this.moveUp=!1;break;case 70:this.moveDown=!1}};this.update=function(a){if(!this.freeze){if(this.heightSpeed){var b=THREE.Math.clamp(this.object.position.y,this.heightMin,this.heightMax)-this.heightMin;this.autoSpeedFactor=a*b*this.heightCoef}else this.autoSpeedFactor=0;b=a*this.movementSpeed;(this.moveForward||this.autoForward&&!this.moveBackward)&&this.object.translateZ(-(b+this.autoSpeedFactor));this.moveBackward&&
this.object.translateZ(b);this.moveLeft&&this.object.translateX(-b);this.moveRight&&this.object.translateX(b);this.moveUp&&this.object.translateY(b);this.moveDown&&this.object.translateY(-b);a*=this.lookSpeed;this.activeLook||(a=0);b=1;this.constrainVertical&&(b=Math.PI/(this.verticalMax-this.verticalMin));this.lon+=this.mouseX*a;this.lookVertical&&(this.lat-=this.mouseY*a*b);this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);
this.constrainVertical&&(this.phi=THREE.Math.mapLinear(this.phi,0,Math.PI,this.verticalMin,this.verticalMax));a=this.target;b=this.object.position;a.x=b.x+100*Math.sin(this.phi)*Math.cos(this.theta);a.y=b.y+100*Math.cos(this.phi);a.z=b.z+100*Math.sin(this.phi)*Math.sin(this.theta);this.object.lookAt(a)}};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",c(this,this.onMouseMove),!1);this.domElement.addEventListener("mousedown",
c(this,this.onMouseDown),!1);this.domElement.addEventListener("mouseup",c(this,this.onMouseUp),!1);this.domElement.addEventListener("keydown",c(this,this.onKeyDown),!1);this.domElement.addEventListener("keyup",c(this,this.onKeyUp),!1);this.handleResize()};THREE.FlyControls=function(a,b){function c(a,b){return function(){b.apply(a,arguments)}}this.object=a;this.domElement=void 0!==b?b:document;b&&this.domElement.setAttribute("tabindex",-1);this.movementSpeed=1;this.rollSpeed=0.0050;this.autoForward=this.dragToLook=!1;this.object.useQuaternion=!0;this.tmpQuaternion=new THREE.Quaternion;this.mouseStatus=0;this.moveState={up:0,down:0,left:0,right:0,forward:0,back:0,pitchUp:0,pitchDown:0,yawLeft:0,yawRight:0,rollLeft:0,rollRight:0};this.moveVector=new THREE.Vector3(0,
0,0);this.rotationVector=new THREE.Vector3(0,0,0);this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.keydown=function(a){if(!a.altKey){switch(a.keyCode){case 16:this.movementSpeedMultiplier=0.1;break;case 87:this.moveState.forward=1;break;case 83:this.moveState.back=1;break;case 65:this.moveState.left=1;break;case 68:this.moveState.right=1;break;case 82:this.moveState.up=1;break;case 70:this.moveState.down=1;break;case 38:this.moveState.pitchUp=1;break;case 40:this.moveState.pitchDown=
1;break;case 37:this.moveState.yawLeft=1;break;case 39:this.moveState.yawRight=1;break;case 81:this.moveState.rollLeft=1;break;case 69:this.moveState.rollRight=1}this.updateMovementVector();this.updateRotationVector()}};this.keyup=function(a){switch(a.keyCode){case 16:this.movementSpeedMultiplier=1;break;case 87:this.moveState.forward=0;break;case 83:this.moveState.back=0;break;case 65:this.moveState.left=0;break;case 68:this.moveState.right=0;break;case 82:this.moveState.up=0;break;case 70:this.moveState.down=
0;break;case 38:this.moveState.pitchUp=0;break;case 40:this.moveState.pitchDown=0;break;case 37:this.moveState.yawLeft=0;break;case 39:this.moveState.yawRight=0;break;case 81:this.moveState.rollLeft=0;break;case 69:this.moveState.rollRight=0}this.updateMovementVector();this.updateRotationVector()};this.mousedown=function(a){this.domElement!==document&&this.domElement.focus();a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus++;else switch(a.button){case 0:this.object.moveForward=
!0;break;case 2:this.object.moveBackward=!0}};this.mousemove=function(a){if(!this.dragToLook||0<this.mouseStatus){var b=this.getContainerDimensions(),c=b.size[0]/2,f=b.size[1]/2;this.moveState.yawLeft=-(a.pageX-b.offset[0]-c)/c;this.moveState.pitchDown=(a.pageY-b.offset[1]-f)/f;this.updateRotationVector()}};this.mouseup=function(a){a.preventDefault();a.stopPropagation();if(this.dragToLook)this.mouseStatus--,this.moveState.yawLeft=this.moveState.pitchDown=0;else switch(a.button){case 0:this.moveForward=
!1;break;case 2:this.moveBackward=!1}this.updateRotationVector()};this.update=function(a){var b=a*this.movementSpeed,a=a*this.rollSpeed;this.object.translateX(this.moveVector.x*b);this.object.translateY(this.moveVector.y*b);this.object.translateZ(this.moveVector.z*b);this.tmpQuaternion.set(this.rotationVector.x*a,this.rotationVector.y*a,this.rotationVector.z*a,1).normalize();this.object.quaternion.multiply(this.tmpQuaternion);this.object.matrix.setPosition(this.object.position);this.object.matrix.setRotationFromQuaternion(this.object.quaternion);
this.object.matrixWorldNeedsUpdate=!0};this.updateMovementVector=function(){var a=this.moveState.forward||this.autoForward&&!this.moveState.back?1:0;this.moveVector.x=-this.moveState.left+this.moveState.right;this.moveVector.y=-this.moveState.down+this.moveState.up;this.moveVector.z=-a+this.moveState.back};this.updateRotationVector=function(){this.rotationVector.x=-this.moveState.pitchDown+this.moveState.pitchUp;this.rotationVector.y=-this.moveState.yawRight+this.moveState.yawLeft;this.rotationVector.z=
-this.moveState.rollRight+this.moveState.rollLeft};this.getContainerDimensions=function(){return this.domElement!=document?{size:[this.domElement.offsetWidth,this.domElement.offsetHeight],offset:[this.domElement.offsetLeft,this.domElement.offsetTop]}:{size:[window.innerWidth,window.innerHeight],offset:[0,0]}};this.domElement.addEventListener("mousemove",c(this,this.mousemove),!1);this.domElement.addEventListener("mousedown",c(this,this.mousedown),!1);this.domElement.addEventListener("mouseup",c(this,
this.mouseup),!1);this.domElement.addEventListener("keydown",c(this,this.keydown),!1);this.domElement.addEventListener("keyup",c(this,this.keyup),!1);this.updateMovementVector();this.updateRotationVector()};THREE.OrbitControls=function(a,b){function c(){return 2*Math.PI/60/60*f.autoRotateSpeed}function d(a){a.preventDefault();v===x.ROTATE?(j.set(a.clientX,a.clientY),k.subVectors(j,h),f.rotateLeft(2*Math.PI*k.x/i*f.userRotateSpeed),f.rotateUp(2*Math.PI*k.y/i*f.userRotateSpeed),h.copy(j)):v===x.ZOOM&&(l.set(a.clientX,a.clientY),q.subVectors(l,m),0<q.y?f.zoomIn():f.zoomOut(),m.copy(l))}function e(){f.userRotate&&(document.removeEventListener("mousemove",d,!1),document.removeEventListener("mouseup",e,!1),
v=x.NONE)}function g(a){if(f.userZoom){var b=0;a.wheelDelta?b=a.wheelDelta:a.detail&&(b=-a.detail);0<b?f.zoomOut():f.zoomIn()}}THREE.EventDispatcher.call(this);this.object=a;this.domElement=void 0!==b?b:document;this.center=new THREE.Vector3;this.userZoom=!0;this.userZoomSpeed=1;this.userRotate=!0;this.userRotateSpeed=1;this.autoRotate=!1;this.autoRotateSpeed=2;this.minPolarAngle=0;this.maxPolarAngle=Math.PI;this.minDistance=0;this.maxDistance=Infinity;var f=this,i=1800,h=new THREE.Vector2,j=new THREE.Vector2,
k=new THREE.Vector2,m=new THREE.Vector2,l=new THREE.Vector2,q=new THREE.Vector2,p=0,r=0,s=1,t=new THREE.Vector3,x={NONE:-1,ROTATE:0,ZOOM:1},v=x.NONE,w={type:"change"};this.rotateLeft=function(a){void 0===a&&(a=c());r-=a};this.rotateRight=function(a){void 0===a&&(a=c());r+=a};this.rotateUp=function(a){void 0===a&&(a=c());p-=a};this.rotateDown=function(a){void 0===a&&(a=c());p+=a};this.zoomIn=function(a){void 0===a&&(a=Math.pow(0.95,f.userZoomSpeed));s/=a};this.zoomOut=function(a){void 0===a&&(a=Math.pow(0.95,
f.userZoomSpeed));s*=a};this.update=function(){var a=this.object.position,b=a.clone().sub(this.center),d=Math.atan2(b.x,b.z),e=Math.atan2(Math.sqrt(b.x*b.x+b.z*b.z),b.y);this.autoRotate&&this.rotateLeft(c());var d=d+r,e=e+p,e=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,e)),e=Math.max(1E-6,Math.min(Math.PI-1E-6,e)),f=b.length()*s,f=Math.max(this.minDistance,Math.min(this.maxDistance,f));b.x=f*Math.sin(e)*Math.sin(d);b.y=f*Math.cos(e);b.z=f*Math.sin(e)*Math.cos(d);a.copy(this.center).add(b);
this.object.lookAt(this.center);p=r=0;s=1;0<t.distanceTo(this.object.position)&&(this.dispatchEvent(w),t.copy(this.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){f.userRotate&&(a.preventDefault(),0===a.button||2===a.button?(v=x.ROTATE,h.set(a.clientX,a.clientY)):1===a.button&&(v=x.ZOOM,m.set(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",
e,!1))},!1);this.domElement.addEventListener("mousewheel",g,!1);this.domElement.addEventListener("DOMMouseScroll",g,!1)};THREE.PathControls=function(a,b){function c(a){return 1>(a*=2)?0.5*a*a:-0.5*(--a*(a-2)-1)}function d(a,b){return function(){b.apply(a,arguments)}}function e(a,b,c,d){var e={name:c,fps:0.6,length:d,hierarchy:[]},f,g=b.getControlPointsArray(),p=b.getLength(),r=g.length,s=0;f=r-1;b={parent:-1,keys:[]};b.keys[0]={time:0,pos:g[0],rot:[0,0,0,1],scl:[1,1,1]};b.keys[f]={time:d,pos:g[f],rot:[0,0,0,1],scl:[1,1,1]};for(f=1;f<r-1;f++)s=d*p.chunks[f]/p.total,b.keys[f]={time:s,pos:g[f]};e.hierarchy[0]=b;THREE.AnimationHandler.add(e);
return new THREE.Animation(a,c,THREE.AnimationHandler.CATMULLROM_FORWARD,!1)}function g(a,b){var c,d,e=new THREE.Geometry;for(c=0;c<a.points.length*b;c++)d=c/(a.points.length*b),d=a.getPoint(d),e.vertices[c]=new THREE.Vector3(d.x,d.y,d.z);return e}this.object=a;this.domElement=void 0!==b?b:document;this.id="PathControls"+THREE.PathControlsIdCounter++;this.duration=1E4;this.waypoints=[];this.useConstantSpeed=!0;this.resamplingCoef=50;this.debugPath=new THREE.Object3D;this.debugDummy=new THREE.Object3D;
this.animationParent=new THREE.Object3D;this.lookSpeed=0.0050;this.lookHorizontal=this.lookVertical=!0;this.verticalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.horizontalAngleMap={srcRange:[0,2*Math.PI],dstRange:[0,2*Math.PI]};this.target=new THREE.Object3D;this.theta=this.phi=this.lon=this.lat=this.mouseY=this.mouseX=0;var f=2*Math.PI;this.viewHalfY=this.viewHalfX=0;this.domElement!==document&&this.domElement.setAttribute("tabindex",-1);this.handleResize=function(){this.domElement===
document?(this.viewHalfX=window.innerWidth/2,this.viewHalfY=window.innerHeight/2):(this.viewHalfX=this.domElement.offsetWidth/2,this.viewHalfY=this.domElement.offsetHeight/2)};this.update=function(a){var b;this.lookHorizontal&&(this.lon+=this.mouseX*this.lookSpeed*a);this.lookVertical&&(this.lat-=this.mouseY*this.lookSpeed*a);this.lon=Math.max(0,Math.min(360,this.lon));this.lat=Math.max(-85,Math.min(85,this.lat));this.phi=THREE.Math.degToRad(90-this.lat);this.theta=THREE.Math.degToRad(this.lon);a=
this.phi%f;this.phi=0<=a?a:a+f;b=this.verticalAngleMap.srcRange;a=this.verticalAngleMap.dstRange;b=THREE.Math.mapLinear(this.phi,b[0],b[1],a[0],a[1]);var d=a[1]-a[0];this.phi=c((b-a[0])/d)*d+a[0];b=this.horizontalAngleMap.srcRange;a=this.horizontalAngleMap.dstRange;b=THREE.Math.mapLinear(this.theta,b[0],b[1],a[0],a[1]);d=a[1]-a[0];this.theta=c((b-a[0])/d)*d+a[0];a=this.target.position;a.x=100*Math.sin(this.phi)*Math.cos(this.theta);a.y=100*Math.cos(this.phi);a.z=100*Math.sin(this.phi)*Math.sin(this.theta);
this.object.lookAt(this.target.position)};this.onMouseMove=function(a){this.domElement===document?(this.mouseX=a.pageX-this.viewHalfX,this.mouseY=a.pageY-this.viewHalfY):(this.mouseX=a.pageX-this.domElement.offsetLeft-this.viewHalfX,this.mouseY=a.pageY-this.domElement.offsetTop-this.viewHalfY)};this.init=function(){this.spline=new THREE.Spline;this.spline.initFromArray(this.waypoints);this.useConstantSpeed&&this.spline.reparametrizeByArcLength(this.resamplingCoef);if(this.createDebugDummy){var a=
new THREE.MeshLambertMaterial({color:30719}),b=new THREE.MeshLambertMaterial({color:65280}),c=new THREE.CubeGeometry(10,10,20),f=new THREE.CubeGeometry(2,2,10);this.animationParent=new THREE.Mesh(c,a);a=new THREE.Mesh(f,b);a.position.set(0,10,0);this.animation=e(this.animationParent,this.spline,this.id,this.duration);this.animationParent.add(this.object);this.animationParent.add(this.target);this.animationParent.add(a)}else this.animation=e(this.animationParent,this.spline,this.id,this.duration),
this.animationParent.add(this.target),this.animationParent.add(this.object);if(this.createDebugPath){var a=this.debugPath,b=this.spline,f=g(b,10),c=g(b,10),m=new THREE.LineBasicMaterial({color:16711680,linewidth:3}),f=new THREE.Line(f,m),c=new THREE.ParticleSystem(c,new THREE.ParticleBasicMaterial({color:16755200,size:3}));f.scale.set(1,1,1);a.add(f);c.scale.set(1,1,1);a.add(c);for(var f=new THREE.SphereGeometry(1,16,8),m=new THREE.MeshBasicMaterial({color:65280}),l=0;l<b.points.length;l++)c=new THREE.Mesh(f,
m),c.position.copy(b.points[l]),a.add(c)}this.domElement.addEventListener("mousemove",d(this,this.onMouseMove),!1)};this.handleResize()};THREE.PathControlsIdCounter=0;THREE.PointerLockControls=function(a){var b=this,c=new THREE.Object3D;c.add(a);var d=new THREE.Object3D;d.position.y=10;d.add(c);var e=!1,g=!1,f=!1,i=!1,h=!1,j=!1,k=new THREE.Vector3,m=Math.PI/2;document.addEventListener("mousemove",function(a){if(!1!==b.enabled){var e=a.movementY||a.mozMovementY||a.webkitMovementY||0;d.rotation.y-=0.0020*(a.movementX||a.mozMovementX||a.webkitMovementX||0);c.rotation.x-=0.0020*e;c.rotation.x=Math.max(-m,Math.min(m,c.rotation.x))}},!1);document.addEventListener("keydown",
function(a){switch(a.keyCode){case 38:case 87:e=!0;break;case 37:case 65:f=!0;break;case 40:case 83:g=!0;break;case 39:case 68:i=!0;break;case 32:!0===j&&(k.y+=10),j=!1}},!1);document.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:e=!1;break;case 37:case 65:f=!1;break;case 40:case 83:g=!1;break;case 39:case 68:i=!1}},!1);this.enabled=!1;this.getObject=function(){return d};this.isOnObject=function(a){j=h=a};this.update=function(a){!1!==b.enabled&&(a*=0.1,k.x+=0.08*-k.x*a,k.z+=
0.08*-k.z*a,k.y-=0.25*a,e&&(k.z-=0.12*a),g&&(k.z+=0.12*a),f&&(k.x-=0.12*a),i&&(k.x+=0.12*a),!0===h&&(k.y=Math.max(0,k.y)),d.translateX(k.x),d.translateY(k.y),d.translateZ(k.z),10>d.position.y&&(k.y=0,d.position.y=10,j=!0))}};THREE.RollControls=function(a,b){this.object=a;this.domElement=void 0!==b?b:document;this.mouseLook=!0;this.autoForward=!1;this.rollSpeed=this.movementSpeed=this.lookSpeed=1;this.constrainVertical=[-0.9,0.9];this.object.matrixAutoUpdate=!1;this.forward=new THREE.Vector3(0,0,1);this.roll=0;var c=new THREE.Vector3,d=new THREE.Vector3,e=new THREE.Vector3,g=new THREE.Matrix4,f=!1,i=1,h=0,j=0,k=0,m=0,l=0,q=0,p=0;this.handleResize=function(){q=window.innerWidth/2;p=window.innerHeight/2};this.update=function(a){if(this.mouseLook){var b=
a*this.lookSpeed;this.rotateHorizontally(b*m);this.rotateVertically(b*l)}b=a*this.movementSpeed;this.object.translateZ(-b*(0<h||this.autoForward&&!(0>h)?1:h));this.object.translateX(b*j);this.object.translateY(b*k);f&&(this.roll+=this.rollSpeed*a*i);this.forward.y>this.constrainVertical[1]?(this.forward.y=this.constrainVertical[1],this.forward.normalize()):this.forward.y<this.constrainVertical[0]&&(this.forward.y=this.constrainVertical[0],this.forward.normalize());e.copy(this.forward);d.set(0,1,0);
c.crossVectors(d,e).normalize();d.crossVectors(e,c).normalize();this.object.matrix.elements[0]=c.x;this.object.matrix.elements[4]=d.x;this.object.matrix.elements[8]=e.x;this.object.matrix.elements[1]=c.y;this.object.matrix.elements[5]=d.y;this.object.matrix.elements[9]=e.y;this.object.matrix.elements[2]=c.z;this.object.matrix.elements[6]=d.z;this.object.matrix.elements[10]=e.z;g.identity();g.elements[0]=Math.cos(this.roll);g.elements[4]=-Math.sin(this.roll);g.elements[1]=Math.sin(this.roll);g.elements[5]=
Math.cos(this.roll);this.object.matrix.multiply(g);this.object.matrixWorldNeedsUpdate=!0;this.object.matrix.elements[12]=this.object.position.x;this.object.matrix.elements[13]=this.object.position.y;this.object.matrix.elements[14]=this.object.position.z};this.translateX=function(a){this.object.position.x+=this.object.matrix.elements[0]*a;this.object.position.y+=this.object.matrix.elements[1]*a;this.object.position.z+=this.object.matrix.elements[2]*a};this.translateY=function(a){this.object.position.x+=
this.object.matrix.elements[4]*a;this.object.position.y+=this.object.matrix.elements[5]*a;this.object.position.z+=this.object.matrix.elements[6]*a};this.translateZ=function(a){this.object.position.x-=this.object.matrix.elements[8]*a;this.object.position.y-=this.object.matrix.elements[9]*a;this.object.position.z-=this.object.matrix.elements[10]*a};this.rotateHorizontally=function(a){c.set(this.object.matrix.elements[0],this.object.matrix.elements[1],this.object.matrix.elements[2]);c.multiplyScalar(a);
this.forward.sub(c);this.forward.normalize()};this.rotateVertically=function(a){d.set(this.object.matrix.elements[4],this.object.matrix.elements[5],this.object.matrix.elements[6]);d.multiplyScalar(a);this.forward.add(d);this.forward.normalize()};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousemove",function(a){m=(a.clientX-q)/window.innerWidth;l=(a.clientY-p)/window.innerHeight},!1);this.domElement.addEventListener("mousedown",
function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:h=1;break;case 2:h=-1}},!1);this.domElement.addEventListener("mouseup",function(a){a.preventDefault();a.stopPropagation();switch(a.button){case 0:h=0;break;case 2:h=0}},!1);this.domElement.addEventListener("keydown",function(a){switch(a.keyCode){case 38:case 87:h=1;break;case 37:case 65:j=-1;break;case 40:case 83:h=-1;break;case 39:case 68:j=1;break;case 81:f=!0;i=1;break;case 69:f=!0;i=-1;break;case 82:k=1;break;case 70:k=
-1}},!1);this.domElement.addEventListener("keyup",function(a){switch(a.keyCode){case 38:case 87:h=0;break;case 37:case 65:j=0;break;case 40:case 83:h=0;break;case 39:case 68:j=0;break;case 81:f=!1;break;case 69:f=!1;break;case 82:k=0;break;case 70:k=0}},!1);this.handleResize()};THREE.TrackballControls=function(a,b){function c(a){!1!==f.enabled&&(window.removeEventListener("keydown",c),k=j,j===i.NONE&&(a.keyCode===f.keys[i.ROTATE]&&!f.noRotate?j=i.ROTATE:a.keyCode===f.keys[i.ZOOM]&&!f.noZoom?j=i.ZOOM:a.keyCode===f.keys[i.PAN]&&!f.noPan&&(j=i.PAN)))}function d(a){!1!==f.enabled&&(a.preventDefault(),a.stopPropagation(),j===i.ROTATE&&!f.noRotate?q=f.getMouseProjectionOnBall(a.clientX,a.clientY):j===i.ZOOM&&!f.noZoom?r=f.getMouseOnScreen(a.clientX,a.clientY):j===i.PAN&&!f.noPan&&
(v=f.getMouseOnScreen(a.clientX,a.clientY)))}function e(a){!1!==f.enabled&&(a.preventDefault(),a.stopPropagation(),j=i.NONE,document.removeEventListener("mousemove",d),document.removeEventListener("mouseup",e))}function g(a){if(!1!==f.enabled){a.preventDefault();a.stopPropagation();var b=0;a.wheelDelta?b=a.wheelDelta/40:a.detail&&(b=-a.detail/3);p.y+=0.05*(1/b)}}THREE.EventDispatcher.call(this);var f=this,i={NONE:-1,ROTATE:0,ZOOM:1,PAN:2,TOUCH_ROTATE:3,TOUCH_ZOOM:4,TOUCH_PAN:5};this.object=a;this.domElement=
void 0!==b?b:document;this.enabled=!0;this.screen={width:0,height:0,offsetLeft:0,offsetTop:0};this.radius=(this.screen.width+this.screen.height)/4;this.rotateSpeed=1;this.zoomSpeed=1.2;this.panSpeed=0.3;this.staticMoving=this.noPan=this.noZoom=this.noRotate=!1;this.dynamicDampingFactor=0.2;this.minDistance=0;this.maxDistance=Infinity;this.keys=[65,83,68];this.target=new THREE.Vector3;var h=new THREE.Vector3,j=i.NONE,k=i.NONE,m=new THREE.Vector3,l=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector2,
r=new THREE.Vector2,s=0,t=0,x=new THREE.Vector2,v=new THREE.Vector2,w={type:"change"};this.handleResize=function(){this.screen.width=window.innerWidth;this.screen.height=window.innerHeight;this.screen.offsetLeft=0;this.screen.offsetTop=0;this.radius=(this.screen.width+this.screen.height)/4};this.handleEvent=function(a){if("function"==typeof this[a.type])this[a.type](a)};this.getMouseOnScreen=function(a,b){return new THREE.Vector2(0.5*((a-f.screen.offsetLeft)/f.radius),0.5*((b-f.screen.offsetTop)/
f.radius))};this.getMouseProjectionOnBall=function(a,b){var c=new THREE.Vector3((a-0.5*f.screen.width-f.screen.offsetLeft)/f.radius,(0.5*f.screen.height+f.screen.offsetTop-b)/f.radius,0),d=c.length();1<d?c.normalize():c.z=Math.sqrt(1-d*d);m.copy(f.object.position).sub(f.target);d=f.object.up.clone().setLength(c.y);d.add(f.object.up.clone().cross(m).setLength(c.x));d.add(m.setLength(c.z));return d};this.rotateCamera=function(){var a=Math.acos(l.dot(q)/l.length()/q.length());if(a){var b=(new THREE.Vector3).crossVectors(l,
q).normalize(),c=new THREE.Quaternion,a=a*f.rotateSpeed;c.setFromAxisAngle(b,-a);m.applyQuaternion(c);f.object.up.applyQuaternion(c);q.applyQuaternion(c);f.staticMoving?l.copy(q):(c.setFromAxisAngle(b,a*(f.dynamicDampingFactor-1)),l.applyQuaternion(c))}};this.zoomCamera=function(){if(j===i.TOUCH_ZOOM){var a=s/t;s=t;m.multiplyScalar(a)}else a=1+(r.y-p.y)*f.zoomSpeed,1!==a&&0<a&&(m.multiplyScalar(a),f.staticMoving?p.copy(r):p.y+=(r.y-p.y)*this.dynamicDampingFactor)};this.panCamera=function(){var a=
v.clone().sub(x);if(a.lengthSq()){a.multiplyScalar(m.length()*f.panSpeed);var b=m.clone().cross(f.object.up).setLength(a.x);b.add(f.object.up.clone().setLength(a.y));f.object.position.add(b);f.target.add(b);f.staticMoving?x=v:x.add(a.subVectors(v,x).multiplyScalar(f.dynamicDampingFactor))}};this.checkDistances=function(){if(!f.noZoom||!f.noPan)f.object.position.lengthSq()>f.maxDistance*f.maxDistance&&f.object.position.setLength(f.maxDistance),m.lengthSq()<f.minDistance*f.minDistance&&f.object.position.addVectors(f.target,
m.setLength(f.minDistance))};this.update=function(){m.subVectors(f.object.position,f.target);f.noRotate||f.rotateCamera();f.noZoom||f.zoomCamera();f.noPan||f.panCamera();f.object.position.addVectors(f.target,m);f.checkDistances();f.object.lookAt(f.target);0<h.distanceToSquared(f.object.position)&&(f.dispatchEvent(w),h.copy(f.object.position))};this.domElement.addEventListener("contextmenu",function(a){a.preventDefault()},!1);this.domElement.addEventListener("mousedown",function(a){!1!==f.enabled&&
(a.preventDefault(),a.stopPropagation(),j===i.NONE&&(j=a.button),j===i.ROTATE&&!f.noRotate?l=q=f.getMouseProjectionOnBall(a.clientX,a.clientY):j===i.ZOOM&&!f.noZoom?p=r=f.getMouseOnScreen(a.clientX,a.clientY):j===i.PAN&&!f.noPan&&(x=v=f.getMouseOnScreen(a.clientX,a.clientY)),document.addEventListener("mousemove",d,!1),document.addEventListener("mouseup",e,!1))},!1);this.domElement.addEventListener("mousewheel",g,!1);this.domElement.addEventListener("DOMMouseScroll",g,!1);this.domElement.addEventListener("touchstart",
function(a){if(!1!==f.enabled)switch(a.touches.length){case 1:j=i.TOUCH_ROTATE;l=q=f.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:j=i.TOUCH_ZOOM;var b=a.touches[0].pageX-a.touches[1].pageX,a=a.touches[0].pageY-a.touches[1].pageY;t=s=Math.sqrt(b*b+a*a);break;case 3:j=i.TOUCH_PAN;x=v=f.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY);break;default:j=i.NONE}},!1);this.domElement.addEventListener("touchend",function(a){if(!1!==f.enabled){switch(a.touches.length){case 1:l=
q=f.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:s=t=0;break;case 3:x=v=f.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY)}j=i.NONE}},!1);this.domElement.addEventListener("touchmove",function(a){if(!1!==f.enabled)switch(a.preventDefault(),a.stopPropagation(),a.touches.length){case 1:q=f.getMouseProjectionOnBall(a.touches[0].pageX,a.touches[0].pageY);break;case 2:var b=a.touches[0].pageX-a.touches[1].pageX,a=a.touches[0].pageY-a.touches[1].pageY;t=Math.sqrt(b*
b+a*a);break;case 3:v=f.getMouseOnScreen(a.touches[0].pageX,a.touches[0].pageY);break;default:j=i.NONE}},!1);window.addEventListener("keydown",c,!1);window.addEventListener("keyup",function(){!1!==f.enabled&&(j=k,window.addEventListener("keydown",c,!1))},!1);this.handleResize()};THREE.AnaglyphEffect=function(a,b,c){var d=new THREE.Matrix4,e=new THREE.Matrix4,g,f,i,h,j=new THREE.PerspectiveCamera;j.matrixAutoUpdate=!1;var k=new THREE.PerspectiveCamera;k.matrixAutoUpdate=!1;var m=new THREE.OrthographicCamera(-1,1,1,-1,0,1),l=new THREE.Scene,q={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat};void 0===b&&(b=512);void 0===c&&(c=512);var p=new THREE.WebGLRenderTarget(b,c,q),r=new THREE.WebGLRenderTarget(b,c,q),s=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:p},mapRight:{type:"t",value:r}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 colorL, colorR;\n\tvec2 uv = vUv;\n\tcolorL = texture2D( mapLeft, uv );\n\tcolorR = texture2D( mapRight, uv );\n\tgl_FragColor = vec4( colorL.g * 0.7 + colorL.b * 0.3, colorR.g, colorR.b, colorL.a + colorR.a ) * 1.1;\n}"}),
b=new THREE.Mesh(new THREE.PlaneGeometry(2,2),s);l.add(b);this.setSize=function(b,c){p=new THREE.WebGLRenderTarget(b,c,q);r=new THREE.WebGLRenderTarget(b,c,q);s.uniforms.mapLeft.value=p;s.uniforms.mapRight.value=r;a.setSize(b,c)};this.render=function(b,c){b.updateMatrixWorld();void 0===c.parent&&c.updateMatrixWorld();if(g!==c.aspect||f!==c.near||i!==c.far||h!==c.fov){g=c.aspect;f=c.near;i=c.far;h=c.fov;var q=c.projectionMatrix.clone(),s=0.5*(125/30),y=s*f/125,D=f*Math.tan(THREE.Math.degToRad(0.5*
h)),C;d.elements[12]=s;e.elements[12]=-s;s=-D*g+y;C=D*g+y;q.elements[0]=2*f/(C-s);q.elements[8]=(C+s)/(C-s);j.projectionMatrix.copy(q);s=-D*g-y;C=D*g-y;q.elements[0]=2*f/(C-s);q.elements[8]=(C+s)/(C-s);k.projectionMatrix.copy(q)}j.matrixWorld.copy(c.matrixWorld).multiply(e);j.position.copy(c.position);j.near=c.near;j.far=c.far;a.render(b,j,p,!0);k.matrixWorld.copy(c.matrixWorld).multiply(d);k.position.copy(c.position);k.near=c.near;k.far=c.far;a.render(b,k,r,!0);a.render(l,m)}};THREE.AsciiEffect=function(a,b,c){b=void 0===b?" .:-=+*#%@":b;c||(c={});var d=!c.resolution?0.15:c.resolution,e=!c.scale?1:c.scale,g=!c.color?!1:c.color,f=!c.alpha?!1:c.alpha,i=!c.block?!1:c.block,h=!c.invert?!1:c.invert,j,k,c=document.createElement("div");c.style.cursor="default";var m=document.createElement("table");c.appendChild(m);var l,q,p;this.setSize=function(b,c){j=b;k=c;a.setSize(b,c);l=Math.round(j*y);q=Math.round(k*y);x.width=l;x.height=q;p=a.domElement;p.style.backgroundColor&&(m.rows[0].cells[0].style.backgroundColor=
p.style.backgroundColor,m.rows[0].cells[0].style.color=p.style.color);m.cellSpacing=0;m.cellPadding=0;var d=m.style;d.display="inline";d.width=Math.round(l/y*e)+"px";d.height=Math.round(q/y*e)+"px";d.whiteSpace="pre";d.margin="0px";d.padding="0px";d.letterSpacing=u+"px";d.fontFamily=s;d.fontSize=D+"px";d.lineHeight=C+"px";d.textAlign="left";d.textDecoration="none"};this.render=function(b,c){a.render(b,c);v.clearRect(0,0,l,q);v.drawImage(t,0,0,l,q);for(var d=v.getImageData(0,0,l,q).data,e="",j=0;j<
q;j+=2){for(var k=0;k<l;k++){var p=4*(j*l+k),r=d[p],s=d[p+1],u=d[p+2],p=d[p+3],x;x=(0.3*r+0.59*s+0.11*u)/255;0==p&&(x=1);x=Math.floor((1-x)*(w.length-1));h&&(x=w.length-x-1);x=w[x];if(void 0===x||" "==x)x="&nbsp;";e=g?e+("<span style='color:rgb("+r+","+s+","+u+");"+(i?"background-color:rgb("+r+","+s+","+u+");":"")+(f?"opacity:"+p/255+";":"")+"'>"+x+"</span>"):e+x}e+="<br/>"}m.innerHTML="<tr><td>"+e+"</td></tr>"};this.domElement=c;var c=" .,:;i1tfLCG08@".split(""),r=" CGO08@".split(""),s="courier new, monospace",
t=a.domElement,x=document.createElement("canvas");if(x.getContext){var v=x.getContext("2d");if(v.getImageData){var w=g?r:c;b&&(w=b);var y=0.5;switch("low"){case "low":y=0.25;break;case "medium":y=0.5;break;case "high":y=1}d&&(y=d);var D=2/y*e,C=2/y*e,u=0;switch(e){case 1:u=-1;break;case 2:case 3:u=-2.1;break;case 4:u=-3.1;break;case 5:u=-4.15}}}};THREE.CrosseyedEffect=function(a){this.separation=10;var b,c,d=new THREE.PerspectiveCamera;d.target=new THREE.Vector3;var e=new THREE.PerspectiveCamera;e.target=new THREE.Vector3;a.autoClear=!1;this.setSize=function(d,e){b=d/2;c=e;a.setSize(d,e)};this.render=function(g,f){d.fov=f.fov;d.aspect=0.5*f.aspect;d.near=f.near;d.far=f.far;d.updateProjectionMatrix();d.position.copy(f.position);d.target.copy(f.target);d.translateX(this.separation);d.lookAt(d.target);e.near=f.near;e.far=f.far;e.projectionMatrix=
d.projectionMatrix;e.position.copy(f.position);e.target.copy(f.target);e.translateX(-this.separation);e.lookAt(e.target);a.clear();a.setViewport(0,0,b,c);a.render(g,d);a.setViewport(b,0,b,c);a.render(g,e,!1)}};THREE.ParallaxBarrierEffect=function(a){var b=new THREE.Matrix4,c=new THREE.Matrix4,d,e,g,f,i=new THREE.PerspectiveCamera;i.matrixAutoUpdate=!1;var h=new THREE.PerspectiveCamera;h.matrixAutoUpdate=!1;var j=new THREE.Scene,k=new THREE.PerspectiveCamera(53,1,1,1E4);k.position.z=2;j.add(k);var m={minFilter:THREE.LinearFilter,magFilter:THREE.NearestFilter,format:THREE.RGBAFormat},l=new THREE.WebGLRenderTarget(512,512,m),q=new THREE.WebGLRenderTarget(512,512,m),p=new THREE.ShaderMaterial({uniforms:{mapLeft:{type:"t",
value:l},mapRight:{type:"t",value:q}},vertexShader:"varying vec2 vUv;\nvoid main() {\n\tvUv = vec2( uv.x, uv.y );\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D mapLeft;\nuniform sampler2D mapRight;\nvarying vec2 vUv;\nvoid main() {\n\tvec2 uv = vUv;\n\tif ( ( mod( gl_FragCoord.x, 2.0 ) ) > 1.00 ) {\n\t\tgl_FragColor = texture2D( mapLeft, uv );\n\t} else {\n\t\tgl_FragColor = texture2D( mapRight, uv );\n\t}\n}"}),r=new THREE.Mesh(new THREE.PlaneGeometry(2,
2),p);j.add(r);this.setSize=function(b,c){l=new THREE.WebGLRenderTarget(b,c,m);q=new THREE.WebGLRenderTarget(b,c,m);p.uniforms.mapLeft.value=l;p.uniforms.mapRight.value=q;a.setSize(b,c)};this.render=function(m,p){m.updateMatrixWorld();void 0===p.parent&&p.updateMatrixWorld();if(d!==p.aspect||e!==p.near||g!==p.far||f!==p.fov){d=p.aspect;e=p.near;g=p.far;f=p.fov;var r=p.projectionMatrix.clone(),v=0.5*(125/30),w=v*e/125,y=e*Math.tan(THREE.Math.degToRad(0.5*f)),D;b.elements[12]=v;c.elements[12]=-v;v=
-y*d+w;D=y*d+w;r.elements[0]=2*e/(D-v);r.elements[8]=(D+v)/(D-v);i.projectionMatrix.copy(r);v=-y*d-w;D=y*d-w;r.elements[0]=2*e/(D-v);r.elements[8]=(D+v)/(D-v);h.projectionMatrix.copy(r)}i.matrixWorld.copy(p.matrixWorld).multiply(c);i.position.copy(p.position);i.near=p.near;i.far=p.far;a.render(m,i,l,!0);h.matrixWorld.copy(p.matrixWorld).multiply(b);h.position.copy(p.position);h.near=p.near;h.far=p.far;a.render(m,h,q,!0);j.updateMatrixWorld();a.render(j,k)}};THREE.GeometryExporter=function(){};
THREE.GeometryExporter.prototype={constructor:THREE.GeometryExporter,parse:function(a){function b(a,b,c){var d=a.toString()+b.toString()+c.toString();if(void 0!==f[d])return f[d];f[d]=g.length/3;g.push(a,b,c);return f[d]}for(var c=[],d=0;d<a.vertices.length;d++){var e=a.vertices[d];c.push(e.x,e.y,e.z)}for(var e=[],g=[],f={},d=0;d<a.faces.length;d++){var i=a.faces[d],h=i instanceof THREE.Face3,j=void 0!==i.materialIndex,k=0<i.normal.length(),m=void 0!==i.vertexNormals[0],l=0,l=!h?l|1:l&-2,l=k?l|16:
l&-17,l=m?l|32:l&-33;e.push(l);h?e.push(i.a,i.b,i.c):e.push(i.a,i.b,i.c,i.d);j&&e.push(i.materialIndex);k&&(j=i.normal,e.push(b(j.x,j.y,j.z)));m&&(i=i.vertexNormals,h?e.push(b(i[0].x,i[0].y,i[0].z),b(i[1].x,i[1].y,i[1].z),b(i[2].x,i[2].y,i[2].z)):e.push(b(i[0].x,i[0].y,i[0].z),b(i[1].x,i[1].y,i[1].z),b(i[2].x,i[2].y,i[2].z),b(i[3].x,i[3].y,i[3].z)))}return JSON.stringify({metadata:{formatVersion:3.1,generatedBy:"GeometryExporter"},vertices:c,normals:g,uvs:[[]],faces:e},null,"\t")}};THREE.ColladaLoader=function(){function a(a,d,e){ba=a;d=d||Ia;void 0!==e&&(a=e.split("/"),a.pop(),xb=(1>a.length?".":a.join("/"))+"/");if((a=ba.evaluate("//dae:asset",ba,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&a.childNodes)for(e=0;e<a.childNodes.length;e++){var h=a.childNodes[e];switch(h.nodeName){case "unit":(h=h.getAttribute("meter"))&&parseFloat(h);break;case "up_axis":ab=h.textContent.charAt(0)}}if(!Ca.convertUpAxis||ab===Ca.upAxis)tb=null;else switch(ab){case "X":tb="Y"===
Ca.upAxis?"XtoY":"XtoZ";break;case "Y":tb="X"===Ca.upAxis?"YtoX":"YtoZ";break;case "Z":tb="X"===Ca.upAxis?"ZtoX":"ZtoY"}pa=b("//dae:library_images/dae:image",f,"image");Va=b("//dae:library_materials/dae:material",E,"material");Qa=b("//dae:library_effects/dae:effect",R,"effect");ra=b("//dae:library_geometries/dae:geometry",s,"geometry");qa=b(".//dae:library_cameras/dae:camera",Y,"camera");ka=b("//dae:library_controllers/dae:controller",i,"controller");na=b("//dae:library_animations/dae:animation",
K,"animation");fb=b(".//dae:library_visual_scenes/dae:visual_scene",k,"visual_scene");Ma=[];sa=[];(a=ba.evaluate(".//dae:scene/dae:instance_visual_scene",ba,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())?(a=a.getAttribute("url").replace(/^#/,""),Ba=fb[0<a.length?a:"visual_scene0"]):Ba=null;xa=new THREE.Object3D;for(a=0;a<Ba.nodes.length;a++)xa.add(g(Ba.nodes[a]));eb=[];c(xa);a={scene:xa,morphs:Ma,skins:sa,animations:eb,dae:{images:pa,materials:Va,cameras:qa,effects:Qa,geometries:ra,
controllers:ka,animations:na,visualScenes:fb,scene:Ba}};d&&d(a);return a}function b(a,b,c){for(var a=ba.evaluate(a,ba,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null),d={},e=a.iterateNext(),f=0;e;){e=(new b).parse(e);if(!e.id||0==e.id.length)e.id=c+f++;d[e.id]=e;e=a.iterateNext()}return d}function c(a){var b=Ba.getChildById(a.name,!0),d=null;if(b&&b.keys){d={fps:60,hierarchy:[{node:b,keys:b.keys,sids:b.sids}],node:a,name:"animation_"+a.name,length:0};eb.push(d);for(var e=0,f=b.keys.length;e<f;e++)d.length=
Math.max(d.length,b.keys[e].time)}else d={hierarchy:[{keys:[],sids:[]}]};e=0;for(f=a.children.length;e<f;e++)for(var b=0,g=c(a.children[e]).hierarchy.length;b<g;b++)d.hierarchy.push({keys:[],sids:[]});return d}function d(a,b,c,e){a.world=a.world||new THREE.Matrix4;a.world.copy(a.matrix);if(a.channels&&a.channels.length){var f=a.channels[0].sampler.output[c];f instanceof THREE.Matrix4&&a.world.copy(f)}e&&a.world.multiplyMatrices(e,a.world);b.push(a);for(e=0;e<a.nodes.length;e++)d(a.nodes[e],b,c,a.world)}
function e(a,b,c){var e,f=ka[b.url];if(!f||!f.skin)console.log("ColladaLoader: Could not find skin controller.");else if(!b.skeleton||!b.skeleton.length)console.log("ColladaLoader: Could not find the skeleton for the skin. ");else{var c=1E6,g=-c,i=0;for(e in na)for(var h=na[e],j=0;j<h.sampler.length;j++){var k=h.sampler[j];k.create();c=Math.min(c,k.startTime);g=Math.max(g,k.endTime);i=Math.max(i,k.input.length)}e=i;for(var b=Ba.getChildById(b.skeleton[0],!0)||Ba.getChildBySid(b.skeleton[0],!0),l,
m,g=new THREE.Vector3,q,j=0;j<a.vertices.length;j++)a.vertices[j].applyMatrix4(f.skin.bindShapeMatrix);for(c=0;c<e;c++){i=[];h=[];for(j=0;j<a.vertices.length;j++)h.push(new THREE.Vector3);d(b,i,c);j=i;k=f.skin;for(m=0;m<j.length;m++)if(l=j[m],q=-1,"JOINT"==l.type){for(var p=0;p<k.joints.length;p++)if(l.sid==k.joints[p]){q=p;break}if(0<=q){p=k.invBindMatrices[q];l.invBindMatrix=p;l.skinningMatrix=new THREE.Matrix4;l.skinningMatrix.multiplyMatrices(l.world,p);l.weights=[];for(p=0;p<k.weights.length;p++)for(var r=
0;r<k.weights[p].length;r++){var s=k.weights[p][r];s.joint==q&&l.weights.push(s)}}else throw"ColladaLoader: Could not find joint '"+l.sid+"'.";}for(j=0;j<i.length;j++)if("JOINT"==i[j].type)for(k=0;k<i[j].weights.length;k++)l=i[j].weights[k],m=l.index,l=l.weight,q=a.vertices[m],m=h[m],g.x=q.x,g.y=q.y,g.z=q.z,g.applyMatrix4(i[j].skinningMatrix),m.x+=g.x*l,m.y+=g.y*l,m.z+=g.z*l;a.morphTargets.push({name:"target_"+c,vertices:h})}}}function g(a){var b=new THREE.Object3D,c,d,f,i;for(f=0;f<a.controllers.length;f++){var h=
ka[a.controllers[f].url];switch(h.type){case "skin":if(ra[h.skin.source]){var j=new r;j.url=h.skin.source;j.instance_material=a.controllers[f].instance_material;a.geometries.push(j);c=a.controllers[f]}else ka[h.skin.source]&&(d=h=ka[h.skin.source],h.morph&&ra[h.morph.source]&&(j=new r,j.url=h.morph.source,j.instance_material=a.controllers[f].instance_material,a.geometries.push(j)));break;case "morph":ra[h.morph.source]&&(j=new r,j.url=h.morph.source,j.instance_material=a.controllers[f].instance_material,
a.geometries.push(j),d=a.controllers[f]),console.log("ColladaLoader: Morph-controller partially supported.")}}j={};for(f=0;f<a.geometries.length;f++){i=a.geometries[f];var h=i.instance_material,k=ra[i.url],n={},l=[],m=0,p;if(k&&k.mesh&&k.mesh.primitives){0==b.name.length&&(b.name=k.id);if(h)for(i=0;i<h.length;i++){p=h[i];var s=Va[p.target],t=Qa[s.instance_effect.url].shader.material;if(k.doubleSided){if(!(t in j)){var u=t.clone();u.side=THREE.DoubleSide;j[t]=u}t=j[t]}t.opacity=!t.opacity?1:t.opacity;
n[p.symbol]=m;l.push(t);p=t;p.name=null==s.name||""===s.name?s.id:s.name;m++}h=p||new THREE.MeshLambertMaterial({color:14540253,shading:THREE.FlatShading,side:k.doubleSided?THREE.DoubleSide:THREE.FrontSide});k=k.mesh.geometry3js;if(1<m){h=new THREE.MeshFaceMaterial(l);for(i=0;i<k.faces.length;i++)l=k.faces[i],l.materialIndex=n[l.daeMaterial]}if(void 0!==c)e(k,c),h.morphTargets=!0,h=new THREE.SkinnedMesh(k,h,!1),h.skeleton=c.skeleton,h.skinController=ka[c.url],h.skinInstanceController=c,h.name="skin_"+
sa.length,sa.push(h);else if(void 0!==d){i=k;n=d instanceof q?ka[d.url]:d;if(!n||!n.morph)console.log("could not find morph controller!");else{n=n.morph;for(l=0;l<n.targets.length;l++)m=ra[n.targets[l]],m.mesh&&(m.mesh.primitives&&m.mesh.primitives.length)&&(m=m.mesh.primitives[0].geometry,m.vertices.length===i.vertices.length&&i.morphTargets.push({name:"target_1",vertices:m.vertices}));i.morphTargets.push({name:"target_Z",vertices:i.vertices})}h.morphTargets=!0;h=new THREE.Mesh(k,h);h.name="morph_"+
Ma.length;Ma.push(h)}else h=new THREE.Mesh(k,h);1<a.geometries.length?b.add(h):b=h}}for(f=0;f<a.cameras.length;f++)b=qa[a.cameras[f].url],b=new THREE.PerspectiveCamera(b.fov,b.aspect_ratio,b.znear,b.zfar);b.name=a.name||a.id||"";b.matrix=a.matrix;f=a.matrix.decompose();b.position=f[0];b.quaternion=f[1];b.useQuaternion=!0;b.scale=f[2];Ca.centerGeometry&&b.geometry&&(f=THREE.GeometryUtils.center(b.geometry),f.multiply(b.scale),f.applyQuaternion(b.quaternion),b.position.sub(f));for(f=0;f<a.nodes.length;f++)b.add(g(a.nodes[f],
a));return b}function f(){this.init_from=this.id=""}function i(){this.type=this.name=this.id="";this.morph=this.skin=null}function h(){this.weights=this.targets=this.source=this.method=null}function j(){this.source="";this.bindShapeMatrix=null;this.invBindMatrices=[];this.joints=[];this.weights=[]}function k(){this.name=this.id="";this.nodes=[];this.scene=new THREE.Object3D}function m(){this.sid=this.name=this.id="";this.nodes=[];this.controllers=[];this.transforms=[];this.geometries=[];this.channels=
[];this.matrix=new THREE.Matrix4}function l(){this.type=this.sid="";this.data=[];this.obj=null}function q(){this.url="";this.skeleton=[];this.instance_material=[]}function p(){this.target=this.symbol=""}function r(){this.url="";this.instance_material=[]}function s(){this.id="";this.mesh=null}function t(a){this.geometry=a.id;this.primitives=[];this.geometry3js=this.vertices=null}function x(){this.material="";this.count=0;this.inputs=[];this.vcount=null;this.p=[];this.geometry=new THREE.Geometry}function v(){x.call(this);
this.vcount=[]}function w(){x.call(this);this.vcount=3}function y(){this.source="";this.stride=this.count=0;this.params=[]}function D(){this.input={}}function C(){this.semantic="";this.offset=0;this.source="";this.set=0}function u(a){this.id=a;this.type=null}function E(){this.name=this.id="";this.instance_effect=null}function z(){this.color=new THREE.Color(0);this.color.setRGB(Math.random(),Math.random(),Math.random());this.color.a=1;this.texOpts=this.texcoord=this.texture=null}function H(a,b){this.type=
a;this.effect=b;this.material=null}function O(a){this.effect=a;this.format=this.init_from=null}function F(a){this.effect=a;this.mipfilter=this.magfilter=this.minfilter=this.wrap_t=this.wrap_s=this.source=null}function R(){this.name=this.id="";this.shader=null;this.surface={};this.sampler={}}function I(){this.url=""}function K(){this.name=this.id="";this.source={};this.sampler=[];this.channel=[]}function L(a){this.animation=a;this.target=this.source="";this.member=this.arrIndices=this.arrSyntax=this.dotSyntax=
this.sid=this.fullSid=null}function S(a){this.id="";this.animation=a;this.inputs=[];this.endTime=this.startTime=this.interpolation=this.strideOut=this.output=this.input=null;this.duration=0}function ca(a){this.targets=[];this.time=a}function Y(){this.technique=this.name=this.id=""}function N(){this.url=""}function G(a){return"dae"==a?"http://www.collada.org/2005/11/COLLADASchema":null}function ha(a){for(var a=wa(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseFloat(a[c]));return b}function la(a){for(var a=
wa(a),b=[],c=0,d=a.length;c<d;c++)b.push(parseInt(a[c],10));return b}function wa(a){return 0<a.length?a.replace(/^\s+/,"").replace(/\s+$/,"").split(/\s+/):[]}function M(a,b,c){return a.hasAttribute(b)?parseInt(a.getAttribute(b),10):c}function ia(a,b){a.doubleSided=!1;var c=ba.evaluate(".//dae:extra//dae:double_sided",b,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);if(c&&(c=c.iterateNext())&&1===parseInt(c.textContent,10))a.doubleSided=!0}function Aa(a,b){if(Ca.convertUpAxis&&ab!==Ca.upAxis)switch(tb){case "XtoY":var c=
a[0];a[0]=b*a[1];a[1]=c;break;case "XtoZ":c=a[2];a[2]=a[1];a[1]=a[0];a[0]=c;break;case "YtoX":c=a[0];a[0]=a[1];a[1]=b*c;break;case "YtoZ":c=a[1];a[1]=b*a[2];a[2]=c;break;case "ZtoX":c=a[0];a[0]=a[1];a[1]=a[2];a[2]=c;break;case "ZtoY":c=a[1],a[1]=a[2],a[2]=b*c}}function va(a,b){var c=[a[b],a[b+1],a[b+2]];Aa(c,-1);return new THREE.Vector3(c[0],c[1],c[2])}function Na(a){if(Ca.convertUpAxis){var b=[a[0],a[4],a[8]];Aa(b,-1);a[0]=b[0];a[4]=b[1];a[8]=b[2];b=[a[1],a[5],a[9]];Aa(b,-1);a[1]=b[0];a[5]=b[1];
a[9]=b[2];b=[a[2],a[6],a[10]];Aa(b,-1);a[2]=b[0];a[6]=b[1];a[10]=b[2];b=[a[0],a[1],a[2]];Aa(b,-1);a[0]=b[0];a[1]=b[1];a[2]=b[2];b=[a[4],a[5],a[6]];Aa(b,-1);a[4]=b[0];a[5]=b[1];a[6]=b[2];b=[a[8],a[9],a[10]];Aa(b,-1);a[8]=b[0];a[9]=b[1];a[10]=b[2];b=[a[3],a[7],a[11]];Aa(b,-1);a[3]=b[0];a[7]=b[1];a[11]=b[2]}return new THREE.Matrix4(a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9],a[10],a[11],a[12],a[13],a[14],a[15])}function Fa(a){if(Ca.convertUpAxis)switch(a){case "X":switch(tb){case "XtoY":case "XtoZ":case "YtoX":a=
"Y";break;case "ZtoX":a="Z"}break;case "Y":switch(tb){case "XtoY":case "YtoX":case "ZtoX":a="X";break;case "XtoZ":case "YtoZ":case "ZtoY":a="Z"}break;case "Z":switch(tb){case "XtoZ":a="X";break;case "YtoZ":case "ZtoX":case "ZtoY":a="Y"}}return a}var ba=null,xa=null,Ba,Ia=null,P={},pa={},na={},ka={},ra={},Va={},Qa={},qa={},eb,fb,xb,Ma,sa,La=THREE.SmoothShading,Ca={centerGeometry:!1,convertUpAxis:!1,subdivideFaces:!0,upAxis:"Y",defaultEnvMap:null},ab="Y",tb=null;f.prototype.parse=function(a){this.id=
a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];"init_from"==c.nodeName&&(this.init_from=c.textContent)}return this};i.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.type="none";for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "skin":this.skin=(new j).parse(c);this.type=c.nodeName;break;case "morph":this.morph=(new h).parse(c),this.type=c.nodeName}}return this};h.prototype.parse=function(a){var b=
{},c=[],d;this.method=a.getAttribute("method");this.source=a.getAttribute("source").replace(/^#/,"");for(d=0;d<a.childNodes.length;d++){var e=a.childNodes[d];if(1==e.nodeType)switch(e.nodeName){case "source":e=(new u).parse(e);b[e.id]=e;break;case "targets":c=this.parseInputs(e);break;default:console.log(e.nodeName)}}for(d=0;d<c.length;d++)switch(a=c[d],e=b[a.source],a.semantic){case "MORPH_TARGET":this.targets=e.read();break;case "MORPH_WEIGHT":this.weights=e.read()}return this};h.prototype.parseInputs=
function(a){for(var b=[],c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":b.push((new C).parse(d))}}return b};j.prototype.parse=function(a){var b={},c,d;this.source=a.getAttribute("source").replace(/^#/,"");this.invBindMatrices=[];this.joints=[];this.weights=[];for(var e=0;e<a.childNodes.length;e++){var f=a.childNodes[e];if(1==f.nodeType)switch(f.nodeName){case "bind_shape_matrix":f=ha(f.textContent);this.bindShapeMatrix=Na(f);break;case "source":f=
(new u).parse(f);b[f.id]=f;break;case "joints":c=f;break;case "vertex_weights":d=f;break;default:console.log(f.nodeName)}}this.parseJoints(c,b);this.parseWeights(d,b);return this};j.prototype.parseJoints=function(a,b){for(var c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "input":var d=(new C).parse(d),e=b[d.source];"JOINT"==d.semantic?this.joints=e.read():"INV_BIND_MATRIX"==d.semantic&&(this.invBindMatrices=e.read())}}};j.prototype.parseWeights=function(a,
b){for(var c,d,e=[],f=0;f<a.childNodes.length;f++){var g=a.childNodes[f];if(1==g.nodeType)switch(g.nodeName){case "input":e.push((new C).parse(g));break;case "v":c=la(g.textContent);break;case "vcount":d=la(g.textContent)}}for(f=g=0;f<d.length;f++){for(var i=d[f],h=[],j=0;j<i;j++){for(var k={},l=0;l<e.length;l++){var m=e[l],q=c[g+m.offset];switch(m.semantic){case "JOINT":k.joint=q;break;case "WEIGHT":k.weight=b[m.source].data[q]}}h.push(k);g+=e.length}for(j=0;j<h.length;j++)h[j].index=f;this.weights.push(h)}};
k.prototype.getChildById=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};k.prototype.getChildBySid=function(a,b){for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};k.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.nodes=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "node":this.nodes.push((new m).parse(c))}}return this};
m.prototype.getChannelForTransform=function(a){for(var b=0;b<this.channels.length;b++){var c=this.channels[b],d=c.target.split("/");d.shift();var e=d.shift(),f=0<=e.indexOf("."),g=0<=e.indexOf("("),i;if(f)d=e.split("."),e=d.shift(),d.shift();else if(g){i=e.split("(");e=i.shift();for(d=0;d<i.length;d++)i[d]=parseInt(i[d].replace(/\)/,""))}if(e==a)return c.info={sid:e,dotSyntax:f,arrSyntax:g,arrIndices:i},c}return null};m.prototype.getChildById=function(a,b){if(this.id==a)return this;if(b)for(var c=
0;c<this.nodes.length;c++){var d=this.nodes[c].getChildById(a,b);if(d)return d}return null};m.prototype.getChildBySid=function(a,b){if(this.sid==a)return this;if(b)for(var c=0;c<this.nodes.length;c++){var d=this.nodes[c].getChildBySid(a,b);if(d)return d}return null};m.prototype.getTransformBySid=function(a){for(var b=0;b<this.transforms.length;b++)if(this.transforms[b].sid==a)return this.transforms[b];return null};m.prototype.parse=function(a){var b;this.id=a.getAttribute("id");this.sid=a.getAttribute("sid");
this.name=a.getAttribute("name");this.type=a.getAttribute("type");this.type="JOINT"==this.type?this.type:"NODE";this.nodes=[];this.transforms=[];this.geometries=[];this.cameras=[];this.controllers=[];this.matrix=new THREE.Matrix4;for(var c=0;c<a.childNodes.length;c++)if(b=a.childNodes[c],1==b.nodeType)switch(b.nodeName){case "node":this.nodes.push((new m).parse(b));break;case "instance_camera":this.cameras.push((new N).parse(b));break;case "instance_controller":this.controllers.push((new q).parse(b));
break;case "instance_geometry":this.geometries.push((new r).parse(b));break;case "instance_light":break;case "instance_node":b=b.getAttribute("url").replace(/^#/,"");(b=ba.evaluate(".//dae:library_nodes//dae:node[@id='"+b+"']",ba,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null).iterateNext())&&this.nodes.push((new m).parse(b));break;case "rotate":case "translate":case "scale":case "matrix":case "lookat":case "skew":this.transforms.push((new l).parse(b));break;case "extra":break;default:console.log(b.nodeName)}a=
[];c=1E6;b=-1E6;for(var d in na)for(var e=na[d],f=0;f<e.channel.length;f++){var g=e.channel[f],i=e.sampler[f];d=g.target.split("/")[0];d==this.id&&(i.create(),g.sampler=i,c=Math.min(c,i.startTime),b=Math.max(b,i.endTime),a.push(g))}a.length&&(this.startTime=c,this.endTime=b);if((this.channels=a)&&this.channels.length){d=[];a=[];c=0;for(e=this.channels.length;c<e;c++){var h=this.channels[c],f=h.fullSid,g=h.sampler,i=g.input,j=this.getTransformBySid(h.sid),k;if(h.arrIndices){k=[];b=0;for(var p=h.arrIndices.length;b<
p;b++){var s=k,t=b,u=h.arrIndices[b];-1<u&&3>u&&(u=Fa(["X","Y","Z"][u]),u={X:0,Y:1,Z:2}[u]);s[t]=u}}else k=Fa(h.member);if(j){-1===a.indexOf(f)&&a.push(f);b=0;for(p=i.length;b<p;b++){for(var s=i[b],h=g.getData(j.type,b),t=null,u=0,v=d.length;u<v&&null==t;u++){var w=d[u];if(w.time===s)t=w;else if(w.time>s)break}if(!t){t=new ca(s);u=-1;v=0;for(w=d.length;v<w&&-1==u;v++)d[v].time>=s&&(u=v);s=u;d.splice(-1==s?d.length:s,0,t)}t.addTarget(f,j,k,h)}}else console.log('Could not find transform "'+h.sid+'" in node '+
this.id)}for(c=0;c<a.length;c++){e=a[c];for(b=0;b<d.length;b++)if(t=d[b],!t.hasTarget(e)){i=d;f=t;k=b;g=e;j=void 0;a:{j=k?k-1:0;for(j=0<=j?j:j+i.length;0<=j;j--)if(p=i[j],p.hasTarget(g)){j=p;break a}j=null}p=void 0;a:{for(k+=1;k<i.length;k++)if(p=i[k],p.hasTarget(g))break a;p=null}if(j&&p){i=(f.time-j.time)/(p.time-j.time);j=j.getTarget(g);k=p.getTarget(g).data;p=j.data;h=void 0;if("matrix"===j.type)h=p;else if(p.length){h=[];for(s=0;s<p.length;++s)h[s]=p[s]+(k[s]-p[s])*i}else h=p+(k-p)*i;f.addTarget(g,
j.transform,j.member,h)}}}this.keys=d;this.sids=a}this.updateMatrix();return this};m.prototype.updateMatrix=function(){this.matrix.identity();for(var a=0;a<this.transforms.length;a++)this.transforms[a].apply(this.matrix)};l.prototype.parse=function(a){this.sid=a.getAttribute("sid");this.type=a.nodeName;this.data=ha(a.textContent);this.convert();return this};l.prototype.convert=function(){switch(this.type){case "matrix":this.obj=Na(this.data);break;case "rotate":this.angle=THREE.Math.degToRad(this.data[3]);
case "translate":Aa(this.data,-1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;case "scale":Aa(this.data,1);this.obj=new THREE.Vector3(this.data[0],this.data[1],this.data[2]);break;default:console.log("Can not convert Transform of type "+this.type)}};l.prototype.apply=function(a){switch(this.type){case "matrix":a.multiply(this.obj);break;case "translate":a.translate(this.obj);break;case "rotate":a.rotateByAxis(this.obj,this.angle);break;case "scale":a.scale(this.obj)}};
l.prototype.update=function(a,b){var c=["X","Y","Z","ANGLE"];switch(this.type){case "matrix":if(b)if(1===b.length)switch(b[0]){case 0:this.obj.n11=a[0];this.obj.n21=a[1];this.obj.n31=a[2];this.obj.n41=a[3];break;case 1:this.obj.n12=a[0];this.obj.n22=a[1];this.obj.n32=a[2];this.obj.n42=a[3];break;case 2:this.obj.n13=a[0];this.obj.n23=a[1];this.obj.n33=a[2];this.obj.n43=a[3];break;case 3:this.obj.n14=a[0],this.obj.n24=a[1],this.obj.n34=a[2],this.obj.n44=a[3]}else 2===b.length?this.obj["n"+(b[0]+1)+
(b[1]+1)]=a:console.log("Incorrect addressing of matrix in transform.");else this.obj.copy(a);break;case "translate":case "scale":"[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]);switch(b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=a;break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2]}break;case "rotate":switch("[object Array]"===Object.prototype.toString.call(b)&&(b=c[b[0]]),b){case "X":this.obj.x=a;break;case "Y":this.obj.y=a;break;case "Z":this.obj.z=
a;break;case "ANGLE":this.angle=THREE.Math.degToRad(a);break;default:this.obj.x=a[0],this.obj.y=a[1],this.obj.z=a[2],this.angle=THREE.Math.degToRad(a[3])}}};q.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.skeleton=[];this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1===c.nodeType)switch(c.nodeName){case "skeleton":this.skeleton.push(c.textContent.replace(/^#/,""));break;case "bind_material":if(c=ba.evaluate(".//dae:instance_material",
c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(var d=c.iterateNext();d;)this.instance_material.push((new p).parse(d)),d=c.iterateNext()}}return this};p.prototype.parse=function(a){this.symbol=a.getAttribute("symbol");this.target=a.getAttribute("target").replace(/^#/,"");return this};r.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");this.instance_material=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType&&"bind_material"==c.nodeName){if(a=
ba.evaluate(".//dae:instance_material",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null))for(b=a.iterateNext();b;)this.instance_material.push((new p).parse(b)),b=a.iterateNext();break}}return this};s.prototype.parse=function(a){this.id=a.getAttribute("id");ia(this,a);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "mesh":this.mesh=(new t(this)).parse(c)}}return this};t.prototype.parse=function(a){this.primitives=[];var b;for(b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];switch(c.nodeName){case "source":var d=c.getAttribute("id");void 0==P[d]&&(P[d]=(new u(d)).parse(c));break;case "vertices":this.vertices=(new D).parse(c);break;case "triangles":this.primitives.push((new w).parse(c));break;case "polygons":this.primitives.push((new x).parse(c));break;case "polylist":this.primitives.push((new v).parse(c))}}this.geometry3js=new THREE.Geometry;a=P[this.vertices.input.POSITION.source].data;for(b=0;b<a.length;b+=3)this.geometry3js.vertices.push(va(a,b).clone());
for(b=0;b<this.primitives.length;b++)a=this.primitives[b],a.setVertices(this.vertices),this.handlePrimitive(a,this.geometry3js);this.geometry3js.computeCentroids();this.geometry3js.computeFaceNormals();this.geometry3js.calcNormals&&(this.geometry3js.computeVertexNormals(),delete this.geometry3js.calcNormals);this.geometry3js.computeBoundingBox();return this};t.prototype.handlePrimitive=function(a,b){var c,d,e=a.p,f=a.inputs,g,i,h,j,k,l=0,m=3,p=0,q=[];for(c=0;c<f.length;c++)switch(g=f[c],m=g.offset+
1,p=p<m?m:p,g.semantic){case "TEXCOORD":q.push(g.set)}for(var r=0;r<e.length;++r)for(var s=e[r],t=0;t<s.length;){var u=[],v=[],w=null,x=[],m=a.vcount?a.vcount.length?a.vcount[l++]:a.vcount:s.length/p;for(c=0;c<m;c++)for(d=0;d<f.length;d++)switch(g=f[d],j=P[g.source],i=s[t+c*p+g.offset],k=j.accessor.params.length,h=i*k,g.semantic){case "VERTEX":u.push(i);break;case "NORMAL":v.push(va(j.data,h));break;case "TEXCOORD":w=w||{};void 0===w[g.set]&&(w[g.set]=[]);w[g.set].push(new THREE.Vector2(j.data[h],
j.data[h+1]));break;case "COLOR":x.push((new THREE.Color).setRGB(j.data[h],j.data[h+1],j.data[h+2]))}if(0==v.length)if(g=this.vertices.input.NORMAL){j=P[g.source];k=j.accessor.params.length;c=0;for(i=u.length;c<i;c++)v.push(va(j.data,u[c]*k))}else b.calcNormals=!0;if(!w&&(w={},g=this.vertices.input.TEXCOORD)){q.push(g.set);j=P[g.source];k=j.accessor.params.length;c=0;for(i=u.length;c<i;c++)h=u[c]*k,void 0===w[g.set]&&(w[g.set]=[]),w[g.set].push(new THREE.Vector2(j.data[h],1-j.data[h+1]))}if(0==x.length&&
(g=this.vertices.input.COLOR)){j=P[g.source];k=j.accessor.params.length;c=0;for(i=u.length;c<i;c++)h=u[c]*k,x.push((new THREE.Color).setRGB(j.data[h],j.data[h+1],j.data[h+2]))}d=null;g=[];if(3===m)g.push(new THREE.Face3(u[0],u[1],u[2],v,x.length?x:new THREE.Color));else if(4===m)g.push(new THREE.Face4(u[0],u[1],u[2],u[3],v,x.length?x:new THREE.Color));else if(4<m&&Ca.subdivideFaces){x=x.length?x:new THREE.Color;for(d=1;d<m-1;)g.push(new THREE.Face3(u[0],u[d],u[d+1],[v[0],v[d++],v[d]],x))}if(g.length){c=
0;for(i=g.length;c<i;c++){d=g[c];d.daeMaterial=a.material;b.faces.push(d);for(d=0;d<q.length;d++)u=w[q[d]],u=4<m?[u[0],u[c+1],u[c+2]]:4===m?[u[0],u[1],u[2],u[3]]:[u[0],u[1],u[2]],b.faceVertexUvs[d]||(b.faceVertexUvs[d]=[]),b.faceVertexUvs[d].push(u)}}else console.log("dropped face with vcount "+m+" for geometry with id: "+b.id);t+=p*m}};x.prototype.setVertices=function(a){for(var b=0;b<this.inputs.length;b++)this.inputs[b].source==a.id&&(this.inputs[b].source=a.input.POSITION.source)};x.prototype.parse=
function(a){this.material=a.getAttribute("material");this.count=M(a,"count",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "input":this.inputs.push((new C).parse(a.childNodes[b]));break;case "vcount":this.vcount=la(c.textContent);break;case "p":this.p.push(la(c.textContent));break;case "ph":console.warn("polygon holes not yet supported!")}}return this};v.prototype=Object.create(x.prototype);w.prototype=Object.create(x.prototype);y.prototype.parse=function(a){this.params=
[];this.source=a.getAttribute("source");this.count=M(a,"count",0);this.stride=M(a,"stride",0);for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if("param"==c.nodeName){var d={};d.name=c.getAttribute("name");d.type=c.getAttribute("type");this.params.push(d)}}return this};D.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++)if("input"==a.childNodes[b].nodeName){var c=(new C).parse(a.childNodes[b]);this.input[c.semantic]=c}return this};C.prototype.parse=
function(a){this.semantic=a.getAttribute("semantic");this.source=a.getAttribute("source").replace(/^#/,"");this.set=M(a,"set",-1);this.offset=M(a,"offset",0);"TEXCOORD"==this.semantic&&0>this.set&&(this.set=0);return this};u.prototype.parse=function(a){this.id=a.getAttribute("id");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "bool_array":for(var d=wa(c.textContent),e=[],f=0,g=d.length;f<g;f++)e.push("true"==d[f]||"1"==d[f]?!0:!1);this.data=e;this.type=c.nodeName;
break;case "float_array":this.data=ha(c.textContent);this.type=c.nodeName;break;case "int_array":this.data=la(c.textContent);this.type=c.nodeName;break;case "IDREF_array":case "Name_array":this.data=wa(c.textContent);this.type=c.nodeName;break;case "technique_common":for(d=0;d<c.childNodes.length;d++)if("accessor"==c.childNodes[d].nodeName){this.accessor=(new y).parse(c.childNodes[d]);break}}}return this};u.prototype.read=function(){var a=[],b=this.accessor.params[0];switch(b.type){case "IDREF":case "Name":case "name":case "float":return this.data;
case "float4x4":for(b=0;b<this.data.length;b+=16){var c=this.data.slice(b,b+16),c=Na(c);a.push(c)}break;default:console.log("ColladaLoader: Source: Read dont know how to read "+b.type+".")}return a};E.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++)if("instance_effect"==a.childNodes[b].nodeName){this.instance_effect=(new I).parse(a.childNodes[b]);break}return this};z.prototype.isColor=function(){return null==this.texture};
z.prototype.isTexture=function(){return null!=this.texture};z.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "color":c=ha(c.textContent);this.color=new THREE.Color(0);this.color.setRGB(c[0],c[1],c[2]);this.color.a=c[3];break;case "texture":this.texture=c.getAttribute("texture"),this.texcoord=c.getAttribute("texcoord"),this.texOpts={offsetU:0,offsetV:0,repeatU:1,repeatV:1,wrapU:1,wrapV:1},this.parseTexture(c)}}return this};
z.prototype.parseTexture=function(a){if(!a.childNodes)return this;a.childNodes[1]&&"extra"===a.childNodes[1].nodeName&&(a=a.childNodes[1],a.childNodes[1]&&"technique"===a.childNodes[1].nodeName&&(a=a.childNodes[1]));for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];switch(c.nodeName){case "offsetU":case "offsetV":case "repeatU":case "repeatV":this.texOpts[c.nodeName]=parseFloat(c.textContent);break;case "wrapU":case "wrapV":this.texOpts[c.nodeName]=parseInt(c.textContent);break;default:this.texOpts[c.nodeName]=
c.textContent}}return this};H.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "ambient":case "emission":case "diffuse":case "specular":case "transparent":this[c.nodeName]=(new z).parse(c);break;case "shininess":case "reflectivity":case "index_of_refraction":case "transparency":var d;d=ba.evaluate(".//dae:float",c,G,XPathResult.ORDERED_NODE_ITERATOR_TYPE,null);for(var e=d.iterateNext(),f=[];e;)f.push(e),e=d.iterateNext();
d=f;0<d.length&&(this[c.nodeName]=parseFloat(d[0].textContent))}}this.create();return this};H.prototype.create=function(){var a={},b=void 0!==this.transparency&&1>this.transparency,c;for(c in this)switch(c){case "ambient":case "emission":case "diffuse":case "specular":var d=this[c];if(d instanceof z)if(d.isTexture()){var e=this.effect.sampler[d.texture].source;if(e&&(e=pa[this.effect.surface[e].init_from]))e=THREE.ImageUtils.loadTexture(xb+e.init_from),e.wrapS=d.texOpts.wrapU?THREE.RepeatWrapping:
THREE.ClampToEdgeWrapping,e.wrapT=d.texOpts.wrapV?THREE.RepeatWrapping:THREE.ClampToEdgeWrapping,e.offset.x=d.texOpts.offsetU,e.offset.y=d.texOpts.offsetV,e.repeat.x=d.texOpts.repeatU,e.repeat.y=d.texOpts.repeatV,a.map=e,"emission"===c&&(a.emissive=16777215)}else if("diffuse"===c||!b)"emission"===c?a.emissive=d.color.getHex():a[c]=d.color.getHex();break;case "shininess":a[c]=this[c];break;case "reflectivity":a[c]=this[c];0<a[c]&&(a.envMap=Ca.defaultEnvMap);a.combine=THREE.MixOperation;break;case "index_of_refraction":a.refractionRatio=
this[c];1!==this[c]&&(a.envMap=Ca.defaultEnvMap);break;case "transparency":b&&(a.transparent=!0,a.opacity=this[c],b=!0)}a.shading=La;a.side=this.effect.doubleSided?THREE.DoubleSide:THREE.FrontSide;switch(this.type){case "constant":void 0!=a.emissive&&(a.color=a.emissive);this.material=new THREE.MeshBasicMaterial(a);break;case "phong":case "blinn":void 0!=a.diffuse&&(a.color=a.diffuse);this.material=new THREE.MeshPhongMaterial(a);break;default:void 0!=a.diffuse&&(a.color=a.diffuse),this.material=new THREE.MeshLambertMaterial(a)}return this.material};
O.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "init_from":this.init_from=c.textContent;break;case "format":this.format=c.textContent;break;default:console.log("unhandled Surface prop: "+c.nodeName)}}return this};F.prototype.parse=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "source":this.source=c.textContent;break;case "minfilter":this.minfilter=
c.textContent;break;case "magfilter":this.magfilter=c.textContent;break;case "mipfilter":this.mipfilter=c.textContent;break;case "wrap_s":this.wrap_s=c.textContent;break;case "wrap_t":this.wrap_t=c.textContent;break;default:console.log("unhandled Sampler2D prop: "+c.nodeName)}}return this};R.prototype.create=function(){if(null==this.shader)return null};R.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");ia(this,a);this.shader=null;for(var b=0;b<a.childNodes.length;b++){var c=
a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "profile_COMMON":this.parseTechnique(this.parseProfileCOMMON(c))}}return this};R.prototype.parseNewparam=function(a){for(var b=a.getAttribute("sid"),c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "surface":this.surface[b]=(new O(this)).parse(d);break;case "sampler2D":this.sampler[b]=(new F(this)).parse(d);break;case "extra":break;default:console.log(d.nodeName)}}};R.prototype.parseProfileCOMMON=
function(a){for(var b,c=0;c<a.childNodes.length;c++){var d=a.childNodes[c];if(1==d.nodeType)switch(d.nodeName){case "profile_COMMON":this.parseProfileCOMMON(d);break;case "technique":b=d;break;case "newparam":this.parseNewparam(d);break;case "image":d=(new f).parse(d);pa[d.id]=d;break;case "extra":break;default:console.log(d.nodeName)}}return b};R.prototype.parseTechnique=function(a){for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "constant":case "lambert":case "blinn":case "phong":this.shader=
(new H(c.nodeName,this)).parse(c)}}};I.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};K.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");this.source={};for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "animation":var c=(new K).parse(c),d;for(d in c.source)this.source[d]=c.source[d];for(var e=0;e<c.channel.length;e++)this.channel.push(c.channel[e]),this.sampler.push(c.sampler[e]);
break;case "source":d=(new u).parse(c);this.source[d.id]=d;break;case "sampler":this.sampler.push((new S(this)).parse(c));break;case "channel":this.channel.push((new L(this)).parse(c))}}return this};L.prototype.parse=function(a){this.source=a.getAttribute("source").replace(/^#/,"");this.target=a.getAttribute("target");var b=this.target.split("/");b.shift();var a=b.shift(),c=0<=a.indexOf("."),d=0<=a.indexOf("(");if(c)b=a.split("."),this.sid=b.shift(),this.member=b.shift();else if(d){b=a.split("(");
this.sid=b.shift();for(var e=0;e<b.length;e++)b[e]=parseInt(b[e].replace(/\)/,""));this.arrIndices=b}else this.sid=a;this.fullSid=a;this.dotSyntax=c;this.arrSyntax=d;return this};S.prototype.parse=function(a){this.id=a.getAttribute("id");this.inputs=[];for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==c.nodeType)switch(c.nodeName){case "input":this.inputs.push((new C).parse(c))}}return this};S.prototype.create=function(){for(var a=0;a<this.inputs.length;a++){var b=this.inputs[a],
c=this.animation.source[b.source];switch(b.semantic){case "INPUT":this.input=c.read();break;case "OUTPUT":this.output=c.read();this.strideOut=c.accessor.stride;break;case "INTERPOLATION":this.interpolation=c.read();break;case "IN_TANGENT":break;case "OUT_TANGENT":break;default:console.log(b.semantic)}}this.duration=this.endTime=this.startTime=0;if(this.input.length){this.startTime=1E8;this.endTime=-1E8;for(a=0;a<this.input.length;a++)this.startTime=Math.min(this.startTime,this.input[a]),this.endTime=
Math.max(this.endTime,this.input[a]);this.duration=this.endTime-this.startTime}};S.prototype.getData=function(a,b){var c;if("matrix"===a&&16===this.strideOut)c=this.output[b];else if(1<this.strideOut){c=[];for(var b=b*this.strideOut,d=0;d<this.strideOut;++d)c[d]=this.output[b+d];if(3===this.strideOut)switch(a){case "rotate":case "translate":Aa(c,-1);break;case "scale":Aa(c,1)}else 4===this.strideOut&&"matrix"===a&&Aa(c,-1)}else c=this.output[b];return c};ca.prototype.addTarget=function(a,b,c,d){this.targets.push({sid:a,
member:c,transform:b,data:d})};ca.prototype.apply=function(a){for(var b=0;b<this.targets.length;++b){var c=this.targets[b];(!a||c.sid===a)&&c.transform.update(c.data,c.member)}};ca.prototype.getTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return this.targets[b];return null};ca.prototype.hasTarget=function(a){for(var b=0;b<this.targets.length;++b)if(this.targets[b].sid===a)return!0;return!1};ca.prototype.interpolate=function(a,b){for(var c=0;c<this.targets.length;++c){var d=
this.targets[c],e=a.getTarget(d.sid);if("matrix"!==d.transform.type&&e){var f=(b-this.time)/(a.time-this.time),g=e.data,i=d.data;if(0>f||1<f)console.log("Key.interpolate: Warning! Scale out of bounds:"+f),f=0>f?0:1;if(i.length)for(var e=[],h=0;h<i.length;++h)e[h]=i[h]+(g[h]-i[h])*f;else e=i+(g-i)*f}else e=d.data;d.transform.update(e,d.member)}};Y.prototype.parse=function(a){this.id=a.getAttribute("id");this.name=a.getAttribute("name");for(var b=0;b<a.childNodes.length;b++){var c=a.childNodes[b];if(1==
c.nodeType)switch(c.nodeName){case "optics":this.parseOptics(c)}}return this};Y.prototype.parseOptics=function(a){for(var b=0;b<a.childNodes.length;b++)if("technique_common"==a.childNodes[b].nodeName)for(var c=a.childNodes[b],d=0;d<c.childNodes.length;d++)if(this.technique=c.childNodes[d].nodeName,"perspective"==this.technique)for(var e=c.childNodes[d],f=0;f<e.childNodes.length;f++){var g=e.childNodes[f];switch(g.nodeName){case "yfov":this.yfov=g.textContent;break;case "xfov":this.xfov=g.textContent;
break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}else if("orthographic"==this.technique){e=c.childNodes[d];for(f=0;f<e.childNodes.length;f++)switch(g=e.childNodes[f],g.nodeName){case "xmag":this.xmag=g.textContent;break;case "ymag":this.ymag=g.textContent;break;case "znear":this.znear=g.textContent;break;case "zfar":this.zfar=g.textContent;break;case "aspect_ratio":this.aspect_ratio=g.textContent}}return this};
N.prototype.parse=function(a){this.url=a.getAttribute("url").replace(/^#/,"");return this};return{load:function(b,c,d){var e=0;if(document.implementation&&document.implementation.createDocument){var f=new XMLHttpRequest;f.onreadystatechange=function(){if(4==f.readyState){if(0==f.status||200==f.status)if(f.responseXML)Ia=c,a(f.responseXML,void 0,b);else if(f.responseText){Ia=c;var g=(new DOMParser).parseFromString(f.responseText,"application/xml");a(g,void 0,b)}else console.error("ColladaLoader: Empty or non-existing file ("+
b+")")}else 3==f.readyState&&d&&(0==e&&(e=f.getResponseHeader("Content-Length")),d({total:e,loaded:f.responseText.length}))};f.open("GET",b,!0);f.send(null)}else alert("Don't know how to parse XML!")},parse:a,setPreferredShading:function(a){La=a},applySkin:e,geometries:ra,options:Ca}};THREE.MTLLoader=function(a,b){THREE.EventDispatcher.call(this);this.baseUrl=a;this.options=b};
THREE.MTLLoader.prototype={load:function(a){var b=this,c=new XMLHttpRequest;c.addEventListener("load",function(c){200===c.target.status||0===c.target.status?(c=b.parse(c.target.responseText),b.dispatchEvent({type:"load",content:c})):b.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText})},!1);c.addEventListener("progress",function(a){b.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);c.addEventListener("error",function(){b.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);c.open("GET",a,!0);c.send(null)},parse:function(a){for(var b=a.split("\n"),c={},d=/\s+/,a={},e=0;e<b.length;e++){var g=b[e],g=g.trim();if(!(0===g.length||"#"===g.charAt(0))){var f=g.indexOf(" "),i=0<=f?g.substring(0,f):g,i=i.toLowerCase(),g=0<=f?g.substring(f+1):"",g=g.trim();"newmtl"===i?(c={name:g},a[g]=c):c&&("ka"===i||"kd"===i||"ks"===i?(g=g.split(d,3),c[i]=[parseFloat(g[0]),parseFloat(g[1]),parseFloat(g[2])]):c[i]=g)}}b=new THREE.MTLLoader.MaterialCreator(this.baseUrl,
this.options);b.setMaterials(a);return b}};THREE.MTLLoader.MaterialCreator=function(a,b){THREE.EventDispatcher.call(this);this.baseUrl=a;this.options=b;this.materialsInfo={};this.materials={};this.materialsArray=[];this.nameLookup={};this.side=this.options&&this.options.side?this.options.side:THREE.FrontSide;this.wrap=this.options&&this.options.wrap?this.options.wrap:THREE.RepeatWrapping};
THREE.MTLLoader.MaterialCreator.prototype={setMaterials:function(a){this.materialsInfo=this.convert(a);this.materials={};this.materialsArray=[];this.nameLookup={}},convert:function(a){if(!this.options)return a;var b={},c;for(c in a){var d=a[c],e={};b[c]=e;for(var g in d){var f=!0,i=d[g],h=g.toLowerCase();switch(h){case "kd":case "ka":case "ks":this.options&&this.options.normalizeRGB&&(i=[i[0]/255,i[1]/255,i[2]/255]);this.options&&this.options.ignoreZeroRGBs&&0===i[0]&&(0===i[1]&&0===i[1])&&(f=!1);
break;case "d":this.options&&this.options.invertTransparency&&(i=1-i)}f&&(e[h]=i)}}return b},preload:function(){for(var a in this.materialsInfo)this.create(a)},getIndex:function(a){return this.nameLookup[a]},getAsArray:function(){var a=0,b;for(b in this.materialsInfo)this.materialsArray[a]=this.create(b),this.nameLookup[b]=a,a++;return this.materialsArray},create:function(a){void 0===this.materials[a]&&this.createMaterial_(a);return this.materials[a]},createMaterial_:function(a){var b=this.materialsInfo[a],
c={name:a,side:this.side},d;for(d in b){var e=b[d];switch(d.toLowerCase()){case "kd":c.diffuse=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ka":c.ambient=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "ks":c.specular=(new THREE.Color).setRGB(e[0],e[1],e[2]);break;case "map_kd":c.map=THREE.MTLLoader.loadTexture(this.baseUrl+e);c.map.wrapS=this.wrap;c.map.wrapT=this.wrap;break;case "ns":c.shininess=e;break;case "d":1>e&&(c.transparent=!0,c.opacity=e)}}c.diffuse&&(c.ambient||(c.ambient=
c.diffuse),c.color=c.diffuse);this.materials[a]=new THREE.MeshPhongMaterial(c);return this.materials[a]}};
THREE.MTLLoader.loadTexture=function(a,b,c,d){if(a.toLowerCase().endsWith(".dds"))var e=THREE.ImageUtils.loadCompressedTexture(a,b,c,d);else{var g=new Image,e=new THREE.Texture(g,b),b=new THREE.ImageLoader;b.addEventListener("load",function(a){e.image=THREE.MTLLoader.ensurePowerOfTwo_(a.content);e.needsUpdate=!0;c&&c(e)});b.addEventListener("error",function(a){d&&d(a.message)});b.crossOrigin=this.crossOrigin;b.load(a,g)}return e};
THREE.MTLLoader.ensurePowerOfTwo_=function(a){if(!THREE.MTLLoader.isPowerOfTwo_(a.width)||!THREE.MTLLoader.isPowerOfTwo_(a.height)){var b=document.createElement("canvas");b.width=THREE.MTLLoader.nextHighestPowerOfTwo_(a.width);b.height=THREE.MTLLoader.nextHighestPowerOfTwo_(a.height);b.getContext("2d").drawImage(a,0,0,a.width,a.height,0,0,b.width,b.height);return b}return a};THREE.MTLLoader.isPowerOfTwo_=function(a){return 0===(a&a-1)};
THREE.MTLLoader.nextHighestPowerOfTwo_=function(a){--a;for(var b=1;32>b;b<<=1)a|=a>>b;return a+1};THREE.OBJLoader=function(){THREE.EventDispatcher.call(this)};
THREE.OBJLoader.prototype={constructor:THREE.OBJLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){a=c.parse(a.target.responseText);c.dispatchEvent({type:"load",content:a});b&&b(a)},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,!0);d.send(null)},parse:function(a){function b(a,
b,c){return new THREE.Vector3(a,b,c)}function c(a,b){return new THREE.Vector2(a,b)}function d(a,b,c,d){return new THREE.Face3(a,b,c,d)}function e(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}function g(a,b){0<h.vertices.length&&(h.mergeVertices(),h.computeCentroids(),h.computeFaceNormals(),h.computeBoundingSphere(),i.add(k),h=new THREE.Geometry,k=new THREE.Mesh(h,j),l=0);void 0!==a&&(k.name=a);void 0!==b&&(j=new THREE.MeshLambertMaterial,j.name=b,k.material=j)}for(var a=a.replace(/\ \\\r\n/g,""),
f=new THREE.Object3D,i=f,h=new THREE.Geometry,j=new THREE.MeshLambertMaterial,k=new THREE.Mesh(h,j),m=[],l=0,q=[],p=[],r=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,s=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,t=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,x=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/,v=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/,w=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/,
y=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/,a=a.split("\n"),D=0;D<a.length;D++){var C=a[D],C=C.trim(),u;0===C.length||"#"===C.charAt(0)||(null!==(u=r.exec(C))?m.push(b(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]))):null!==(u=s.exec(C))?q.push(b(parseFloat(u[1]),parseFloat(u[2]),parseFloat(u[3]))):null!==(u=t.exec(C))?p.push(c(parseFloat(u[1]),parseFloat(u[2]))):null!==(u=x.exec(C))?void 0===u[4]?(h.vertices.push(m[parseInt(u[1])-1],m[parseInt(u[2])-
1],m[parseInt(u[3])-1]),h.faces.push(d(l++,l++,l++))):(h.vertices.push(m[parseInt(u[1])-1],m[parseInt(u[2])-1],m[parseInt(u[3])-1],m[parseInt(u[4])-1]),h.faces.push(e(l++,l++,l++,l++))):null!==(u=v.exec(C))?void 0===u[10]?(h.vertices.push(m[parseInt(u[2])-1],m[parseInt(u[5])-1],m[parseInt(u[8])-1]),h.faces.push(d(l++,l++,l++)),h.faceVertexUvs[0].push([p[parseInt(u[3])-1],p[parseInt(u[6])-1],p[parseInt(u[9])-1]])):(h.vertices.push(m[parseInt(u[2])-1],m[parseInt(u[5])-1],m[parseInt(u[8])-1],m[parseInt(u[11])-
1]),h.faces.push(e(l++,l++,l++,l++)),h.faceVertexUvs[0].push([p[parseInt(u[3])-1],p[parseInt(u[6])-1],p[parseInt(u[9])-1],p[parseInt(u[12])-1]])):null!==(u=w.exec(C))?void 0===u[13]?(h.vertices.push(m[parseInt(u[2])-1],m[parseInt(u[6])-1],m[parseInt(u[10])-1]),h.faces.push(d(l++,l++,l++,[q[parseInt(u[4])-1],q[parseInt(u[8])-1],q[parseInt(u[12])-1]])),h.faceVertexUvs[0].push([p[parseInt(u[3])-1],p[parseInt(u[7])-1],p[parseInt(u[11])-1]])):(h.vertices.push(m[parseInt(u[2])-1],m[parseInt(u[6])-1],m[parseInt(u[10])-
1],m[parseInt(u[14])-1]),h.faces.push(e(l++,l++,l++,l++,[q[parseInt(u[4])-1],q[parseInt(u[8])-1],q[parseInt(u[12])-1],q[parseInt(u[16])-1]])),h.faceVertexUvs[0].push([p[parseInt(u[3])-1],p[parseInt(u[7])-1],p[parseInt(u[11])-1],p[parseInt(u[15])-1]])):null!==(u=y.exec(C))?void 0===u[10]?(h.vertices.push(m[parseInt(u[2])-1],m[parseInt(u[5])-1],m[parseInt(u[8])-1]),h.faces.push(d(l++,l++,l++,[q[parseInt(u[3])-1],q[parseInt(u[6])-1],q[parseInt(u[9])-1]]))):(h.vertices.push(m[parseInt(u[2])-1],m[parseInt(u[5])-
1],m[parseInt(u[8])-1],m[parseInt(u[11])-1]),h.faces.push(e(l++,l++,l++,l++,[q[parseInt(u[3])-1],q[parseInt(u[6])-1],q[parseInt(u[9])-1],q[parseInt(u[12])-1]]))):C.startsWith("o ")?(i=new THREE.Object3D,i.name=C.substring(2).trim(),f.add(i)):C.startsWith("g ")?g(C.substring(2).trim(),void 0):C.startsWith("usemtl ")?g(void 0,C.substring(7).trim()):C.startsWith("mtllib ")||C.startsWith("s "))}return f}};THREE.OBJMTLLoader=function(){THREE.EventDispatcher.call(this)};
THREE.OBJMTLLoader.prototype={constructor:THREE.OBJMTLLoader,load:function(a,b,c){function d(c){"load"===c.type?c.content instanceof THREE.MTLLoader.MaterialCreator?(f=!0,h=c.content,h.preload()):200===c.target.status||0===c.target.status?(c=c.target.responseText,i=b?e.parse(c):e.parse(c,function(a){f=!1;j.load(j.baseUrl+a)})):e.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]",response:c.target.responseText}):"error"===c.type&&(f=!0);f&&i&&(h&&i.traverse(function(a){if(a instanceof
THREE.Mesh&&a.material.name){var b=h.create(a.material.name);b&&(a.material=b)}}),e.dispatchEvent({type:"load",content:i}))}var e=this,g=new XMLHttpRequest,f,i,h,j=new THREE.MTLLoader(a.substr(0,a.lastIndexOf("/")+1),c);j.addEventListener("load",d);j.addEventListener("error",d);b?(j.load(b),f=!1):f=!0;g.addEventListener("load",d,!1);g.addEventListener("progress",function(a){e.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);g.addEventListener("error",function(){e.dispatchEvent({type:"error",
message:"Couldn't load URL ["+a+"]"})},!1);g.open("GET",a,!0);g.send(null)},parse:function(a,b){function c(a,b,c){return new THREE.Vector3(a,b,c)}function d(a,b){return new THREE.Vector2(a,b)}function e(a,b,c,d){return new THREE.Face3(a,b,c,d)}function g(a,b,c,d,e){return new THREE.Face4(a,b,c,d,e)}function f(a,b){0<j.vertices.length&&(j.mergeVertices(),j.computeCentroids(),j.computeFaceNormals(),j.computeBoundingSphere(),h.add(m),j=new THREE.Geometry,m=new THREE.Mesh(j,k),q=0);void 0!==a&&(m.name=
a);void 0!==b&&(k=new THREE.MeshLambertMaterial,k.name=b,m.material=k)}for(var a=a.replace(/\ \\\r\n/g,""),i=new THREE.Object3D,h=i,j=new THREE.Geometry,k=new THREE.MeshLambertMaterial,m=new THREE.Mesh(j,k),l=[],q=0,p=[],r=[],s=/v( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,t=/vn( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,x=/vt( +[\d|\.|\+|\-|e]+)( [\d|\.|\+|\-|e]+)/,v=/f( +[\d]+)( [\d]+)( [\d]+)( [\d]+)?/,w=/f( +([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))( ([\d]+)\/([\d]+))?/,
y=/f( +([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))( ([\d]+)\/([\d]+)\/([\d]+))?/,D=/f( +([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))( ([\d]+)\/\/([\d]+))?/,C=a.split("\n"),u=0;u<C.length;u++){var E=C[u],E=E.trim(),z;0===E.length||"#"===E.charAt(0)||(null!==(z=s.exec(E))?l.push(c(parseFloat(z[1]),parseFloat(z[2]),parseFloat(z[3]))):null!==(z=t.exec(E))?p.push(c(parseFloat(z[1]),parseFloat(z[2]),parseFloat(z[3]))):null!==(z=x.exec(E))?r.push(d(parseFloat(z[1]),
parseFloat(z[2]))):null!==(z=v.exec(E))?void 0===z[4]?(j.vertices.push(l[parseInt(z[1])-1],l[parseInt(z[2])-1],l[parseInt(z[3])-1]),j.faces.push(e(q++,q++,q++))):(j.vertices.push(l[parseInt(z[1])-1],l[parseInt(z[2])-1],l[parseInt(z[3])-1],l[parseInt(z[4])-1]),j.faces.push(g(q++,q++,q++,q++))):null!==(z=w.exec(E))?void 0===z[10]?(j.vertices.push(l[parseInt(z[2])-1],l[parseInt(z[5])-1],l[parseInt(z[8])-1]),j.faces.push(e(q++,q++,q++)),j.faceVertexUvs[0].push([r[parseInt(z[3])-1],r[parseInt(z[6])-1],
r[parseInt(z[9])-1]])):(j.vertices.push(l[parseInt(z[2])-1],l[parseInt(z[5])-1],l[parseInt(z[8])-1],l[parseInt(z[11])-1]),j.faces.push(g(q++,q++,q++,q++)),j.faceVertexUvs[0].push([r[parseInt(z[3])-1],r[parseInt(z[6])-1],r[parseInt(z[9])-1],r[parseInt(z[12])-1]])):null!==(z=y.exec(E))?void 0===z[13]?(j.vertices.push(l[parseInt(z[2])-1],l[parseInt(z[6])-1],l[parseInt(z[10])-1]),j.faces.push(e(q++,q++,q++,[p[parseInt(z[4])-1],p[parseInt(z[8])-1],p[parseInt(z[12])-1]])),j.faceVertexUvs[0].push([r[parseInt(z[3])-
1],r[parseInt(z[7])-1],r[parseInt(z[11])-1]])):(j.vertices.push(l[parseInt(z[2])-1],l[parseInt(z[6])-1],l[parseInt(z[10])-1],l[parseInt(z[14])-1]),j.faces.push(g(q++,q++,q++,q++,[p[parseInt(z[4])-1],p[parseInt(z[8])-1],p[parseInt(z[12])-1],p[parseInt(z[16])-1]])),j.faceVertexUvs[0].push([r[parseInt(z[3])-1],r[parseInt(z[7])-1],r[parseInt(z[11])-1],r[parseInt(z[15])-1]])):null!==(z=D.exec(E))?void 0===z[10]?(j.vertices.push(l[parseInt(z[2])-1],l[parseInt(z[5])-1],l[parseInt(z[8])-1]),j.faces.push(e(q++,
q++,q++,[p[parseInt(z[3])-1],p[parseInt(z[6])-1],p[parseInt(z[9])-1]]))):(j.vertices.push(l[parseInt(z[2])-1],l[parseInt(z[5])-1],l[parseInt(z[8])-1],l[parseInt(z[11])-1]),j.faces.push(g(q++,q++,q++,q++,[p[parseInt(z[3])-1],p[parseInt(z[6])-1],p[parseInt(z[9])-1],p[parseInt(z[12])-1]]))):E.startsWith("o ")?(h=new THREE.Object3D,h.name=E.substring(2).trim(),i.add(h)):E.startsWith("g ")?f(E.substring(2).trim(),void 0):E.startsWith("usemtl ")?f(void 0,E.substring(7).trim()):E.startsWith("mtllib ")?b&&
(E=E.substring(7),E=E.trim(),b(E)):E.startsWith("s ")||console.log("THREE.OBJMTLLoader: Unhandled line "+E))}return i}};THREE.STLLoader=function(){THREE.EventDispatcher.call(this)};
THREE.STLLoader.prototype={constructor:THREE.STLLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){a=c.parse(a.target.responseText);c.dispatchEvent({type:"load",content:a});b&&b(a)},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,!0);d.send(null)},parse:function(a){for(var b=
new THREE.Geometry,c=/facet([\s\S]*?)endfacet/g,d;null!=(d=c.exec(a));){for(var e=d[0],g=/normal[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=(d=g.exec(e));)var f=new THREE.Vector3(d[1],d[3],d[5]);for(g=/vertex[\s]+([-+]?[0-9]+\.?[0-9]*([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+[\s]+([-+]?[0-9]*\.?[0-9]+([eE][-+]?[0-9]+)?)+/g;null!=(d=g.exec(e));)b.vertices.push(new THREE.Vector3(d[1],
d[3],d[5]));d=b.vertices.length;b.faces.push(new THREE.Face3(d-3,d-2,d-1,f))}b.computeCentroids();b.computeBoundingSphere();return b}};THREE.UTF8Loader=function(){};THREE.UTF8Loader.prototype.load=function(a,b,c){this.downloadModelJson(a,c,b)};THREE.UTF8Loader.BufferGeometryCreator=function(){};
THREE.UTF8Loader.BufferGeometryCreator.prototype.create=function(a,b){var c=b.length/3,d=new THREE.BufferGeometry,e=new Float32Array(9*c),g=new Float32Array(9*c),c=new Float32Array(6*c),f,i,h,j,k,m=a.length;for(f=i=0;f<m;f+=8)h=a[f],j=a[f+1],k=a[f+2],e[i++]=h,e[i++]=j,e[i++]=k;i=0;for(f=3;f<m;f+=8)h=a[f],j=a[f+1],c[i++]=h,c[i++]=j;i=0;for(f=5;f<m;f+=8)h=a[f],j=a[f+1],k=a[f+2],g[i++]=h,g[i++]=j,g[i++]=k;f=d.attributes;f.index={itemSize:1,array:b,numItems:b.length};f.position={itemSize:3,array:e,numItems:e.length};
f.normal={itemSize:3,array:g,numItems:g.length};f.uv={itemSize:2,array:c,numItems:c.length};d.offsets=[{start:0,count:b.length,index:0}];d.computeBoundingSphere();return d};THREE.UTF8Loader.GeometryCreator=function(){};
THREE.UTF8Loader.GeometryCreator.prototype={create:function(a,b){var c=new THREE.Geometry;this.init_vertices(c,a,8,0);var d=this.init_uvs(a,8,3),e=this.init_normals(a,8,5);this.init_faces(c,e,d,b);c.computeCentroids();c.computeFaceNormals();return c},init_vertices:function(a,b,c,d){for(var e,g,f,i=b.length;d<i;d+=c)e=b[d],g=b[d+1],f=b[d+2],this.addVertex(a,e,g,f)},init_normals:function(a,b,c){for(var d=[],e,g,f,i=a.length;c<i;c+=b)e=a[c],g=a[c+1],f=a[c+2],d.push(e,g,f);return d},init_uvs:function(a,
b,c){for(var d=[],e,g,f=a.length;c<f;c+=b)e=a[c],g=a[c+1],d.push(e,g);return d},init_faces:function(a,b,c,d){var e,g,f,i,h,j,k,m=d.length;for(e=0;e<m;e+=3)g=d[e],f=d[e+1],i=d[e+2],this.f3n(a,b,g,f,i,0,g,f,i),h=c[2*g],g=c[2*g+1],j=c[2*f],f=c[2*f+1],k=c[2*i],i=c[2*i+1],this.uv3(a.faceVertexUvs[0],h,g,j,f,k,i)},addVertex:function(a,b,c,d){a.vertices.push(new THREE.Vector3(b,c,d))},f3n:function(a,b,c,d,e,g,f,i,h){var j=b[3*i],k=b[3*i+1],m=b[3*i+2],i=b[3*h],l=b[3*h+1],h=b[3*h+2],b=new THREE.Vector3(b[3*
f],b[3*f+1],b[3*f+2]),j=new THREE.Vector3(j,k,m),k=new THREE.Vector3(i,l,h);a.faces.push(new THREE.Face3(c,d,e,[b,j,k],null,g))},uv3:function(a,b,c,d,e,g,f){var i=[];i.push(new THREE.Vector2(b,c));i.push(new THREE.Vector2(d,e));i.push(new THREE.Vector2(g,f));a.push(i)}};var DEFAULT_DECODE_PARAMS={decodeOffsets:[-4095,-4095,-4095,0,0,-511,-511,-511],decodeScales:[1/8191,1/8191,1/8191,1/1023,1/1023,1/1023,1/1023,1/1023]};
THREE.UTF8Loader.prototype.decompressAttribsInner_=function(a,b,c,d,e,g,f,i){for(var h=0;b<c;b++){var j=a.charCodeAt(b),h=h+(j>>1^-(j&1));d[e]=i*(h+f);e+=g}};THREE.UTF8Loader.prototype.decompressIndices_=function(a,b,c,d,e){for(var g=0,f=0;f<c;f++){var i=a.charCodeAt(b++);d[e++]=g-i;0===i&&g++}};
THREE.UTF8Loader.prototype.decompressAABBs_=function(a,b,c,d,e){for(var g=6*c,c=b+g,f=0,g=new Float32Array(g);b<c;b+=6){var i=a.charCodeAt(b+0)+d[0],h=a.charCodeAt(b+1)+d[1],j=a.charCodeAt(b+2)+d[2],k=a.charCodeAt(b+3)+1>>1,m=a.charCodeAt(b+4)+1>>1,l=a.charCodeAt(b+5)+1>>1;g[f++]=e[0]*(i+k);g[f++]=e[1]*(h+m);g[f++]=e[2]*(j+l);g[f++]=e[0]*k;g[f++]=e[1]*m;g[f++]=e[2]*l}return g};
THREE.UTF8Loader.prototype.decompressMesh=function(a,b,c,d,e,g){for(var f=c.decodeScales.length,i=c.decodeOffsets,c=c.decodeScales,h=b.attribRange[1],j=b.attribRange[0],k=new Float32Array(f*h),m=0;m<f;m++){var l=j+h,q=c[m];q&&this.decompressAttribsInner_(a,j,l,k,m,f,i[m],q);j=l}h=3*b.indexRange[1];f=new Uint16Array(h);this.decompressIndices_(a,j,h,f,0);j=void 0;(h=b.bboxes)&&(j=this.decompressAABBs_(a,h,b.names.length,i,c));g(d,e,k,f,j,b)};
THREE.UTF8Loader.prototype.copyAttrib=function(a,b,c,d){for(var e=0;e<a;e++)c[e]=b[a*d+e]};THREE.UTF8Loader.prototype.decodeAttrib2=function(a,b,c,d,e,g,f,i,h,j){for(var k=0;5>k;k++){var m=a.charCodeAt(e+g*k+j);h[k]+=m>>1^-(m&1);i[b*j+k]=h[k];f[b*j+k]=d[k]*(h[k]+c[k])}};
THREE.UTF8Loader.prototype.accumulateNormal=function(a,b,c,d,e){var g=d[8*a],f=d[8*a+1],i=d[8*a+2],h=d[8*b],j=d[8*b+1],k=d[8*b+2],m=d[8*c],l=d[8*c+1],d=d[8*c+2],h=h-g,j=j-f,k=k-i,m=m-g,l=l-f,d=d-i,g=j*d-k*l,f=k*m-h*d,i=h*l-j*m;e[3*a]+=g;e[3*a+1]+=f;e[3*a+2]+=i;e[3*b]+=g;e[3*b+1]+=f;e[3*b+2]+=i;e[3*c]+=g;e[3*c+1]+=f;e[3*c+2]+=i};
THREE.UTF8Loader.prototype.decompressMesh2=function(a,b,c,d,e,g){for(var f=c.decodeScales.length,i=c.decodeOffsets,h=c.decodeScales,c=b.attribRange[0],j=b.attribRange[1],k=b.codeRange[0],m=3*b.codeRange[2],l=new Uint16Array(m),q=new Int32Array(3*j),p=new Uint16Array(f),r=new Uint16Array(f*j),s=new Float32Array(f*j),t=0,x=0,v=0;v<m;v+=3){var w=a.charCodeAt(k++),y=Math.min(v,96);if(w<y){var D=w%3,w=v-(w-D),C,u,E;switch(D){case 0:C=l[w+2];u=l[w+1];E=l[w+0];break;case 1:C=l[w+0];u=l[w+2];E=l[w+1];break;
case 2:C=l[w+1],u=l[w+0],E=l[w+2]}l[x++]=C;l[x++]=u;w=a.charCodeAt(k++);D=t-w;l[x++]=D;if(0===w){for(w=0;5>w;w++)y=a.charCodeAt(c+j*w+t),y=(y>>1^-(y&1))+r[f*C+w]+r[f*u+w]-r[f*E+w],p[w]=y,r[f*t+w]=y,s[f*t+w]=h[w]*(y+i[w]);t++}else this.copyAttrib(f,r,p,D);this.accumulateNormal(C,u,D,r,q)}else{D=t-(w-y);l[x++]=D;w===y?this.decodeAttrib2(a,f,i,h,c,j,s,r,p,t++):this.copyAttrib(f,r,p,D);w=a.charCodeAt(k++);y=t-w;l[x++]=y;0===w?this.decodeAttrib2(a,f,i,h,c,j,s,r,p,t++):this.copyAttrib(f,r,p,y);var w=a.charCodeAt(k++),
z=t-w;l[x++]=z;if(0===w){for(w=0;5>w;w++)p[w]=(r[f*D+w]+r[f*y+w])/2;this.decodeAttrib2(a,f,i,h,c,j,s,r,p,t++)}else this.copyAttrib(f,r,p,z);this.accumulateNormal(D,y,z,r,q)}}for(v=0;v<j;v++)i=q[3*v],C=q[3*v+1],u=q[3*v+2],E=511/Math.sqrt(i*i+C*C+u*u),h=a.charCodeAt(c+5*j+v),k=a.charCodeAt(c+6*j+v),m=a.charCodeAt(c+7*j+v),s[f*v+5]=E*i+(h>>1^-(h&1)),s[f*v+6]=E*C+(k>>1^-(k&1)),s[f*v+7]=E*u+(m>>1^-(m&1));g(d,e,s,l,void 0,b)};
THREE.UTF8Loader.prototype.downloadMesh=function(a,b,c,d,e){function g(a){for(;i<c.length;){var g=c[i],k=g.indexRange;if(k){k=k[0]+3*k[1];if(a.responseText.length<k)break;f.decompressMesh(a.responseText,g,d,b,i,e)}else{k=g.codeRange;k=k[0]+k[1];if(a.responseText.length<k)break;f.decompressMesh2(a.responseText,g,d,b,i,e)}++i}}var f=this,i=0;getHttpRequest(a,function(a,b){(200===a.status||0===a.status)&&g(a,b)},g)};
THREE.UTF8Loader.prototype.downloadMeshes=function(a,b,c,d){for(var e in b)this.downloadMesh(a+e,e,b[e],c,d)};
THREE.UTF8Loader.prototype.createMeshCallback=function(a,b,c){var d=0,e=0,g={},f={},i={},h=b.urls,j;for(j in h)g[j]=h[j].length,f[j]=0,e++,i[j]=new THREE.Object3D;var k=new THREE.Object3D,m=new THREE.MTLLoader.MaterialCreator(a,b.options);m.setMaterials(b.materials);m.preload();var l=new THREE.UTF8Loader.GeometryCreator,q=new THREE.UTF8Loader.BufferGeometryCreator;return function(a,h,j,t,x,v){h=(void 0!==b.options.useBuffers?b.options.useBuffers:1)?q.create(j,t):l.create(j,t);v=m.create(v.material);
v=new THREE.Mesh(h,v);i[a].add(v);f[a]++;f[a]===g[a]&&(d++,k.add(i[a]),d===e&&c(k))}};THREE.UTF8Loader.prototype.downloadModel=function(a,b,c,d){b=this.createMeshCallback(b,c,d);this.downloadMeshes(a,c.urls,c.decodeParams,b)};
THREE.UTF8Loader.prototype.downloadModelJson=function(a,b,c){getJsonRequest(a,function(d){d.decodeParams||(d.decodeParams=b&&b.decodeParams?b.decodeParams:DEFAULT_DECODE_PARAMS);d.options=b;var e=a.substr(0,a.lastIndexOf("/")+1),g=e;b&&b.geometryBase&&(e=b.geometryBase,"/"!==e.charAt(e.length-1)&&(e+="/"));b&&b.materialBase&&(g=b.materialBase,"/"!==g.charAt(g.length-1)&&(g+="/"));this.downloadModel(e,g,d,c)}.bind(this))};
function getHttpRequest(a,b,c){var d=new XMLHttpRequest;addListeners(d,{load:function(a){b(d,a)},progress:function(a){c(d,a)}});d.open("GET",a,!0);d.send(null)}function getJsonRequest(a,b){getHttpRequest(a,function(a){b(JSON.parse(a.responseText))},function(){})}function addListeners(a,b){for(var c in b)a.addEventListener(c,b[c])};THREE.VTKLoader=function(){THREE.EventDispatcher.call(this)};
THREE.VTKLoader.prototype={constructor:THREE.VTKLoader,load:function(a,b){var c=this,d=new XMLHttpRequest;d.addEventListener("load",function(a){a=c.parse(a.target.responseText);c.dispatchEvent({type:"load",content:a});b&&b(a)},!1);d.addEventListener("progress",function(a){c.dispatchEvent({type:"progress",loaded:a.loaded,total:a.total})},!1);d.addEventListener("error",function(){c.dispatchEvent({type:"error",message:"Couldn't load URL ["+a+"]"})},!1);d.open("GET",a,!0);d.send(null)},parse:function(a){var b=
new THREE.Geometry,c,d;for(c=/([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)[ ]+([\+|\-]?[\d]+[\.][\d|\-|e]+)/g;null!=(d=c.exec(a));){var e=parseFloat(d[1]),g=parseFloat(d[2]);d=parseFloat(d[3]);b.vertices.push(new THREE.Vector3(e,g,d))}for(c=/3[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=(d=c.exec(a));)e=parseInt(d[1]),g=parseInt(d[2]),d=parseInt(d[3]),b.faces.push(new THREE.Face3(e,g,d));for(c=/4[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)[ ]+([\d]+)/g;null!=(d=c.exec(a));){var e=parseInt(d[1]),
g=parseInt(d[2]),f=parseInt(d[3]);d=parseInt(d[4]);b.faces.push(new THREE.Face4(e,g,f,d))}b.computeCentroids();b.computeFaceNormals();b.computeVertexNormals();b.computeBoundingSphere();return b}};var LZMA=LZMA||{};LZMA.OutWindow=function(){this._windowSize=0};LZMA.OutWindow.prototype.create=function(a){if(!this._buffer||this._windowSize!==a)this._buffer=[];this._windowSize=a;this._streamPos=this._pos=0};LZMA.OutWindow.prototype.flush=function(){var a=this._pos-this._streamPos;if(0!==a){for(;a--;)this._stream.writeByte(this._buffer[this._streamPos++]);this._pos>=this._windowSize&&(this._pos=0);this._streamPos=this._pos}};
LZMA.OutWindow.prototype.releaseStream=function(){this.flush();this._stream=null};LZMA.OutWindow.prototype.setStream=function(a){this.releaseStream();this._stream=a};LZMA.OutWindow.prototype.init=function(a){a||(this._pos=this._streamPos=0)};LZMA.OutWindow.prototype.copyBlock=function(a,b){var c=this._pos-a-1;for(0>c&&(c+=this._windowSize);b--;)c>=this._windowSize&&(c=0),this._buffer[this._pos++]=this._buffer[c++],this._pos>=this._windowSize&&this.flush()};
LZMA.OutWindow.prototype.putByte=function(a){this._buffer[this._pos++]=a;this._pos>=this._windowSize&&this.flush()};LZMA.OutWindow.prototype.getByte=function(a){a=this._pos-a-1;0>a&&(a+=this._windowSize);return this._buffer[a]};LZMA.RangeDecoder=function(){};LZMA.RangeDecoder.prototype.setStream=function(a){this._stream=a};LZMA.RangeDecoder.prototype.releaseStream=function(){this._stream=null};
LZMA.RangeDecoder.prototype.init=function(){var a=5;this._code=0;for(this._range=-1;a--;)this._code=this._code<<8|this._stream.readByte()};LZMA.RangeDecoder.prototype.decodeDirectBits=function(a){for(var b=0,c;a--;)this._range>>>=1,c=this._code-this._range>>>31,this._code-=this._range&c-1,b=b<<1|1-c,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return b};
LZMA.RangeDecoder.prototype.decodeBit=function(a,b){var c=a[b],d=(this._range>>>11)*c;if((this._code^2147483648)<(d^2147483648))return this._range=d,a[b]+=2048-c>>>5,0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8),0;this._range-=d;this._code-=d;a[b]-=c>>>5;0===(this._range&4278190080)&&(this._code=this._code<<8|this._stream.readByte(),this._range<<=8);return 1};LZMA.initBitModels=function(a,b){for(;b--;)a[b]=1024};
LZMA.BitTreeDecoder=function(a){this._models=[];this._numBitLevels=a};LZMA.BitTreeDecoder.prototype.init=function(){LZMA.initBitModels(this._models,1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.decode=function(a){for(var b=1,c=this._numBitLevels;c--;)b=b<<1|a.decodeBit(this._models,b);return b-(1<<this._numBitLevels)};LZMA.BitTreeDecoder.prototype.reverseDecode=function(a){for(var b=1,c=0,d=0,e;d<this._numBitLevels;++d)e=a.decodeBit(this._models,b),b=b<<1|e,c|=e<<d;return c};
LZMA.reverseDecode2=function(a,b,c,d){for(var e=1,g=0,f=0,i;f<d;++f)i=c.decodeBit(a,b+e),e=e<<1|i,g|=i<<f;return g};LZMA.LenDecoder=function(){this._choice=[];this._lowCoder=[];this._midCoder=[];this._highCoder=new LZMA.BitTreeDecoder(8);this._numPosStates=0};LZMA.LenDecoder.prototype.create=function(a){for(;this._numPosStates<a;++this._numPosStates)this._lowCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3),this._midCoder[this._numPosStates]=new LZMA.BitTreeDecoder(3)};
LZMA.LenDecoder.prototype.init=function(){var a=this._numPosStates;for(LZMA.initBitModels(this._choice,2);a--;)this._lowCoder[a].init(),this._midCoder[a].init();this._highCoder.init()};LZMA.LenDecoder.prototype.decode=function(a,b){return 0===a.decodeBit(this._choice,0)?this._lowCoder[b].decode(a):0===a.decodeBit(this._choice,1)?8+this._midCoder[b].decode(a):16+this._highCoder.decode(a)};LZMA.Decoder2=function(){this._decoders=[]};
LZMA.Decoder2.prototype.init=function(){LZMA.initBitModels(this._decoders,768)};LZMA.Decoder2.prototype.decodeNormal=function(a){var b=1;do b=b<<1|a.decodeBit(this._decoders,b);while(256>b);return b&255};LZMA.Decoder2.prototype.decodeWithMatchByte=function(a,b){var c=1,d,e;do if(d=b>>7&1,b<<=1,e=a.decodeBit(this._decoders,(1+d<<8)+c),c=c<<1|e,d!==e){for(;256>c;)c=c<<1|a.decodeBit(this._decoders,c);break}while(256>c);return c&255};LZMA.LiteralDecoder=function(){};
LZMA.LiteralDecoder.prototype.create=function(a,b){var c;if(!this._coders||!(this._numPrevBits===b&&this._numPosBits===a)){this._numPosBits=a;this._posMask=(1<<a)-1;this._numPrevBits=b;this._coders=[];for(c=1<<this._numPrevBits+this._numPosBits;c--;)this._coders[c]=new LZMA.Decoder2}};LZMA.LiteralDecoder.prototype.init=function(){for(var a=1<<this._numPrevBits+this._numPosBits;a--;)this._coders[a].init()};
LZMA.LiteralDecoder.prototype.getDecoder=function(a,b){return this._coders[((a&this._posMask)<<this._numPrevBits)+((b&255)>>>8-this._numPrevBits)]};
LZMA.Decoder=function(){this._outWindow=new LZMA.OutWindow;this._rangeDecoder=new LZMA.RangeDecoder;this._isMatchDecoders=[];this._isRepDecoders=[];this._isRepG0Decoders=[];this._isRepG1Decoders=[];this._isRepG2Decoders=[];this._isRep0LongDecoders=[];this._posSlotDecoder=[];this._posDecoders=[];this._posAlignDecoder=new LZMA.BitTreeDecoder(4);this._lenDecoder=new LZMA.LenDecoder;this._repLenDecoder=new LZMA.LenDecoder;this._literalDecoder=new LZMA.LiteralDecoder;this._dictionarySizeCheck=this._dictionarySize=
-1;this._posSlotDecoder[0]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[1]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[2]=new LZMA.BitTreeDecoder(6);this._posSlotDecoder[3]=new LZMA.BitTreeDecoder(6)};LZMA.Decoder.prototype.setDictionarySize=function(a){if(0>a)return!1;this._dictionarySize!==a&&(this._dictionarySize=a,this._dictionarySizeCheck=Math.max(this._dictionarySize,1),this._outWindow.create(Math.max(this._dictionarySizeCheck,4096)));return!0};
LZMA.Decoder.prototype.setLcLpPb=function(a,b,c){var d=1<<c;if(8<a||4<b||4<c)return!1;this._literalDecoder.create(b,a);this._lenDecoder.create(d);this._repLenDecoder.create(d);this._posStateMask=d-1;return!0};
LZMA.Decoder.prototype.init=function(){var a=4;this._outWindow.init(!1);LZMA.initBitModels(this._isMatchDecoders,192);LZMA.initBitModels(this._isRep0LongDecoders,192);LZMA.initBitModels(this._isRepDecoders,12);LZMA.initBitModels(this._isRepG0Decoders,12);LZMA.initBitModels(this._isRepG1Decoders,12);LZMA.initBitModels(this._isRepG2Decoders,12);LZMA.initBitModels(this._posDecoders,114);for(this._literalDecoder.init();a--;)this._posSlotDecoder[a].init();this._lenDecoder.init();this._repLenDecoder.init();
this._posAlignDecoder.init();this._rangeDecoder.init()};
LZMA.Decoder.prototype.decode=function(a,b,c){var d=0,e=0,g=0,f=0,i=0,h=0,j=0;this._rangeDecoder.setStream(a);this._outWindow.setStream(b);for(this.init();0>c||h<c;)if(a=h&this._posStateMask,0===this._rangeDecoder.decodeBit(this._isMatchDecoders,(d<<4)+a))j=this._literalDecoder.getDecoder(h++,j),j=7<=d?j.decodeWithMatchByte(this._rangeDecoder,this._outWindow.getByte(e)):j.decodeNormal(this._rangeDecoder),this._outWindow.putByte(j),d=4>d?0:d-(10>d?3:6);else{if(1===this._rangeDecoder.decodeBit(this._isRepDecoders,
d))j=0,0===this._rangeDecoder.decodeBit(this._isRepG0Decoders,d)?0===this._rangeDecoder.decodeBit(this._isRep0LongDecoders,(d<<4)+a)&&(d=7>d?9:11,j=1):(0===this._rangeDecoder.decodeBit(this._isRepG1Decoders,d)?b=g:(0===this._rangeDecoder.decodeBit(this._isRepG2Decoders,d)?b=f:(b=i,i=f),f=g),g=e,e=b),0===j&&(j=2+this._repLenDecoder.decode(this._rangeDecoder,a),d=7>d?8:11);else if(i=f,f=g,g=e,j=2+this._lenDecoder.decode(this._rangeDecoder,a),d=7>d?7:10,a=this._posSlotDecoder[5>=j?j-2:3].decode(this._rangeDecoder),
4<=a)if(b=(a>>1)-1,e=(2|a&1)<<b,14>a)e+=LZMA.reverseDecode2(this._posDecoders,e-a-1,this._rangeDecoder,b);else{if(e+=this._rangeDecoder.decodeDirectBits(b-4)<<4,e+=this._posAlignDecoder.reverseDecode(this._rangeDecoder),0>e){if(-1===e)break;return!1}}else e=a;if(e>=h||e>=this._dictionarySizeCheck)return!1;this._outWindow.copyBlock(e,j);h+=j;j=this._outWindow.getByte(0)}this._outWindow.flush();this._outWindow.releaseStream();this._rangeDecoder.releaseStream();return!0};
LZMA.Decoder.prototype.setDecoderProperties=function(a){var b,c;if(5>a.size)return!1;b=a.readByte();c=b%9;b=~~(b/9);if(!this.setLcLpPb(c,b%5,~~(b/5)))return!1;b=a.readByte();b|=a.readByte()<<8;b|=a.readByte()<<16;b+=16777216*a.readByte();return this.setDictionarySize(b)};LZMA.decompress=function(a,b,c,d){var e=new LZMA.Decoder;if(!e.setDecoderProperties(a))throw"Incorrect stream properties";if(!e.decode(b,c,d))throw"Error in data stream";return!0};var CTM=CTM||{};CTM.CompressionMethod={RAW:5718354,MG1:3229517,MG2:3295053};CTM.Flags={NORMALS:1};CTM.File=function(a){this.load(a)};CTM.File.prototype.load=function(a){this.header=new CTM.FileHeader(a);this.body=new CTM.FileBody(this.header);this.getReader().read(a,this.body)};
CTM.File.prototype.getReader=function(){var a;switch(this.header.compressionMethod){case CTM.CompressionMethod.RAW:a=new CTM.ReaderRAW;break;case CTM.CompressionMethod.MG1:a=new CTM.ReaderMG1;break;case CTM.CompressionMethod.MG2:a=new CTM.ReaderMG2}return a};
CTM.FileHeader=function(a){a.readInt32();this.fileFormat=a.readInt32();this.compressionMethod=a.readInt32();this.vertexCount=a.readInt32();this.triangleCount=a.readInt32();this.uvMapCount=a.readInt32();this.attrMapCount=a.readInt32();this.flags=a.readInt32();this.comment=a.readString()};CTM.FileHeader.prototype.hasNormals=function(){return this.flags&CTM.Flags.NORMALS};
CTM.FileBody=function(a){var b=3*a.triangleCount,c=3*a.vertexCount,d=a.hasNormals()?3*a.vertexCount:0,e=2*a.vertexCount,g=4*a.vertexCount,f=0,i=new ArrayBuffer(4*(b+c+d+e*a.uvMapCount+g*a.attrMapCount));this.indices=new Uint32Array(i,0,b);this.vertices=new Float32Array(i,4*b,c);a.hasNormals()&&(this.normals=new Float32Array(i,4*(b+c),d));if(a.uvMapCount){this.uvMaps=[];for(f=0;f<a.uvMapCount;++f)this.uvMaps[f]={uv:new Float32Array(i,4*(b+c+d+f*e),e)}}if(a.attrMapCount){this.attrMaps=[];for(f=0;f<
a.attrMapCount;++f)this.attrMaps[f]={attr:new Float32Array(i,4*(b+c+d+e*a.uvMapCount+f*g),g)}}};
CTM.FileMG2Header=function(a){a.readInt32();this.vertexPrecision=a.readFloat32();this.normalPrecision=a.readFloat32();this.lowerBoundx=a.readFloat32();this.lowerBoundy=a.readFloat32();this.lowerBoundz=a.readFloat32();this.higherBoundx=a.readFloat32();this.higherBoundy=a.readFloat32();this.higherBoundz=a.readFloat32();this.divx=a.readInt32();this.divy=a.readInt32();this.divz=a.readInt32();this.sizex=(this.higherBoundx-this.lowerBoundx)/this.divx;this.sizey=(this.higherBoundy-this.lowerBoundy)/this.divy;
this.sizez=(this.higherBoundz-this.lowerBoundz)/this.divz};CTM.ReaderRAW=function(){};CTM.ReaderRAW.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderRAW.prototype.readIndices=function(a,b){a.readInt32();a.readArrayInt32(b)};CTM.ReaderRAW.prototype.readVertices=function(a,b){a.readInt32();a.readArrayFloat32(b)};
CTM.ReaderRAW.prototype.readNormals=function(a,b){a.readInt32();a.readArrayFloat32(b)};CTM.ReaderRAW.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),b[c].filename=a.readString(),a.readArrayFloat32(b[c].uv)};CTM.ReaderRAW.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c)a.readInt32(),b[c].name=a.readString(),a.readArrayFloat32(b[c].attr)};CTM.ReaderMG1=function(){};
CTM.ReaderMG1.prototype.read=function(a,b){this.readIndices(a,b.indices);this.readVertices(a,b.vertices);b.normals&&this.readNormals(a,b.normals);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG1.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG1.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,1);LZMA.decompress(a,a,c,c.data.length)};CTM.ReaderMG1.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length)};
CTM.ReaderMG1.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG1.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();a.readInt32();var d=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,d,d.data.length)}};CTM.ReaderMG2=function(){};
CTM.ReaderMG2.prototype.read=function(a,b){this.MG2Header=new CTM.FileMG2Header(a);this.readVertices(a,b.vertices);this.readIndices(a,b.indices);b.normals&&this.readNormals(a,b);b.uvMaps&&this.readUVMaps(a,b.uvMaps);b.attrMaps&&this.readAttrMaps(a,b.attrMaps)};CTM.ReaderMG2.prototype.readVertices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);c=this.readGridIndices(a,b);CTM.restoreVertices(b,this.MG2Header,c,this.MG2Header.vertexPrecision)};
CTM.ReaderMG2.prototype.readGridIndices=function(a,b){a.readInt32();a.readInt32();var c=new Uint32Array(b.length/3),d=new CTM.InterleavedStream(c,1);LZMA.decompress(a,a,d,d.data.length);CTM.restoreGridIndices(c,c.length);return c};CTM.ReaderMG2.prototype.readIndices=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b,3);LZMA.decompress(a,a,c,c.data.length);CTM.restoreIndices(b,b.length)};
CTM.ReaderMG2.prototype.readNormals=function(a,b){a.readInt32();a.readInt32();var c=new CTM.InterleavedStream(b.normals,3);LZMA.decompress(a,a,c,c.data.length);c=CTM.calcSmoothNormals(b.indices,b.vertices);CTM.restoreNormals(b.normals,c,this.MG2Header.normalPrecision)};
CTM.ReaderMG2.prototype.readUVMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();b[c].filename=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].uv,2);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].uv,2,d)}};
CTM.ReaderMG2.prototype.readAttrMaps=function(a,b){for(var c=0;c<b.length;++c){a.readInt32();b[c].name=a.readString();var d=a.readFloat32();a.readInt32();var e=new CTM.InterleavedStream(b[c].attr,4);LZMA.decompress(a,a,e,e.data.length);CTM.restoreMap(b[c].attr,4,d)}};CTM.restoreIndices=function(a,b){var c=3;for(0<b&&(a[2]+=a[0]);c<b;c+=3)a[c]+=a[c-3],a[c+1]=a[c]===a[c-3]?a[c+1]+a[c-2]:a[c+1]+a[c],a[c+2]+=a[c]};CTM.restoreGridIndices=function(a,b){for(var c=1;c<b;++c)a[c]+=a[c-1]};
CTM.restoreVertices=function(a,b,c,d){for(var e,g,f,i,h,j=new Uint32Array(a.buffer,a.byteOffset,a.length),k=b.divx,m=k*b.divy,l=2147483647,q=0,p=0,r=0,s=c.length;p<s;r+=3)f=e=c[p++],h=~~(f/m),f-=~~(h*m),i=~~(f/k),f-=~~(i*k),g=j[r],e===l&&(g+=q),a[r]=b.lowerBoundx+f*b.sizex+d*g,a[r+1]=b.lowerBoundy+i*b.sizey+d*j[r+1],a[r+2]=b.lowerBoundz+h*b.sizez+d*j[r+2],l=e,q=g};
CTM.restoreNormals=function(a,b,c){for(var d,e,g,f,i,h,j=new Uint32Array(a.buffer,a.byteOffset,a.length),k=0,m=a.length;k<m;k+=3)d=j[k]*c,e=j[k+1],0===e?(a[k]=b[k]*d,a[k+1]=b[k+1]*d,a[k+2]=b[k+2]*d):(g=4>=e?1.5707963267948966*(j[k+2]-2):1.5707963267948966*(4*j[k+2]/e-2),e*=1.5707963267948966*c,f=d*Math.sin(e),i=f*Math.cos(g),g=f*Math.sin(g),d*=Math.cos(e),f=b[k+1],e=b[k]-b[k+2],h=Math.sqrt(2*f*f+e*e),1E-20<h&&(e/=h,f/=h),a[k]=b[k]*d+(b[k+1]*f-b[k+2]*e)*g-f*i,a[k+1]=b[k+1]*d-(b[k+2]+b[k])*f*g+e*i,
a[k+2]=b[k+2]*d+(b[k]*e+b[k+1]*f)*g+f*i)};CTM.restoreMap=function(a,b,c){for(var d,e,g=new Uint32Array(a.buffer,a.byteOffset,a.length),f=0,i,h=a.length;f<b;++f){d=0;for(i=f;i<h;i+=b)e=g[i],d+=e&1?-(e+1>>1):e>>1,a[i]=d*c}};
CTM.calcSmoothNormals=function(a,b){var c=new Float32Array(b.length),d,e,g,f,i,h,j,k,m,l,q,p;q=0;for(p=a.length;q<p;)d=3*a[q++],e=3*a[q++],g=3*a[q++],h=b[e]-b[d],k=b[g]-b[d],j=b[e+1]-b[d+1],m=b[g+1]-b[d+1],i=b[e+2]-b[d+2],l=b[g+2]-b[d+2],f=j*l-i*m,i=i*k-h*l,h=h*m-j*k,j=Math.sqrt(f*f+i*i+h*h),1E-10<j&&(f/=j,i/=j,h/=j),c[d]+=f,c[d+1]+=i,c[d+2]+=h,c[e]+=f,c[e+1]+=i,c[e+2]+=h,c[g]+=f,c[g+1]+=i,c[g+2]+=h;q=0;for(p=c.length;q<p;q+=3)j=Math.sqrt(c[q]*c[q]+c[q+1]*c[q+1]+c[q+2]*c[q+2]),1E-10<j&&(c[q]/=j,c[q+
1]/=j,c[q+2]/=j);return c};CTM.isLittleEndian=function(){var a=new ArrayBuffer(2),b=new Uint8Array(a),a=new Uint16Array(a);b[0]=1;return 1===a[0]}();CTM.InterleavedStream=function(a,b){this.data=new Uint8Array(a.buffer,a.byteOffset,a.byteLength);this.offset=CTM.isLittleEndian?3:0;this.count=4*b;this.len=this.data.length};
CTM.InterleavedStream.prototype.writeByte=function(a){this.data[this.offset]=a;this.offset+=this.count;this.offset>=this.len&&(this.offset-=this.len-4,this.offset>=this.count&&(this.offset-=this.count+(CTM.isLittleEndian?1:-1)))};CTM.Stream=function(a){this.data=a;this.offset=0};CTM.Stream.prototype.TWO_POW_MINUS23=Math.pow(2,-23);CTM.Stream.prototype.TWO_POW_MINUS126=Math.pow(2,-126);CTM.Stream.prototype.readByte=function(){return this.data.charCodeAt(this.offset++)&255};
CTM.Stream.prototype.readInt32=function(){var a=this.readByte(),a=a|this.readByte()<<8,a=a|this.readByte()<<16;return a|this.readByte()<<24};CTM.Stream.prototype.readFloat32=function(){var a=this.readByte(),a=a+(this.readByte()<<8),b=this.readByte(),c=this.readByte(),a=a+((b&127)<<16),b=(c&127)<<1|(b&128)>>>7,c=c&128?-1:1;return 255===b?0!==a?NaN:Infinity*c:0<b?c*(1+a*this.TWO_POW_MINUS23)*Math.pow(2,b-127):0!==a?c*a*this.TWO_POW_MINUS126:0*c};
CTM.Stream.prototype.readString=function(){var a=this.readInt32();this.offset+=a;return this.data.substr(this.offset-a,a)};CTM.Stream.prototype.readArrayInt32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readInt32();return a};CTM.Stream.prototype.readArrayFloat32=function(a){for(var b=0,c=a.length;b<c;)a[b++]=this.readFloat32();return a};THREE.CTMLoader=function(a){THREE.Loader.call(this,a)};THREE.CTMLoader.prototype=Object.create(THREE.Loader.prototype);
THREE.CTMLoader.prototype.loadParts=function(a,b,c){var d=this,e=new XMLHttpRequest,g=c.basePath?c.basePath:this.extractUrlBase(a);e.onreadystatechange=function(){if(4===e.readyState&&(200===e.status||0===e.status)){for(var a=JSON.parse(e.responseText),i=[],h=[],j=0,k=0;k<a.materials.length;k++)i[k]=THREE.Loader.prototype.createMaterial(a.materials[k],g);d.load(g+a.data,function(c){j+=1;h.push(c);j===a.offsets.length&&b(h,i)},{useWorker:c.useWorker,useBuffers:c.useBuffers,offsets:a.offsets})}};e.open("GET",
a,!0);e.overrideMimeType&&e.overrideMimeType("text/plain; charset=x-user-defined");e.setRequestHeader("Content-Type","text/plain");e.send(null)};
THREE.CTMLoader.prototype.load=function(a,b,c){var d=this,e=void 0!==c.offsets?c.offsets:[0],g=void 0!==c.useBuffers?c.useBuffers:!0,f=new XMLHttpRequest;f.onreadystatechange=function(){if(4===f.readyState)if(200===f.status||0===f.status){var i=f.responseText;if(c.useWorker){var h=new Worker("js/loaders/ctm/CTMWorker.js");h.onmessage=function(a){for(var a=a.data,c=0;c<a.length;c++){var e=a[c];g?d.createModelBuffers(e,b):d.createModelClassic(e,b)}};h.postMessage({data:i,offsets:e})}else for(h=0;h<
e.length;h++){var j=new CTM.Stream(i);j.offset=e[h];j=new CTM.File(j);g?d.createModelBuffers(j,b):d.createModelClassic(j,b)}}else console.error("Couldn't load ["+a+"] ["+f.status+"]");else 3!==f.readyState&&2===f.readyState&&f.getResponseHeader("Content-Length")};f.overrideMimeType("text/plain; charset=x-user-defined");f.open("GET",a,!0);f.send(null)};
THREE.CTMLoader.prototype.createModelBuffers=function(a,b){var c=function(){this.materials=[];THREE.BufferGeometry.call(this);var b=a.body.indices,c=a.body.vertices,g=a.body.normals,f,i;void 0!==a.body.uvMaps&&0<a.body.uvMaps.length&&(f=a.body.uvMaps[0].uv);void 0!==a.body.attrMaps&&(0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name)&&(i=a.body.attrMaps[0].attr);var h=new Uint32Array(b.length),j=new Float32Array(c.length),k,m,l;g&&(k=new Float32Array(g.length));f&&(m=new Float32Array(f.length));
i&&(l=new Float32Array(i.length));for(var q={},p=0,r=function(a){if(void 0===q[a]){q[a]=p;var b=3*a,d=3*a+1,h=3*a+2,r=3*p,s=3*p+1,t=3*p+2;j[r]=c[b];j[s]=c[d];j[t]=c[h];g&&(k[r]=g[b],k[s]=g[d],k[t]=g[h]);f&&(m[2*p]=f[2*a],m[2*p+1]=f[2*a+1]);i&&(l[4*p]=i[4*a],l[4*p+1]=i[4*a+1],l[4*p+2]=i[4*a+2],l[4*p+3]=i[4*a+3]);p+=1}},s,t,x,v=0;v<b.length;v+=3)s=b[v],t=b[v+1],x=b[v+2],r(s),r(t),r(x),h[v]=q[s],h[v+1]=q[t],h[v+2]=q[x];b=h;c=j;g&&(g=k);f&&(f=m);i&&(i=l);this.offsets=[];h=b;r=0;t=c.length;x=0;s=t;for(v=
0;v<h.length;){for(var w=0;3>w;++w){var y=h[v++];y<t&&(t=y);y>x&&(x=y)}if(65535<x-t){v-=3;for(t=r;t<v;++t)h[t]-=s;this.offsets.push({start:r,count:v-r,index:s});r=v;t=c.length;x=0}s=t}for(t=r;t<v;++t)h[t]-=s;this.offsets.push({start:r,count:v-r,index:s});b=new Uint16Array(b);v=this.attributes;v.index={itemSize:1,array:b,numItems:b.length};v.position={itemSize:3,array:c,numItems:c.length};void 0!==g&&(v.normal={itemSize:3,array:g,numItems:g.length});void 0!==f&&(v.uv={itemSize:2,array:f,numItems:f.length});
void 0!==i&&(v.color={itemSize:4,array:i,numItems:i.length})};c.prototype=Object.create(THREE.BufferGeometry.prototype);c=new c;void 0===c.attributes.normal&&c.computeVertexNormals();b(c)};
THREE.CTMLoader.prototype.createModelClassic=function(a,b){var c=function(){this.materials=[];THREE.Geometry.call(this);var b=[],c=[],g=[],f=a.body.vertices,i,h,j,k,m=f.length;for(k=0;k<m;k+=3)i=f[k],h=f[k+1],j=f[k+2],this.vertices.push(new THREE.Vector3(i,h,j));if(void 0!==a.body.normals){f=a.body.normals;m=f.length;for(k=0;k<m;k+=3)i=f[k],h=f[k+1],j=f[k+2],b.push(i,h,j)}if(void 0!==a.body.uvMaps&&0<a.body.uvMaps.length){f=a.body.uvMaps[0].uv;k=f.length;for(j=0;j<k;j+=2)i=f[j],h=f[j+1],c.push(i,
h)}if(void 0!==a.body.attrMaps&&0<a.body.attrMaps.length&&"Color"===a.body.attrMaps[0].name){f=a.body.attrMaps[0].attr;m=f.length;for(k=0;k<m;k+=4){i=f[k];h=f[k+1];j=f[k+2];var l=new THREE.Color;l.setRGB(i,h,j);g.push(l)}}f=0<b.length?!0:!1;i=0<c.length?!0:!1;h=0<g.length?!0:!1;j=a.body.indices;var q,p,r,s,t,x,v,m=j.length;for(k=0;k<m;k+=3){q=j[k];p=j[k+1];l=j[k+2];if(f){r=q;x=p;v=l;var w=b[3*p],y=b[3*p+1],D=b[3*p+2];t=b[3*l];var C=b[3*l+1],u=b[3*l+2];s=new THREE.Vector3(b[3*q],b[3*q+1],b[3*q+2]);
w=new THREE.Vector3(w,y,D);t=new THREE.Vector3(t,C,u);r=new THREE.Face3(r,x,v,[s,w,t],null,0)}else r=new THREE.Face3(q,p,l,null,null,0);this.faces.push(r);h&&(r.vertexColors[0]=g[q],r.vertexColors[1]=g[p],r.vertexColors[2]=g[l]);i&&(r=c[2*q],q=c[2*q+1],s=c[2*p],t=c[2*p+1],x=c[2*l],v=c[2*l+1],l=this.faceVertexUvs[0],p=s,s=t,t=[],t.push(new THREE.Vector2(r,q)),t.push(new THREE.Vector2(p,s)),t.push(new THREE.Vector2(x,v)),l.push(t))}this.computeCentroids();this.computeFaceNormals()};c.prototype=Object.create(THREE.Geometry.prototype);
b(new c)};THREE.EffectComposer=function(a,b){this.renderer=a;void 0===b&&(b=new THREE.WebGLRenderTarget(window.innerWidth||1,window.innerHeight||1,{minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1}));this.renderTarget1=b;this.renderTarget2=b.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;this.passes=[];void 0===THREE.CopyShader&&console.error("THREE.EffectComposer relies on THREE.CopyShader");this.copyPass=new THREE.ShaderPass(THREE.CopyShader)};
THREE.EffectComposer.prototype={swapBuffers:function(){var a=this.readBuffer;this.readBuffer=this.writeBuffer;this.writeBuffer=a},addPass:function(a){this.passes.push(a)},insertPass:function(a,b){this.passes.splice(b,0,a)},render:function(a){this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2;var b=!1,c,d,e=this.passes.length;for(d=0;d<e;d++)if(c=this.passes[d],c.enabled){c.render(this.renderer,this.writeBuffer,this.readBuffer,a,b);if(c.needsSwap){if(b){var g=this.renderer.context;
g.stencilFunc(g.NOTEQUAL,1,4294967295);this.copyPass.render(this.renderer,this.writeBuffer,this.readBuffer,a);g.stencilFunc(g.EQUAL,1,4294967295)}this.swapBuffers()}c instanceof THREE.MaskPass?b=!0:c instanceof THREE.ClearMaskPass&&(b=!1)}},reset:function(a){void 0===a&&(a=this.renderTarget1.clone(),a.width=window.innerWidth,a.height=window.innerHeight);this.renderTarget1=a;this.renderTarget2=a.clone();this.writeBuffer=this.renderTarget1;this.readBuffer=this.renderTarget2},setSize:function(a,b){var c=
this.renderTarget1.clone();c.width=a;c.height=b;this.reset(c)}};THREE.EffectComposer.camera=new THREE.OrthographicCamera(-1,1,1,-1,0,1);THREE.EffectComposer.quad=new THREE.Mesh(new THREE.PlaneGeometry(2,2),null);THREE.EffectComposer.scene=new THREE.Scene;THREE.EffectComposer.scene.add(THREE.EffectComposer.quad);THREE.BloomPass=function(a,b,c,d){var a=void 0!==a?a:1,b=void 0!==b?b:25,c=void 0!==c?c:4,d=void 0!==d?d:256,e={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat};this.renderTargetX=new THREE.WebGLRenderTarget(d,d,e);this.renderTargetY=new THREE.WebGLRenderTarget(d,d,e);void 0===THREE.CopyShader&&console.error("THREE.BloomPass relies on THREE.CopyShader");d=THREE.CopyShader;this.copyUniforms=THREE.UniformsUtils.clone(d.uniforms);this.copyUniforms.opacity.value=a;this.materialCopy=
new THREE.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader,blending:THREE.AdditiveBlending,transparent:!0});void 0===THREE.ConvolutionShader&&console.error("THREE.BloomPass relies on THREE.ConvolutionShader");a=THREE.ConvolutionShader;this.convolutionUniforms=THREE.UniformsUtils.clone(a.uniforms);this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurx;this.convolutionUniforms.cKernel.value=THREE.ConvolutionShader.buildKernel(c);this.materialConvolution=
new THREE.ShaderMaterial({uniforms:this.convolutionUniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader,defines:{KERNEL_SIZE_FLOAT:b.toFixed(1),KERNEL_SIZE_INT:b.toFixed(0)}});this.enabled=!0;this.clear=this.needsSwap=!1};
THREE.BloomPass.prototype={render:function(a,b,c,d,e){e&&a.context.disable(a.context.STENCIL_TEST);THREE.EffectComposer.quad.material=this.materialConvolution;this.convolutionUniforms.tDiffuse.value=c;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurX;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTargetX,!0);this.convolutionUniforms.tDiffuse.value=this.renderTargetX;this.convolutionUniforms.uImageIncrement.value=THREE.BloomPass.blurY;a.render(THREE.EffectComposer.scene,
THREE.EffectComposer.camera,this.renderTargetY,!0);THREE.EffectComposer.quad.material=this.materialCopy;this.copyUniforms.tDiffuse.value=this.renderTargetY;e&&a.context.enable(a.context.STENCIL_TEST);a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c,this.clear)}};THREE.BloomPass.blurX=new THREE.Vector2(0.001953125,0);THREE.BloomPass.blurY=new THREE.Vector2(0,0.001953125);THREE.DotScreenPass=function(a,b,c){void 0===THREE.DotScreenShader&&console.error("THREE.DotScreenPass relies on THREE.DotScreenShader");var d=THREE.DotScreenShader;this.uniforms=THREE.UniformsUtils.clone(d.uniforms);void 0!==a&&this.uniforms.center.value.copy(a);void 0!==b&&(this.uniforms.angle.value=b);void 0!==c&&(this.uniforms.scale.value=c);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:d.vertexShader,fragmentShader:d.fragmentShader});this.enabled=!0;this.renderToScreen=
!1;this.needsSwap=!0};THREE.DotScreenPass.prototype={render:function(a,b,c){this.uniforms.tDiffuse.value=c;this.uniforms.tSize.value.set(c.width,c.height);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.FilmPass=function(a,b,c,d){void 0===THREE.FilmShader&&console.error("THREE.FilmPass relies on THREE.FilmShader");var e=THREE.FilmShader;this.uniforms=THREE.UniformsUtils.clone(e.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:e.vertexShader,fragmentShader:e.fragmentShader});void 0!==d&&(this.uniforms.grayscale.value=d);void 0!==a&&(this.uniforms.nIntensity.value=a);void 0!==b&&(this.uniforms.sIntensity.value=b);void 0!==c&&(this.uniforms.sCount.value=c);
this.enabled=!0;this.renderToScreen=!1;this.needsSwap=!0};THREE.FilmPass.prototype={render:function(a,b,c,d){this.uniforms.tDiffuse.value=c;this.uniforms.time.value+=d;THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,!1)}};THREE.MaskPass=function(a,b){this.scene=a;this.camera=b;this.clear=this.enabled=!0;this.inverse=this.needsSwap=!1};
THREE.MaskPass.prototype={render:function(a,b,c){var d=a.context;d.colorMask(!1,!1,!1,!1);d.depthMask(!1);var e,g;this.inverse?(e=0,g=1):(e=1,g=0);d.enable(d.STENCIL_TEST);d.stencilOp(d.REPLACE,d.REPLACE,d.REPLACE);d.stencilFunc(d.ALWAYS,e,4294967295);d.clearStencil(g);a.render(this.scene,this.camera,c,this.clear);a.render(this.scene,this.camera,b,this.clear);d.colorMask(!0,!0,!0,!0);d.depthMask(!0);d.stencilFunc(d.EQUAL,1,4294967295);d.stencilOp(d.KEEP,d.KEEP,d.KEEP)}};
THREE.ClearMaskPass=function(){this.enabled=!0};THREE.ClearMaskPass.prototype={render:function(a){a=a.context;a.disable(a.STENCIL_TEST)}};THREE.RenderPass=function(a,b,c,d,e){this.scene=a;this.camera=b;this.overrideMaterial=c;this.clearColor=d;this.clearAlpha=void 0!==e?e:1;this.oldClearColor=new THREE.Color;this.oldClearAlpha=1;this.clear=this.enabled=!0;this.needsSwap=!1};
THREE.RenderPass.prototype={render:function(a,b,c){this.scene.overrideMaterial=this.overrideMaterial;this.clearColor&&(this.oldClearColor.copy(a.getClearColor()),this.oldClearAlpha=a.getClearAlpha(),a.setClearColor(this.clearColor,this.clearAlpha));a.render(this.scene,this.camera,c,this.clear);this.clearColor&&a.setClearColor(this.oldClearColor,this.oldClearAlpha);this.scene.overrideMaterial=null}};THREE.SavePass=function(a){void 0===THREE.CopyShader&&console.error("THREE.SavePass relies on THREE.CopyShader");var b=THREE.CopyShader;this.textureID="tDiffuse";this.uniforms=THREE.UniformsUtils.clone(b.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:b.vertexShader,fragmentShader:b.fragmentShader});this.renderTarget=a;void 0===this.renderTarget&&(this.renderTargetParameters={minFilter:THREE.LinearFilter,magFilter:THREE.LinearFilter,format:THREE.RGBFormat,stencilBuffer:!1},
this.renderTarget=new THREE.WebGLRenderTarget(window.innerWidth,window.innerHeight,this.renderTargetParameters));this.enabled=!0;this.clear=this.needsSwap=!1};THREE.SavePass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,this.renderTarget,this.clear)}};THREE.ShaderPass=function(a,b){this.textureID=void 0!==b?b:"tDiffuse";this.uniforms=THREE.UniformsUtils.clone(a.uniforms);this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:a.vertexShader,fragmentShader:a.fragmentShader});this.renderToScreen=!1;this.needsSwap=this.enabled=!0;this.clear=!1};
THREE.ShaderPass.prototype={render:function(a,b,c){this.uniforms[this.textureID]&&(this.uniforms[this.textureID].value=c);THREE.EffectComposer.quad.material=this.material;this.renderToScreen?a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera):a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,b,this.clear)}};THREE.TexturePass=function(a,b){void 0===THREE.CopyShader&&console.error("THREE.TexturePass relies on THREE.CopyShader");var c=THREE.CopyShader;this.uniforms=THREE.UniformsUtils.clone(c.uniforms);this.uniforms.opacity.value=void 0!==b?b:1;this.uniforms.tDiffuse.value=a;this.material=new THREE.ShaderMaterial({uniforms:this.uniforms,vertexShader:c.vertexShader,fragmentShader:c.fragmentShader});this.enabled=!0;this.needsSwap=!1};
THREE.TexturePass.prototype={render:function(a,b,c){THREE.EffectComposer.quad.material=this.material;a.render(THREE.EffectComposer.scene,THREE.EffectComposer.camera,c)}};THREE.CSS3DObject=function(a){THREE.Object3D.call(this);this.element=a;this.element.style.position="absolute";this.element.style.WebkitTransformStyle="preserve-3d";this.element.style.MozTransformStyle="preserve-3d";this.element.style.oTransformStyle="preserve-3d";this.element.style.transformStyle="preserve-3d"};THREE.CSS3DObject.prototype=Object.create(THREE.Object3D.prototype);THREE.CSS3DSprite=function(a){THREE.CSS3DObject.call(this,a)};THREE.CSS3DSprite.prototype=Object.create(THREE.CSS3DObject.prototype);
THREE.CSS3DRenderer=function(){console.log("THREE.CSS3DRenderer",THREE.REVISION);var a,b,c,d,e=new THREE.Projector,g=new THREE.Matrix4;this.domElement=document.createElement("div");this.domElement.style.overflow="hidden";this.domElement.style.WebkitTransformStyle="preserve-3d";this.domElement.style.WebkitPerspectiveOrigin="50% 50%";this.domElement.style.MozTransformStyle="preserve-3d";this.domElement.style.MozPerspectiveOrigin="50% 50%";this.domElement.style.oTransformStyle="preserve-3d";this.domElement.style.oPerspectiveOrigin=
"50% 50%";this.domElement.style.transformStyle="preserve-3d";this.domElement.style.perspectiveOrigin="50% 50%";this.cameraElement=document.createElement("div");this.cameraElement.style.WebkitTransformStyle="preserve-3d";this.cameraElement.style.MozTransformStyle="preserve-3d";this.cameraElement.style.oTransformStyle="preserve-3d";this.cameraElement.style.transformStyle="preserve-3d";this.domElement.appendChild(this.cameraElement);this.setSize=function(e,f){a=e;b=f;c=a/2;d=b/2;this.domElement.style.width=
e+"px";this.domElement.style.height=f+"px";this.cameraElement.style.width=e+"px";this.cameraElement.style.height=f+"px"};var f=function(a){return 1E-6>Math.abs(a)?0:a},i=function(a){a=a.elements;return"translate3d(-50%,-50%,0) matrix3d("+f(a[0])+","+f(a[1])+","+f(a[2])+","+f(a[3])+","+f(-a[4])+","+f(-a[5])+","+f(-a[6])+","+f(-a[7])+","+f(a[8])+","+f(a[9])+","+f(a[10])+","+f(a[11])+","+f(a[12])+","+f(a[13])+","+f(a[14])+","+f(a[15])+")"};this.render=function(a,j){var k=0.5/Math.tan(THREE.Math.degToRad(0.5*
j.fov))*b;this.domElement.style.WebkitPerspective=k+"px";this.domElement.style.MozPerspective=k+"px";this.domElement.style.oPerspective=k+"px";this.domElement.style.perspective=k+"px";var m=e.projectScene(a,j,!1).objects,k="translate3d(0,0,"+k+"px)",l;l=j.matrixWorldInverse.elements;l="matrix3d("+f(l[0])+","+f(-l[1])+","+f(l[2])+","+f(l[3])+","+f(l[4])+","+f(-l[5])+","+f(l[6])+","+f(l[7])+","+f(l[8])+","+f(-l[9])+","+f(l[10])+","+f(l[11])+","+f(l[12])+","+f(-l[13])+","+f(l[14])+","+f(l[15])+")";var q=
k+l+" translate3d("+c+"px,"+d+"px, 0)";this.cameraElement.style.WebkitTransform=q;this.cameraElement.style.MozTransform=q;this.cameraElement.style.oTransform=q;this.cameraElement.style.transform=q;k=0;for(l=m.length;k<l;k++)if(q=m[k].object,q instanceof THREE.CSS3DObject){var p=q.element;q instanceof THREE.CSS3DSprite?(g.copy(j.matrixWorldInverse),g.transpose(),g.extractPosition(q.matrixWorld),g.scale(q.scale),g.elements[3]=0,g.elements[7]=0,g.elements[11]=0,g.elements[15]=1,q=i(g)):q=i(q.matrixWorld);
p.style.WebkitTransform=q;p.style.MozTransform=q;p.style.oTransform=q;p.style.transform=q;p.parentNode!==this.cameraElement&&this.cameraElement.appendChild(p)}}};THREE.SVGRenderer=function(){function a(a,b,c,d){var e,f,g,i,h,j;e=0;for(f=a.length;e<f;e++)g=a[e],i=g.color,g instanceof THREE.DirectionalLight?(h=g.matrixWorld.getPosition().normalize(),j=c.dot(h),0>=j||(j*=g.intensity,d.r+=i.r*j,d.g+=i.g*j,d.b+=i.b*j)):g instanceof THREE.PointLight&&(h=g.matrixWorld.getPosition(),j=c.dot(z.subVectors(h,b).normalize()),0>=j||(j*=0==g.distance?1:1-Math.min(b.distanceTo(h)/g.distance,1),0!=j&&(j*=g.intensity,d.r+=i.r*j,d.g+=i.g*j,d.b+=i.b*j)))}function b(a){null==
H[a]&&(H[a]=document.createElementNS("http://www.w3.org/2000/svg","path"),0==K&&H[a].setAttribute("shape-rendering","crispEdges"));return H[a]}console.log("THREE.SVGRenderer",THREE.REVISION);var c=this,d,e,g,f=new THREE.Projector,i=document.createElementNS("http://www.w3.org/2000/svg","svg"),h,j,k,m,l,q,p,r,s=new THREE.Box2,t=new THREE.Box2,x=!1,v=new THREE.Color,w=new THREE.Color,y=new THREE.Color,D=new THREE.Color,C=new THREE.Color,u=new THREE.Color,E,z=new THREE.Vector3,H=[],O=[],F,R,I,K=1;this.domElement=
i;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setQuality=function(a){switch(a){case "high":K=1;break;case "low":K=0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.setSize=function(a,b){h=a;j=b;k=h/2;m=j/2;i.setAttribute("viewBox",-k+" "+-m+" "+h+" "+j);i.setAttribute("width",h);i.setAttribute("height",j);s.min.set(-k,-m);s.max.set(k,m)};this.clear=function(){for(;0<i.childNodes.length;)i.removeChild(i.childNodes[0])};
this.render=function(h,j){if(!1===j instanceof THREE.Camera)console.error("THREE.SVGRenderer.render: camera is not an instance of THREE.Camera.");else{var z,H,N,G;this.autoClear&&this.clear();c.info.render.vertices=0;c.info.render.faces=0;d=f.projectScene(h,j,this.sortObjects,this.sortElements);e=d.elements;g=d.lights;I=R=0;if(x=0<g.length){D.setRGB(0,0,0);C.setRGB(0,0,0);u.setRGB(0,0,0);z=0;for(H=g.length;z<H;z++)G=g[z],N=G.color,G instanceof THREE.AmbientLight?(D.r+=N.r,D.g+=N.g,D.b+=N.b):G instanceof
THREE.DirectionalLight?(C.r+=N.r,C.g+=N.g,C.b+=N.b):G instanceof THREE.PointLight&&(u.r+=N.r,u.g+=N.g,u.b+=N.b)}z=0;for(H=e.length;z<H;z++)if(N=e[z],G=N.material,!(void 0===G||!1===G.visible))if(t.makeEmpty(),N instanceof THREE.RenderableParticle)l=N,l.x*=k,l.y*=-m;else if(N instanceof THREE.RenderableLine){if(l=N.v1,q=N.v2,l.positionScreen.x*=k,l.positionScreen.y*=-m,q.positionScreen.x*=k,q.positionScreen.y*=-m,t.setFromPoints([l.positionScreen,q.positionScreen]),!0===s.isIntersectionBox(t)){N=l;
var ha=q,la=I++;null==O[la]&&(O[la]=document.createElementNS("http://www.w3.org/2000/svg","line"),0==K&&O[la].setAttribute("shape-rendering","crispEdges"));F=O[la];F.setAttribute("x1",N.positionScreen.x);F.setAttribute("y1",N.positionScreen.y);F.setAttribute("x2",ha.positionScreen.x);F.setAttribute("y2",ha.positionScreen.y);G instanceof THREE.LineBasicMaterial&&(F.setAttribute("style","fill: none; stroke: "+G.color.getStyle()+"; stroke-width: "+G.linewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+
G.linecap+"; stroke-linejoin: "+G.linejoin),i.appendChild(F))}}else if(N instanceof THREE.RenderableFace3){if(l=N.v1,q=N.v2,p=N.v3,!(-1>l.positionScreen.z||1<l.positionScreen.z))if(!(-1>q.positionScreen.z||1<q.positionScreen.z))if(!(-1>p.positionScreen.z||1<p.positionScreen.z)){l.positionScreen.x*=k;l.positionScreen.y*=-m;q.positionScreen.x*=k;q.positionScreen.y*=-m;p.positionScreen.x*=k;p.positionScreen.y*=-m;t.setFromPoints([l.positionScreen,q.positionScreen,p.positionScreen]);var ha=l,la=q,wa=
p;c.info.render.vertices+=3;c.info.render.faces++;F=b(R++);F.setAttribute("d","M "+ha.positionScreen.x+" "+ha.positionScreen.y+" L "+la.positionScreen.x+" "+la.positionScreen.y+" L "+wa.positionScreen.x+","+wa.positionScreen.y+"z");G instanceof THREE.MeshBasicMaterial?(v.copy(G.color),G.vertexColors===THREE.FaceColors&&v.multiply(N.color)):G instanceof THREE.MeshLambertMaterial?(w.copy(G.color),y.copy(G.emissive),G.vertexColors===THREE.FaceColors&&w.multiply(N.color),x?(v.copy(D),a(g,N.centroidModel,
N.normalModel,v),v.multiply(w).add(y)):v.copy(w)):G instanceof THREE.MeshDepthMaterial?(E=1-G.__2near/(G.__farPlusNear-N.z*G.__farMinusNear),v.setRGB(E,E,E)):G instanceof THREE.MeshNormalMaterial&&(N=N.normalModelView,v.setRGB(N.x,N.y,N.z).multiplyScalar(0.5).addScalar(0.5));G.wireframe?F.setAttribute("style","fill: none; stroke: "+v.getStyle()+"; stroke-width: "+G.wireframeLinewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.wireframeLinecap+"; stroke-linejoin: "+G.wireframeLinejoin):
F.setAttribute("style","fill: "+v.getStyle()+"; fill-opacity: "+G.opacity);i.appendChild(F)}}else if(N instanceof THREE.RenderableFace4&&(l=N.v1,q=N.v2,p=N.v3,r=N.v4,!(-1>l.positionScreen.z||1<l.positionScreen.z)))if(!(-1>q.positionScreen.z||1<q.positionScreen.z))if(!(-1>p.positionScreen.z||1<p.positionScreen.z))if(!(-1>r.positionScreen.z||1<r.positionScreen.z)){l.positionScreen.x*=k;l.positionScreen.y*=-m;q.positionScreen.x*=k;q.positionScreen.y*=-m;p.positionScreen.x*=k;p.positionScreen.y*=-m;r.positionScreen.x*=
k;r.positionScreen.y*=-m;t.setFromPoints([l.positionScreen,q.positionScreen,p.positionScreen,r.positionScreen]);var ha=l,la=q,wa=p,M=r;c.info.render.vertices+=4;c.info.render.faces++;F=b(R++);F.setAttribute("d","M "+ha.positionScreen.x+" "+ha.positionScreen.y+" L "+la.positionScreen.x+" "+la.positionScreen.y+" L "+wa.positionScreen.x+","+wa.positionScreen.y+" L "+M.positionScreen.x+","+M.positionScreen.y+"z");G instanceof THREE.MeshBasicMaterial?(v.copy(G.color),G.vertexColors===THREE.FaceColors&&
v.multiply(N.color)):G instanceof THREE.MeshLambertMaterial?(w.copy(G.color),y.copy(G.emissive),G.vertexColors===THREE.FaceColors&&w.multiply(N.color),x?(v.copy(D),a(g,N.centroidModel,N.normalModel,v),v.multiply(w).add(y)):v.copy(w)):G instanceof THREE.MeshDepthMaterial?(E=1-G.__2near/(G.__farPlusNear-N.z*G.__farMinusNear),v.setRGB(E,E,E)):G instanceof THREE.MeshNormalMaterial&&(N=N.normalModelView,v.setRGB(N.x,N.y,N.z).multiplyScalar(0.5).addScalar(0.5));G.wireframe?F.setAttribute("style","fill: none; stroke: "+
v.getStyle()+"; stroke-width: "+G.wireframeLinewidth+"; stroke-opacity: "+G.opacity+"; stroke-linecap: "+G.wireframeLinecap+"; stroke-linejoin: "+G.wireframeLinejoin):F.setAttribute("style","fill: "+v.getStyle()+"; fill-opacity: "+G.opacity);i.appendChild(F)}}}};THREE.BasicShader={uniforms:{},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"void main() {\ngl_FragColor = vec4( 1.0, 0.0, 0.0, 0.5 );\n}"};THREE.BleachBypassShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 base = texture2D( tDiffuse, vUv );\nvec3 lumCoeff = vec3( 0.25, 0.65, 0.1 );\nfloat lum = dot( lumCoeff, base.rgb );\nvec3 blend = vec3( lum );\nfloat L = min( 1.0, max( 0.0, 10.0 * ( lum - 0.45 ) ) );\nvec3 result1 = 2.0 * base.rgb * blend;\nvec3 result2 = 1.0 - 2.0 * ( 1.0 - blend ) * ( 1.0 - base.rgb );\nvec3 newColor = mix( result1, result2, L );\nfloat A2 = opacity * base.a;\nvec3 mixRGB = A2 * newColor.rgb;\nmixRGB += ( ( 1.0 - A2 ) * base.rgb );\ngl_FragColor = vec4( mixRGB, base.a );\n}"};THREE.BlendShader={uniforms:{tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},mixRatio:{type:"f",value:0.5},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform float mixRatio;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel1 = texture2D( tDiffuse1, vUv );\nvec4 texel2 = texture2D( tDiffuse2, vUv );\ngl_FragColor = opacity * mix( texel1, texel2, mixRatio );\n}"};THREE.BokehShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},aspect:{type:"f",value:1},aperture:{type:"f",value:0.025},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nuniform float maxblur;\nuniform float aperture;\nuniform float focus;\nuniform float aspect;\nvoid main() {\nvec2 aspectcorrect = vec2( 1.0, aspect );\nvec4 depth1 = texture2D( tDepth, vUv );\nfloat factor = depth1.x - focus;\nvec2 dofblur = vec2 ( clamp( factor * aperture, -maxblur, maxblur ) );\nvec2 dofblur9 = dofblur * 0.9;\nvec2 dofblur7 = dofblur * 0.7;\nvec2 dofblur4 = dofblur * 0.4;\nvec4 col = vec4( 0.0 );\ncol += texture2D( tColor, vUv.xy );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.15,  0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.37,  0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.37, -0.15 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.15, -0.37 ) * aspectcorrect ) * dofblur9 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.40,  0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur7 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,  -0.4  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29,  0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.4,   0.0  ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2( -0.29, -0.29 ) * aspectcorrect ) * dofblur4 );\ncol += texture2D( tColor, vUv.xy + ( vec2(  0.0,   0.4  ) * aspectcorrect ) * dofblur4 );\ngl_FragColor = col / 41.0;\ngl_FragColor.a = 1.0;\n}"};THREE.BrightnessContrastShader={uniforms:{tDiffuse:{type:"t",value:null},brightness:{type:"f",value:0},contrast:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float brightness;\nuniform float contrast;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb += brightness;\nif (contrast > 0.0) {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) / (1.0 - contrast) + 0.5;\n} else {\ngl_FragColor.rgb = (gl_FragColor.rgb - 0.5) * (1.0 + contrast) + 0.5;\n}\n}"};THREE.ColorCorrectionShader={uniforms:{tDiffuse:{type:"t",value:null},powRGB:{type:"v3",value:new THREE.Vector3(2,2,2)},mulRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec3 powRGB;\nuniform vec3 mulRGB;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\ngl_FragColor.rgb = mulRGB * pow( gl_FragColor.rgb, powRGB );\n}"};THREE.ColorifyShader={uniforms:{tDiffuse:{type:"t",value:null},color:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec3 color;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v * color, texel.w );\n}"};THREE.ConvolutionShader={defines:{KERNEL_SIZE_FLOAT:"25.0",KERNEL_SIZE_INT:"25"},uniforms:{tDiffuse:{type:"t",value:null},uImageIncrement:{type:"v2",value:new THREE.Vector2(0.001953125,0)},cKernel:{type:"fv1",value:[]}},vertexShader:"uniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvUv = uv - ( ( KERNEL_SIZE_FLOAT - 1.0 ) / 2.0 ) * uImageIncrement;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float cKernel[ KERNEL_SIZE_INT ];\nuniform sampler2D tDiffuse;\nuniform vec2 uImageIncrement;\nvarying vec2 vUv;\nvoid main() {\nvec2 imageCoord = vUv;\nvec4 sum = vec4( 0.0, 0.0, 0.0, 0.0 );\nfor( int i = 0; i < KERNEL_SIZE_INT; i ++ ) {\nsum += texture2D( tDiffuse, imageCoord ) * cKernel[ i ];\nimageCoord += uImageIncrement;\n}\ngl_FragColor = sum;\n}",
buildKernel:function(a){var b,c,d,e,g=2*Math.ceil(3*a)+1;25<g&&(g=25);e=0.5*(g-1);c=Array(g);for(b=d=0;b<g;++b)c[b]=Math.exp(-((b-e)*(b-e))/(2*a*a)),d+=c[b];for(b=0;b<g;++b)c[b]/=d;return c}};THREE.CopyShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\ngl_FragColor = opacity * texel;\n}"};THREE.DOFMipMapShader={uniforms:{tColor:{type:"t",value:null},tDepth:{type:"t",value:null},focus:{type:"f",value:1},maxblur:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float focus;\nuniform float maxblur;\nuniform sampler2D tColor;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\nvoid main() {\nvec4 depth = texture2D( tDepth, vUv );\nfloat factor = depth.x - focus;\nvec4 col = texture2D( tColor, vUv, 2.0 * maxblur * abs( focus - depth.x ) );\ngl_FragColor = col;\ngl_FragColor.a = 1.0;\n}"};THREE.DotScreenShader={uniforms:{tDiffuse:{type:"t",value:null},tSize:{type:"v2",value:new THREE.Vector2(256,256)},center:{type:"v2",value:new THREE.Vector2(0.5,0.5)},angle:{type:"f",value:1.57},scale:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform vec2 center;\nuniform float angle;\nuniform float scale;\nuniform vec2 tSize;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat pattern() {\nfloat s = sin( angle ), c = cos( angle );\nvec2 tex = vUv * tSize - center;\nvec2 point = vec2( c * tex.x - s * tex.y, s * tex.x + c * tex.y ) * scale;\nreturn ( sin( point.x ) * sin( point.y ) ) * 4.0;\n}\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nfloat average = ( color.r + color.g + color.b ) / 3.0;\ngl_FragColor = vec4( vec3( average * 10.0 - 5.0 + pattern() ), color.a );\n}"};THREE.FilmShader={uniforms:{tDiffuse:{type:"t",value:null},time:{type:"f",value:0},nIntensity:{type:"f",value:0.5},sIntensity:{type:"f",value:0.05},sCount:{type:"f",value:4096},grayscale:{type:"i",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float time;\nuniform bool grayscale;\nuniform float nIntensity;\nuniform float sIntensity;\nuniform float sCount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 cTextureScreen = texture2D( tDiffuse, vUv );\nfloat x = vUv.x * vUv.y * time *  1000.0;\nx = mod( x, 13.0 ) * mod( x, 123.0 );\nfloat dx = mod( x, 0.01 );\nvec3 cResult = cTextureScreen.rgb + cTextureScreen.rgb * clamp( 0.1 + dx * 100.0, 0.0, 1.0 );\nvec2 sc = vec2( sin( vUv.y * sCount ), cos( vUv.y * sCount ) );\ncResult += cTextureScreen.rgb * vec3( sc.x, sc.y, sc.x ) * sIntensity;\ncResult = cTextureScreen.rgb + clamp( nIntensity, 0.0,1.0 ) * ( cResult - cTextureScreen.rgb );\nif( grayscale ) {\ncResult = vec3( cResult.r * 0.3 + cResult.g * 0.59 + cResult.b * 0.11 );\n}\ngl_FragColor =  vec4( cResult, cTextureScreen.a );\n}"};THREE.FocusShader={uniforms:{tDiffuse:{type:"t",value:null},screenWidth:{type:"f",value:1024},screenHeight:{type:"f",value:1024},sampleDistance:{type:"f",value:0.94},waveFactor:{type:"f",value:0.00125}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float screenWidth;\nuniform float screenHeight;\nuniform float sampleDistance;\nuniform float waveFactor;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color, org, tmp, add;\nfloat sample_dist, f;\nvec2 vin;\nvec2 uv = vUv;\nadd = color = org = texture2D( tDiffuse, uv );\nvin = ( uv - vec2( 0.5 ) ) * vec2( 1.4 );\nsample_dist = dot( vin, vin ) * 2.0;\nf = ( waveFactor * 100.0 + sample_dist ) * sampleDistance * 4.0;\nvec2 sampleSize = vec2(  1.0 / screenWidth, 1.0 / screenHeight ) * vec2( f );\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.111964, 0.993712 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.846724, 0.532032 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.943883, -0.330279 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( 0.330279, -0.943883 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.532032, -0.846724 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.993712, -0.111964 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\nadd += tmp = texture2D( tDiffuse, uv + vec2( -0.707107, 0.707107 ) * sampleSize );\nif( tmp.b < color.b ) color = tmp;\ncolor = color * vec4( 2.0 ) - ( add / vec4( 8.0 ) );\ncolor = color + ( add / vec4( 8.0 ) - color ) * ( vec4( 1.0 ) - vec4( sample_dist * 0.5 ) );\ngl_FragColor = vec4( color.rgb * color.rgb * vec3( 0.95 ) + color.rgb, 1.0 );\n}"};THREE.FXAAShader={uniforms:{tDiffuse:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(1/1024,1/512)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform vec2 resolution;\nvarying vec2 vUv;\n#define FXAA_REDUCE_MIN   (1.0/128.0)\n#define FXAA_REDUCE_MUL   (1.0/8.0)\n#define FXAA_SPAN_MAX     8.0\nvoid main() {\nvec3 rgbNW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbNE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, -1.0 ) ) * resolution ).xyz;\nvec3 rgbSW = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( -1.0, 1.0 ) ) * resolution ).xyz;\nvec3 rgbSE = texture2D( tDiffuse, ( gl_FragCoord.xy + vec2( 1.0, 1.0 ) ) * resolution ).xyz;\nvec4 rgbaM  = texture2D( tDiffuse,  gl_FragCoord.xy  * resolution );\nvec3 rgbM  = rgbaM.xyz;\nfloat opacity  = rgbaM.w;\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat lumaNW = dot( rgbNW, luma );\nfloat lumaNE = dot( rgbNE, luma );\nfloat lumaSW = dot( rgbSW, luma );\nfloat lumaSE = dot( rgbSE, luma );\nfloat lumaM  = dot( rgbM,  luma );\nfloat lumaMin = min( lumaM, min( min( lumaNW, lumaNE ), min( lumaSW, lumaSE ) ) );\nfloat lumaMax = max( lumaM, max( max( lumaNW, lumaNE) , max( lumaSW, lumaSE ) ) );\nvec2 dir;\ndir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));\ndir.y =  ((lumaNW + lumaSW) - (lumaNE + lumaSE));\nfloat dirReduce = max( ( lumaNW + lumaNE + lumaSW + lumaSE ) * ( 0.25 * FXAA_REDUCE_MUL ), FXAA_REDUCE_MIN );\nfloat rcpDirMin = 1.0 / ( min( abs( dir.x ), abs( dir.y ) ) + dirReduce );\ndir = min( vec2( FXAA_SPAN_MAX,  FXAA_SPAN_MAX),\nmax( vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX),\ndir * rcpDirMin)) * resolution;\nvec3 rgbA = 0.5 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 1.0 / 3.0 - 0.5 ) ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * ( 2.0 / 3.0 - 0.5 ) ).xyz );\nvec3 rgbB = rgbA * 0.5 + 0.25 * (\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * -0.5 ).xyz +\ntexture2D( tDiffuse, gl_FragCoord.xy  * resolution + dir * 0.5 ).xyz );\nfloat lumaB = dot( rgbB, luma );\nif ( ( lumaB < lumaMin ) || ( lumaB > lumaMax ) ) {\ngl_FragColor = vec4( rgbA, opacity );\n} else {\ngl_FragColor = vec4( rgbB, opacity );\n}\n}"};THREE.HorizontalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * h, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * h, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * h, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * h, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * h, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.HorizontalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},h:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float h;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat hh = h * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x - 4.0 * hh, vUv.y ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x - 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x - 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x - 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x + 1.0 * hh, vUv.y ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x + 2.0 * hh, vUv.y ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x + 3.0 * hh, vUv.y ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x + 4.0 * hh, vUv.y ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.HueSaturationShader={uniforms:{tDiffuse:{type:"t",value:null},hue:{type:"f",value:0},saturation:{type:"f",value:0}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float hue;\nuniform float saturation;\nvarying vec2 vUv;\nvoid main() {\ngl_FragColor = texture2D( tDiffuse, vUv );\nfloat angle = hue * 3.14159265;\nfloat s = sin(angle), c = cos(angle);\nvec3 weights = (vec3(2.0 * c, -sqrt(3.0) * s - c, sqrt(3.0) * s - c) + 1.0) / 3.0;\nfloat len = length(gl_FragColor.rgb);\ngl_FragColor.rgb = vec3(\ndot(gl_FragColor.rgb, weights.xyz),\ndot(gl_FragColor.rgb, weights.zxy),\ndot(gl_FragColor.rgb, weights.yzx)\n);\nfloat average = (gl_FragColor.r + gl_FragColor.g + gl_FragColor.b) / 3.0;\nif (saturation > 0.0) {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (1.0 - 1.0 / (1.001 - saturation));\n} else {\ngl_FragColor.rgb += (average - gl_FragColor.rgb) * (-saturation);\n}\n}"};THREE.LuminosityShader={uniforms:{tDiffuse:{type:"t",value:null}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec3 luma = vec3( 0.299, 0.587, 0.114 );\nfloat v = dot( texel.xyz, luma );\ngl_FragColor = vec4( v, v, v, texel.w );\n}"};THREE.NormalMapShader={uniforms:{heightMap:{type:"t",value:null},resolution:{type:"v2",value:new THREE.Vector2(512,512)},scale:{type:"v2",value:new THREE.Vector2(1,1)},height:{type:"f",value:0.05}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float height;\nuniform vec2 resolution;\nuniform sampler2D heightMap;\nvarying vec2 vUv;\nvoid main() {\nfloat val = texture2D( heightMap, vUv ).x;\nfloat valU = texture2D( heightMap, vUv + vec2( 1.0 / resolution.x, 0.0 ) ).x;\nfloat valV = texture2D( heightMap, vUv + vec2( 0.0, 1.0 / resolution.y ) ).x;\ngl_FragColor = vec4( ( 0.5 * normalize( vec3( val - valU, val - valV, height  ) ) + 0.5 ), 1.0 );\n}"};THREE.SepiaShader={uniforms:{tDiffuse:{type:"t",value:null},amount:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float amount;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 color = texture2D( tDiffuse, vUv );\nvec3 c = color.rgb;\ncolor.r = dot( c, vec3( 1.0 - 0.607 * amount, 0.769 * amount, 0.189 * amount ) );\ncolor.g = dot( c, vec3( 0.349 * amount, 1.0 - 0.314 * amount, 0.168 * amount ) );\ncolor.b = dot( c, vec3( 0.272 * amount, 0.534 * amount, 1.0 - 0.869 * amount ) );\ngl_FragColor = vec4( min( vec3( 1.0 ), color.rgb ), color.a );\n}"};THREE.SSAOShader={uniforms:{tDiffuse:{type:"t",value:null},tDepth:{type:"t",value:null},size:{type:"v2",value:new THREE.Vector2(512,512)},cameraNear:{type:"f",value:1},cameraFar:{type:"f",value:100},fogNear:{type:"f",value:5},fogFar:{type:"f",value:100},fogEnabled:{type:"i",value:0},onlyAO:{type:"i",value:0},aoClamp:{type:"f",value:0.3},lumInfluence:{type:"f",value:0.9}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",
fragmentShader:"uniform float cameraNear;\nuniform float cameraFar;\nuniform float fogNear;\nuniform float fogFar;\nuniform bool fogEnabled;\nuniform bool onlyAO;\nuniform vec2 size;\nuniform float aoClamp;\nuniform float lumInfluence;\nuniform sampler2D tDiffuse;\nuniform sampler2D tDepth;\nvarying vec2 vUv;\n#define DL 2.399963229728653\n#define EULER 2.718281828459045\nfloat width = size.x;\nfloat height = size.y;\nfloat cameraFarPlusNear = cameraFar + cameraNear;\nfloat cameraFarMinusNear = cameraFar - cameraNear;\nfloat cameraCoef = 2.0 * cameraNear;\nconst int samples = 8;\nconst float radius = 5.0;\nconst bool useNoise = false;\nconst float noiseAmount = 0.0003;\nconst float diffArea = 0.4;\nconst float gDisplace = 0.4;\nconst vec3 onlyAOColor = vec3( 1.0, 0.7, 0.5 );\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvec2 rand( const vec2 coord ) {\nvec2 noise;\nif ( useNoise ) {\nfloat nx = dot ( coord, vec2( 12.9898, 78.233 ) );\nfloat ny = dot ( coord, vec2( 12.9898, 78.233 ) * 2.0 );\nnoise = clamp( fract ( 43758.5453 * sin( vec2( nx, ny ) ) ), 0.0, 1.0 );\n} else {\nfloat ff = fract( 1.0 - coord.s * ( width / 2.0 ) );\nfloat gg = fract( coord.t * ( height / 2.0 ) );\nnoise = vec2( 0.25, 0.75 ) * vec2( ff ) + vec2( 0.75, 0.25 ) * gg;\n}\nreturn ( noise * 2.0  - 1.0 ) * noiseAmount;\n}\nfloat doFog() {\nfloat zdepth = unpackDepth( texture2D( tDepth, vUv ) );\nfloat depth = -cameraFar * cameraNear / ( zdepth * cameraFarMinusNear - cameraFar );\nreturn smoothstep( fogNear, fogFar, depth );\n}\nfloat readDepth( const in vec2 coord ) {\nreturn cameraCoef / ( cameraFarPlusNear - unpackDepth( texture2D( tDepth, coord ) ) * cameraFarMinusNear );\n}\nfloat compareDepths( const in float depth1, const in float depth2, inout int far ) {\nfloat garea = 2.0;\nfloat diff = ( depth1 - depth2 ) * 100.0;\nif ( diff < gDisplace ) {\ngarea = diffArea;\n} else {\nfar = 1;\n}\nfloat dd = diff - gDisplace;\nfloat gauss = pow( EULER, -2.0 * dd * dd / ( garea * garea ) );\nreturn gauss;\n}\nfloat calcAO( float depth, float dw, float dh ) {\nfloat dd = radius - depth * radius;\nvec2 vv = vec2( dw, dh );\nvec2 coord1 = vUv + dd * vv;\nvec2 coord2 = vUv - dd * vv;\nfloat temp1 = 0.0;\nfloat temp2 = 0.0;\nint far = 0;\ntemp1 = compareDepths( depth, readDepth( coord1 ), far );\nif ( far > 0 ) {\ntemp2 = compareDepths( readDepth( coord2 ), depth, far );\ntemp1 += ( 1.0 - temp1 ) * temp2;\n}\nreturn temp1;\n}\nvoid main() {\nvec2 noise = rand( vUv );\nfloat depth = readDepth( vUv );\nfloat tt = clamp( depth, aoClamp, 1.0 );\nfloat w = ( 1.0 / width )  / tt + ( noise.x * ( 1.0 - noise.x ) );\nfloat h = ( 1.0 / height ) / tt + ( noise.y * ( 1.0 - noise.y ) );\nfloat pw;\nfloat ph;\nfloat ao;\nfloat dz = 1.0 / float( samples );\nfloat z = 1.0 - dz / 2.0;\nfloat l = 0.0;\nfor ( int i = 0; i <= samples; i ++ ) {\nfloat r = sqrt( 1.0 - z );\npw = cos( l ) * r;\nph = sin( l ) * r;\nao += calcAO( depth, pw * w, ph * h );\nz = z - dz;\nl = l + DL;\n}\nao /= float( samples );\nao = 1.0 - ao;\nif ( fogEnabled ) {\nao = mix( ao, 1.0, doFog() );\n}\nvec3 color = texture2D( tDiffuse, vUv ).rgb;\nvec3 lumcoeff = vec3( 0.299, 0.587, 0.114 );\nfloat lum = dot( color.rgb, lumcoeff );\nvec3 luminance = vec3( lum );\nvec3 final = vec3( color * mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\nif ( onlyAO ) {\nfinal = onlyAOColor * vec3( mix( vec3( ao ), vec3( 1.0 ), luminance * lumInfluence ) );\n}\ngl_FragColor = vec4( final, 1.0 );\n}"};THREE.TriangleBlurShader={uniforms:{texture:{type:"t",value:null},delta:{type:"v2",value:new THREE.Vector2(1,1)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define ITERATIONS 10.0\nuniform sampler2D texture;\nuniform vec2 delta;\nvarying vec2 vUv;\nfloat random( vec3 scale, float seed ) {\nreturn fract( sin( dot( gl_FragCoord.xyz + seed, scale ) ) * 43758.5453 + seed );\n}\nvoid main() {\nvec4 color = vec4( 0.0 );\nfloat total = 0.0;\nfloat offset = random( vec3( 12.9898, 78.233, 151.7182 ), 0.0 );\nfor ( float t = -ITERATIONS; t <= ITERATIONS; t ++ ) {\nfloat percent = ( t + offset - 0.5 ) / ITERATIONS;\nfloat weight = 1.0 - abs( percent );\ncolor += texture2D( texture, vUv + delta * percent ) * weight;\ntotal += weight;\n}\ngl_FragColor = color / total;\n}"};THREE.UnpackDepthRGBAShader={uniforms:{tDiffuse:{type:"t",value:null},opacity:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float opacity;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\nvoid main() {\nfloat depth = 1.0 - unpackDepth( texture2D( tDiffuse, vUv ) );\ngl_FragColor = opacity * vec4( vec3( depth ), 1.0 );\n}"};THREE.VerticalBlurShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * v ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * v ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * v ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * v ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * v ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.VerticalTiltShiftShader={uniforms:{tDiffuse:{type:"t",value:null},v:{type:"f",value:1/512},r:{type:"f",value:0.35}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D tDiffuse;\nuniform float v;\nuniform float r;\nvarying vec2 vUv;\nvoid main() {\nvec4 sum = vec4( 0.0 );\nfloat vv = v * abs( r - vUv.y );\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 4.0 * vv ) ) * 0.051;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y - 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y ) ) * 0.1633;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 1.0 * vv ) ) * 0.1531;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 2.0 * vv ) ) * 0.12245;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 3.0 * vv ) ) * 0.0918;\nsum += texture2D( tDiffuse, vec2( vUv.x, vUv.y + 4.0 * vv ) ) * 0.051;\ngl_FragColor = sum;\n}"};THREE.VignetteShader={uniforms:{tDiffuse:{type:"t",value:null},offset:{type:"f",value:1},darkness:{type:"f",value:1}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float offset;\nuniform float darkness;\nuniform sampler2D tDiffuse;\nvarying vec2 vUv;\nvoid main() {\nvec4 texel = texture2D( tDiffuse, vUv );\nvec2 uv = ( vUv - vec2( 0.5 ) ) * vec2( offset );\ngl_FragColor = vec4( mix( texel.rgb, vec3( 1.0 - darkness ), dot( uv, uv ) ), texel.a );\n}"};THREE.AudioObject=function(a,b,c,d){THREE.Object3D.call(this);void 0===c&&(c=1);void 0===b&&(b=1);void 0===d&&(d=!0);if(!this.context)try{this.context=new webkitAudioContext}catch(e){return console.warn("THREE.AudioObject: webkitAudioContext not found"),this}this.directionalSource=!1;this.listener=this.context.listener;this.panner=this.context.createPanner();this.source=this.context.createBufferSource();this.masterGainNode=this.context.createGainNode();this.dryGainNode=this.context.createGainNode();
this.masterGainNode.gain.value=b;this.dryGainNode.gain.value=3;this.source.connect(this.panner);this.panner.connect(this.dryGainNode);this.dryGainNode.connect(this.masterGainNode);this.masterGainNode.connect(this.context.destination);this.source.playbackRate.value=c;this.source.loop=d;var g=new XMLHttpRequest;g.open("GET",a,!0);g.responseType="arraybuffer";g.onload=function(){s.source.buffer=s.context.createBuffer(g.response,!0);s.source.noteOn(0)};g.send();var f=new THREE.Vector3,i=new THREE.Vector3,
h=new THREE.Vector3,j=new THREE.Vector3,k=new THREE.Vector3,m=new THREE.Vector3,l=new THREE.Vector3,q=new THREE.Vector3,p=new THREE.Vector3,r=new THREE.Vector3,s=this;this.setVolume=function(a){this.masterGainNode.gain.value=a};this.update=function(a){h.copy(f);j.copy(i);f.copy(this.matrixWorld.getPosition());i.copy(a.matrixWorld.getPosition());k.subVectors(f,h);m.subVectors(i,j);r.copy(a.up);q.set(0,0,-1);a.matrixWorld.rotateAxis(q);q.normalize();this.listener.setPosition(i.x,i.y,i.z);this.listener.setVelocity(m.x,
m.y,m.z);this.listener.setOrientation(q.x,q.y,q.z,r.x,r.y,r.z);this.panner.setPosition(f.x,f.y,f.z);this.panner.setVelocity(k.x,k.y,k.z);this.directionalSource&&(l.set(0,0,-1),this.matrixWorld.rotateAxis(l),l.normalize(),p.copy(this.up),this.panner.setOrientation(l.x,l.y,l.z,p.x,p.y,p.z))}};THREE.AudioObject.prototype=Object.create(THREE.Object3D.prototype);THREE.AudioObject.prototype.context=null;THREE.AudioObject.prototype.type=null;THREE.Car=function(){function a(){if(b.bodyGeometry&&b.wheelGeometry){if(b.autoWheelGeometry){b.wheelGeometry.computeBoundingBox();var a=b.wheelGeometry.boundingBox;b.wheelOffset.addVectors(a.min,a.max);b.wheelOffset.multiplyScalar(0.5);b.wheelDiameter=a.max.y-a.min.y;THREE.GeometryUtils.center(b.wheelGeometry)}var a=b.modelScale,d=new THREE.Vector3,e=new THREE.MeshFaceMaterial(b.bodyMaterials),g=new THREE.MeshFaceMaterial(b.wheelMaterials);b.bodyMesh=new THREE.Mesh(b.bodyGeometry,e);b.bodyMesh.scale.set(a,
a,a);b.root.add(b.bodyMesh);d.multiplyVectors(b.wheelOffset,new THREE.Vector3(a,a,a));b.frontLeftWheelRoot.position.add(d);b.frontLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,g);b.frontLeftWheelMesh.scale.set(a,a,a);b.frontLeftWheelRoot.add(b.frontLeftWheelMesh);b.root.add(b.frontLeftWheelRoot);d.multiplyVectors(b.wheelOffset,new THREE.Vector3(-a,a,a));b.frontRightWheelRoot.position.add(d);b.frontRightWheelMesh=new THREE.Mesh(b.wheelGeometry,g);b.frontRightWheelMesh.scale.set(a,a,a);b.frontRightWheelMesh.rotation.z=
Math.PI;b.frontRightWheelRoot.add(b.frontRightWheelMesh);b.root.add(b.frontRightWheelRoot);d.multiplyVectors(b.wheelOffset,new THREE.Vector3(a,a,-a));d.z-=b.backWheelOffset;b.backLeftWheelMesh=new THREE.Mesh(b.wheelGeometry,g);b.backLeftWheelMesh.position.add(d);b.backLeftWheelMesh.scale.set(a,a,a);b.root.add(b.backLeftWheelMesh);d.multiplyVectors(b.wheelOffset,new THREE.Vector3(-a,a,-a));d.z-=b.backWheelOffset;b.backRightWheelMesh=new THREE.Mesh(b.wheelGeometry,g);b.backRightWheelMesh.position.add(d);
b.backRightWheelMesh.scale.set(a,a,a);b.backRightWheelMesh.rotation.z=Math.PI;b.root.add(b.backRightWheelMesh);b.meshes=[b.bodyMesh,b.frontLeftWheelMesh,b.frontRightWheelMesh,b.backLeftWheelMesh,b.backRightWheelMesh];b.loaded=!0;b.callback&&b.callback(b)}}var b=this;this.modelScale=1;this.backWheelOffset=2;this.autoWheelGeometry=!0;this.wheelOffset=new THREE.Vector3;this.wheelDiameter=1;this.MAX_SPEED=2200;this.MAX_REVERSE_SPEED=-1500;this.MAX_WHEEL_ROTATION=0.6;this.FRONT_ACCELERATION=1250;this.BACK_ACCELERATION=
1500;this.WHEEL_ANGULAR_ACCELERATION=1.5;this.FRONT_DECCELERATION=750;this.WHEEL_ANGULAR_DECCELERATION=1;this.STEERING_RADIUS_RATIO=0.0023;this.MAX_TILT_SIDES=0.05;this.MAX_TILT_FRONTBACK=0.015;this.carOrientation=this.wheelOrientation=this.acceleration=this.speed=0;this.root=new THREE.Object3D;this.frontLeftWheelRoot=new THREE.Object3D;this.frontRightWheelRoot=new THREE.Object3D;this.wheelMaterials=this.bodyMaterials=this.wheelGeometry=this.bodyGeometry=this.backRightWheelMesh=this.backLeftWheelMesh=
this.frontRightWheelMesh=this.frontLeftWheelMesh=this.bodyMesh=null;this.loaded=!1;this.meshes=[];this.enableShadows=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].castShadow=a,this.meshes[b].receiveShadow=a};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].visible=a,this.meshes[b].visible=a};this.loadPartsJSON=function(c,d){var e=new THREE.JSONLoader;e.load(c,function(c,d){b.bodyGeometry=c;b.bodyMaterials=d;a()});e.load(d,function(c,d){b.wheelGeometry=
c;b.wheelMaterials=d;a()})};this.loadPartsBinary=function(c,d){var e=new THREE.BinaryLoader;e.load(c,function(c,d){b.bodyGeometry=c;b.bodyMaterials=d;a()});e.load(d,function(c,d){b.wheelGeometry=c;b.wheelMaterials=d;a()})};this.updateCarModel=function(a,b){b.moveForward&&(this.speed=THREE.Math.clamp(this.speed+a*this.FRONT_ACCELERATION,this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration+a,-1,1));b.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-a*this.BACK_ACCELERATION,
this.MAX_REVERSE_SPEED,this.MAX_SPEED),this.acceleration=THREE.Math.clamp(this.acceleration-a,-1,1));b.moveLeft&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION));b.moveRight&&(this.wheelOrientation=THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_ACCELERATION,-this.MAX_WHEEL_ROTATION,this.MAX_WHEEL_ROTATION));if(!b.moveForward&&!b.moveBackward)if(0<this.speed){var e=1===this.speed/this.MAX_SPEED?
1:-Math.pow(2,-10*(this.speed/this.MAX_SPEED))+1;this.speed=THREE.Math.clamp(this.speed-e*a*this.FRONT_DECCELERATION,0,this.MAX_SPEED);this.acceleration=THREE.Math.clamp(this.acceleration-e*a,0,1)}else e=1===this.speed/this.MAX_REVERSE_SPEED?1:-Math.pow(2,-10*(this.speed/this.MAX_REVERSE_SPEED))+1,this.speed=THREE.Math.clamp(this.speed+e*a*this.BACK_ACCELERATION,this.MAX_REVERSE_SPEED,0),this.acceleration=THREE.Math.clamp(this.acceleration+e*a,-1,0);!b.moveLeft&&!b.moveRight&&(this.wheelOrientation=
0<this.wheelOrientation?THREE.Math.clamp(this.wheelOrientation-a*this.WHEEL_ANGULAR_DECCELERATION,0,this.MAX_WHEEL_ROTATION):THREE.Math.clamp(this.wheelOrientation+a*this.WHEEL_ANGULAR_DECCELERATION,-this.MAX_WHEEL_ROTATION,0));e=this.speed*a;this.carOrientation+=e*this.STEERING_RADIUS_RATIO*this.wheelOrientation;this.root.position.x+=Math.sin(this.carOrientation)*e;this.root.position.z+=Math.cos(this.carOrientation)*e;this.root.rotation.y=this.carOrientation;this.loaded&&(this.bodyMesh.rotation.z=
this.MAX_TILT_SIDES*this.wheelOrientation*(this.speed/this.MAX_SPEED),this.bodyMesh.rotation.x=-this.MAX_TILT_FRONTBACK*this.acceleration);e*=1/(this.modelScale*(this.wheelDiameter/2));this.loaded&&(this.frontLeftWheelMesh.rotation.x+=e,this.frontRightWheelMesh.rotation.x+=e,this.backLeftWheelMesh.rotation.x+=e,this.backRightWheelMesh.rotation.x+=e);this.frontLeftWheelRoot.rotation.y=this.wheelOrientation;this.frontRightWheelRoot.rotation.y=this.wheelOrientation}};THREE.Curves={};THREE.Curves.GrannyKnot=THREE.Curve.create(function(){},function(a){var a=2*Math.PI*a,b=-0.22*Math.cos(a)-1.28*Math.sin(a)-0.44*Math.cos(3*a)-0.78*Math.sin(3*a),c=-0.1*Math.cos(2*a)-0.27*Math.sin(2*a)+0.38*Math.cos(4*a)+0.46*Math.sin(4*a),a=0.7*Math.cos(3*a)-0.4*Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(20)});
THREE.Curves.HeartCurve=THREE.Curve.create(function(a){this.scale=void 0===a?5:a},function(a){var a=a*2*Math.PI,b=16*Math.pow(Math.sin(a),3),a=13*Math.cos(a)-5*Math.cos(2*a)-2*Math.cos(3*a)-Math.cos(4*a);return(new THREE.Vector3(b,a,0)).multiplyScalar(this.scale)});THREE.Curves.VivianiCurve=THREE.Curve.create(function(a){this.radius=a},function(a){var a=4*a*Math.PI,b=this.radius/2,c=b*(1+Math.cos(a)),d=b*Math.sin(a),a=2*b*Math.sin(a/2);return new THREE.Vector3(c,d,a)});
THREE.Curves.KnotCurve=THREE.Curve.create(function(){},function(a){var a=a*2*Math.PI,b=50*Math.sin(a),c=Math.cos(a)*(10+50*Math.cos(a)),a=Math.sin(a)*(10+50*Math.cos(a));return new THREE.Vector3(b,c,a)});THREE.Curves.HelixCurve=THREE.Curve.create(function(){},function(a){var b=150*2*Math.PI*a/30,c=30*Math.cos(b),b=30*Math.sin(b);return new THREE.Vector3(c,b,150*a)});
THREE.Curves.TrefoilKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=a*2*Math.PI,b=(2+Math.cos(3*a))*Math.cos(2*a),c=(2+Math.cos(3*a))*Math.sin(2*a),a=Math.sin(3*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TorusKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=a*2*Math.PI,b=(2+Math.cos(4*a))*Math.cos(3*a),c=(2+Math.cos(4*a))*Math.sin(3*a),a=Math.sin(4*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.CinquefoilKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=a*2*Math.PI,b=(2+Math.cos(5*a))*Math.cos(2*a),c=(2+Math.cos(5*a))*Math.sin(2*a),a=Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});THREE.Curves.TrefoilPolynomialKnot=THREE.Curve.create(function(a){this.scale=void 0===a?10:a},function(a){var a=4*a-2,b=Math.pow(a,3)-3*a,c=Math.pow(a,4)-4*a*a,a=0.2*Math.pow(a,5)-2*a;return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
var scaleTo=function(a,b,c){return c*(b-a)+a};THREE.Curves.FigureEightPolynomialKnot=THREE.Curve.create(function(a){this.scale=void 0===a?1:a},function(a){var a=scaleTo(-4,4,a),b=0.4*a*(a*a-7)*(a*a-10),c=Math.pow(a,4)-13*a*a;return(new THREE.Vector3(b,c,0.1*a*(a*a-4)*(a*a-9)*(a*a-12))).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4a=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var a=a*2*Math.PI,b=Math.cos(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),c=Math.sin(2*a)*(1+0.6*(Math.cos(5*a)+0.75*Math.cos(10*a))),a=0.35*Math.sin(5*a);return(new THREE.Vector3(b,c,a)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot4b=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI,a=Math.cos(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),c=Math.sin(2*b)*(1+0.45*Math.cos(3*b)+0.4*Math.cos(9*b)),b=0.2*Math.sin(9*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5a=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI,a=Math.cos(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),c=Math.sin(3*b)*(1+0.3*Math.cos(5*b)+0.5*Math.cos(10*b)),b=0.2*Math.sin(20*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});
THREE.Curves.DecoratedTorusKnot5c=THREE.Curve.create(function(a){this.scale=void 0===a?40:a},function(a){var b=2*a*Math.PI,a=Math.cos(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),c=Math.sin(4*b)*(1+0.5*(Math.cos(5*b)+0.4*Math.cos(20*b))),b=0.35*Math.sin(15*b);return(new THREE.Vector3(a,c,b)).multiplyScalar(this.scale)});THREE.MarchingCubes=function(a,b,c,d){THREE.ImmediateRenderObject.call(this);this.material=b;this.enableUvs=void 0!==c?c:!1;this.enableColors=void 0!==d?d:!1;this.init=function(a){this.resolution=a;this.isolation=80;this.size=a;this.size2=this.size*this.size;this.size3=this.size2*this.size;this.halfsize=this.size/2;this.delta=2/this.size;this.yd=this.size;this.zd=this.size2;this.field=new Float32Array(this.size3);this.normal_cache=new Float32Array(3*this.size3);this.vlist=new Float32Array(36);this.nlist=
new Float32Array(36);this.firstDraw=!0;this.maxCount=4096;this.count=0;this.hasUvs=this.hasColors=this.hasNormals=this.hasPositions=!1;this.positionArray=new Float32Array(3*this.maxCount);this.normalArray=new Float32Array(3*this.maxCount);this.enableUvs&&(this.uvArray=new Float32Array(2*this.maxCount));this.enableColors&&(this.colorArray=new Float32Array(3*this.maxCount))};this.lerp=function(a,b,c){return a+(b-a)*c};this.VIntX=function(a,b,c,d,h,j,k,m,l,q){h=(h-l)/(q-l);l=this.normal_cache;b[d]=j+
h*this.delta;b[d+1]=k;b[d+2]=m;c[d]=this.lerp(l[a],l[a+3],h);c[d+1]=this.lerp(l[a+1],l[a+4],h);c[d+2]=this.lerp(l[a+2],l[a+5],h)};this.VIntY=function(a,b,c,d,h,j,k,m,l,q){h=(h-l)/(q-l);l=this.normal_cache;b[d]=j;b[d+1]=k+h*this.delta;b[d+2]=m;b=a+3*this.yd;c[d]=this.lerp(l[a],l[b],h);c[d+1]=this.lerp(l[a+1],l[b+1],h);c[d+2]=this.lerp(l[a+2],l[b+2],h)};this.VIntZ=function(a,b,c,d,h,j,k,m,l,q){h=(h-l)/(q-l);l=this.normal_cache;b[d]=j;b[d+1]=k;b[d+2]=m+h*this.delta;b=a+3*this.zd;c[d]=this.lerp(l[a],
l[b],h);c[d+1]=this.lerp(l[a+1],l[b+1],h);c[d+2]=this.lerp(l[a+2],l[b+2],h)};this.compNorm=function(a){var b=3*a;0===this.normal_cache[b]&&(this.normal_cache[b]=this.field[a-1]-this.field[a+1],this.normal_cache[b+1]=this.field[a-this.yd]-this.field[a+this.yd],this.normal_cache[b+2]=this.field[a-this.zd]-this.field[a+this.zd])};this.polygonize=function(a,b,c,d,h,j){var k=d+1,m=d+this.yd,l=d+this.zd,q=k+this.yd,p=k+this.zd,r=d+this.yd+this.zd,s=k+this.yd+this.zd,t=0,x=this.field[d],v=this.field[k],
w=this.field[m],y=this.field[q],D=this.field[l],C=this.field[p],u=this.field[r],E=this.field[s];x<h&&(t|=1);v<h&&(t|=2);w<h&&(t|=8);y<h&&(t|=4);D<h&&(t|=16);C<h&&(t|=32);u<h&&(t|=128);E<h&&(t|=64);var z=THREE.edgeTable[t];if(0===z)return 0;var H=this.delta,O=a+H,F=b+H,H=c+H;z&1&&(this.compNorm(d),this.compNorm(k),this.VIntX(3*d,this.vlist,this.nlist,0,h,a,b,c,x,v));z&2&&(this.compNorm(k),this.compNorm(q),this.VIntY(3*k,this.vlist,this.nlist,3,h,O,b,c,v,y));z&4&&(this.compNorm(m),this.compNorm(q),
this.VIntX(3*m,this.vlist,this.nlist,6,h,a,F,c,w,y));z&8&&(this.compNorm(d),this.compNorm(m),this.VIntY(3*d,this.vlist,this.nlist,9,h,a,b,c,x,w));z&16&&(this.compNorm(l),this.compNorm(p),this.VIntX(3*l,this.vlist,this.nlist,12,h,a,b,H,D,C));z&32&&(this.compNorm(p),this.compNorm(s),this.VIntY(3*p,this.vlist,this.nlist,15,h,O,b,H,C,E));z&64&&(this.compNorm(r),this.compNorm(s),this.VIntX(3*r,this.vlist,this.nlist,18,h,a,F,H,u,E));z&128&&(this.compNorm(l),this.compNorm(r),this.VIntY(3*l,this.vlist,this.nlist,
21,h,a,b,H,D,u));z&256&&(this.compNorm(d),this.compNorm(l),this.VIntZ(3*d,this.vlist,this.nlist,24,h,a,b,c,x,D));z&512&&(this.compNorm(k),this.compNorm(p),this.VIntZ(3*k,this.vlist,this.nlist,27,h,O,b,c,v,C));z&1024&&(this.compNorm(q),this.compNorm(s),this.VIntZ(3*q,this.vlist,this.nlist,30,h,O,F,c,y,E));z&2048&&(this.compNorm(m),this.compNorm(r),this.VIntZ(3*m,this.vlist,this.nlist,33,h,a,F,c,w,u));t<<=4;for(h=d=0;-1!=THREE.triTable[t+h];)a=t+h,b=a+1,c=a+2,this.posnormtriv(this.vlist,this.nlist,
3*THREE.triTable[a],3*THREE.triTable[b],3*THREE.triTable[c],j),h+=3,d++;return d};this.posnormtriv=function(a,b,c,d,h,j){var k=3*this.count;this.positionArray[k]=a[c];this.positionArray[k+1]=a[c+1];this.positionArray[k+2]=a[c+2];this.positionArray[k+3]=a[d];this.positionArray[k+4]=a[d+1];this.positionArray[k+5]=a[d+2];this.positionArray[k+6]=a[h];this.positionArray[k+7]=a[h+1];this.positionArray[k+8]=a[h+2];this.normalArray[k]=b[c];this.normalArray[k+1]=b[c+1];this.normalArray[k+2]=b[c+2];this.normalArray[k+
3]=b[d];this.normalArray[k+4]=b[d+1];this.normalArray[k+5]=b[d+2];this.normalArray[k+6]=b[h];this.normalArray[k+7]=b[h+1];this.normalArray[k+8]=b[h+2];this.enableUvs&&(b=2*this.count,this.uvArray[b]=a[c],this.uvArray[b+1]=a[c+2],this.uvArray[b+2]=a[d],this.uvArray[b+3]=a[d+2],this.uvArray[b+4]=a[h],this.uvArray[b+5]=a[h+2]);this.enableColors&&(this.colorArray[k]=a[c],this.colorArray[k+1]=a[c+1],this.colorArray[k+2]=a[c+2],this.colorArray[k+3]=a[d],this.colorArray[k+4]=a[d+1],this.colorArray[k+5]=
a[d+2],this.colorArray[k+6]=a[h],this.colorArray[k+7]=a[h+1],this.colorArray[k+8]=a[h+2]);this.count+=3;this.count>=this.maxCount-3&&(this.hasNormals=this.hasPositions=!0,this.enableUvs&&(this.hasUvs=!0),this.enableColors&&(this.hasColors=!0),j(this))};this.begin=function(){this.count=0;this.hasColors=this.hasUvs=this.hasNormals=this.hasPositions=!1};this.end=function(a){if(0!==this.count){for(var b=3*this.count;b<this.positionArray.length;b++)this.positionArray[b]=0;this.hasNormals=this.hasPositions=
!0;this.enableUvs&&(this.hasUvs=!0);this.enableColors&&(this.hasColors=!0);a(this)}};this.addBall=function(a,b,c,d,h){var j=this.size*Math.sqrt(d/h),k=c*this.size,m=b*this.size,l=a*this.size,q=Math.floor(k-j);1>q&&(q=1);k=Math.floor(k+j);k>this.size-1&&(k=this.size-1);var p=Math.floor(m-j);1>p&&(p=1);m=Math.floor(m+j);m>this.size-1&&(m=this.size-1);var r=Math.floor(l-j);1>r&&(r=1);j=Math.floor(l+j);j>this.size-1&&(j=this.size-1);for(var s,t,x,v,w,y;q<k;q++){l=this.size2*q;t=q/this.size-c;w=t*t;for(t=
p;t<m;t++){x=l+this.size*t;s=t/this.size-b;y=s*s;for(s=r;s<j;s++)v=s/this.size-a,v=d/(1E-6+v*v+y+w)-h,0<v&&(this.field[x+s]+=v)}}};this.addPlaneX=function(a,b){var c,d,h,j,k,m=this.size,l=this.yd,q=this.zd,p=this.field,r=m*Math.sqrt(a/b);r>m&&(r=m);for(c=0;c<r;c++)if(d=c/m,d*=d,j=a/(1E-4+d)-b,0<j)for(d=0;d<m;d++){k=c+d*l;for(h=0;h<m;h++)p[q*h+k]+=j}};this.addPlaneY=function(a,b){var c,d,h,j,k,m,l=this.size,q=this.yd,p=this.zd,r=this.field,s=l*Math.sqrt(a/b);s>l&&(s=l);for(d=0;d<s;d++)if(c=d/l,c*=
c,j=a/(1E-4+c)-b,0<j){k=d*q;for(c=0;c<l;c++){m=k+c;for(h=0;h<l;h++)r[p*h+m]+=j}}};this.addPlaneZ=function(a,b){var c,d,h,j,k,m,l=this.size,q=this.yd,p=this.zd,r=this.field,s=l*Math.sqrt(a/b);s>l&&(s=l);for(h=0;h<s;h++)if(c=h/l,c*=c,j=a/(1E-4+c)-b,0<j){k=p*h;for(d=0;d<l;d++){m=k+d*q;for(c=0;c<l;c++)r[m+c]+=j}}};this.reset=function(){var a;for(a=0;a<this.size3;a++)this.normal_cache[3*a]=0,this.field[a]=0};this.render=function(a){this.begin();var b,c,d,h,j,k,m,l,q,p=this.size-2;for(h=1;h<p;h++){q=this.size2*
h;m=(h-this.halfsize)/this.halfsize;for(d=1;d<p;d++){l=q+this.size*d;k=(d-this.halfsize)/this.halfsize;for(c=1;c<p;c++)j=(c-this.halfsize)/this.halfsize,b=l+c,this.polygonize(j,k,m,b,this.isolation,a)}}this.end(a)};this.generateGeometry=function(){var a=0,b=new THREE.Geometry,c=[];this.render(function(d){var h,j,k,m,l,q,p,r;for(h=0;h<d.count;h++)q=3*h,p=q+1,r=q+2,j=d.positionArray[q],k=d.positionArray[p],m=d.positionArray[r],l=new THREE.Vector3(j,k,m),j=d.normalArray[q],k=d.normalArray[p],m=d.normalArray[r],
q=new THREE.Vector3(j,k,m),q.normalize(),b.vertices.push(l),c.push(q);l=d.count/3;for(h=0;h<l;h++)q=3*(a+h),p=q+1,r=q+2,j=c[q],k=c[p],m=c[r],q=new THREE.Face3(q,p,r,[j,k,m]),b.faces.push(q);a+=l;d.count=0});return b};this.init(a)};THREE.MarchingCubes.prototype=Object.create(THREE.ImmediateRenderObject.prototype);
THREE.edgeTable=new Int32Array([0,265,515,778,1030,1295,1541,1804,2060,2309,2575,2822,3082,3331,3593,3840,400,153,915,666,1430,1183,1941,1692,2460,2197,2975,2710,3482,3219,3993,3728,560,825,51,314,1590,1855,1077,1340,2620,2869,2111,2358,3642,3891,3129,3376,928,681,419,170,1958,1711,1445,1196,2988,2725,2479,2214,4010,3747,3497,3232,1120,1385,1635,1898,102,367,613,876,3180,3429,3695,3942,2154,2403,2665,2912,1520,1273,2035,1786,502,255,1013,764,3580,3317,4095,3830,2554,2291,3065,2800,1616,1881,1107,
1370,598,863,85,348,3676,3925,3167,3414,2650,2899,2137,2384,1984,1737,1475,1226,966,719,453,204,4044,3781,3535,3270,3018,2755,2505,2240,2240,2505,2755,3018,3270,3535,3781,4044,204,453,719,966,1226,1475,1737,1984,2384,2137,2899,2650,3414,3167,3925,3676,348,85,863,598,1370,1107,1881,1616,2800,3065,2291,2554,3830,4095,3317,3580,764,1013,255,502,1786,2035,1273,1520,2912,2665,2403,2154,3942,3695,3429,3180,876,613,367,102,1898,1635,1385,1120,3232,3497,3747,4010,2214,2479,2725,2988,1196,1445,1711,1958,170,
419,681,928,3376,3129,3891,3642,2358,2111,2869,2620,1340,1077,1855,1590,314,51,825,560,3728,3993,3219,3482,2710,2975,2197,2460,1692,1941,1183,1430,666,915,153,400,3840,3593,3331,3082,2822,2575,2309,2060,1804,1541,1295,1030,778,515,265,0]);
THREE.triTable=new Int32Array([-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,9,8,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,2,10,0,2,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,8,3,2,10,8,10,9,8,-1,-1,-1,-1,-1,-1,-1,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,8,11,0,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,11,-1,-1,-1,-1,-1,
-1,-1,-1,-1,-1,1,11,2,1,9,11,9,8,11,-1,-1,-1,-1,-1,-1,-1,3,10,1,11,10,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,10,1,0,8,10,8,11,10,-1,-1,-1,-1,-1,-1,-1,3,9,0,3,11,9,11,10,9,-1,-1,-1,-1,-1,-1,-1,9,8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,7,3,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,1,9,4,7,1,7,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,8,4,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,4,7,3,0,4,1,2,10,-1,-1,-1,-1,-1,-1,-1,9,2,10,9,0,2,8,4,7,
-1,-1,-1,-1,-1,-1,-1,2,10,9,2,9,7,2,7,3,7,9,4,-1,-1,-1,-1,8,4,7,3,11,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,4,7,11,2,4,2,0,4,-1,-1,-1,-1,-1,-1,-1,9,0,1,8,4,7,2,3,11,-1,-1,-1,-1,-1,-1,-1,4,7,11,9,4,11,9,11,2,9,2,1,-1,-1,-1,-1,3,10,1,3,11,10,7,8,4,-1,-1,-1,-1,-1,-1,-1,1,11,10,1,4,11,1,0,4,7,11,4,-1,-1,-1,-1,4,7,8,9,0,11,9,11,10,11,0,3,-1,-1,-1,-1,4,7,11,4,11,9,9,11,10,-1,-1,-1,-1,-1,-1,-1,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,5,4,1,5,0,-1,-1,-1,-1,-1,-1,
-1,-1,-1,-1,8,5,4,8,3,5,3,1,5,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,10,4,9,5,-1,-1,-1,-1,-1,-1,-1,5,2,10,5,4,2,4,0,2,-1,-1,-1,-1,-1,-1,-1,2,10,5,3,2,5,3,5,4,3,4,8,-1,-1,-1,-1,9,5,4,2,3,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,11,2,0,8,11,4,9,5,-1,-1,-1,-1,-1,-1,-1,0,5,4,0,1,5,2,3,11,-1,-1,-1,-1,-1,-1,-1,2,1,5,2,5,8,2,8,11,4,8,5,-1,-1,-1,-1,10,3,11,10,1,3,9,5,4,-1,-1,-1,-1,-1,-1,-1,4,9,5,0,8,1,8,10,1,8,11,10,-1,-1,-1,-1,5,4,0,5,0,11,5,11,10,11,0,3,-1,-1,-1,-1,5,4,8,5,
8,10,10,8,11,-1,-1,-1,-1,-1,-1,-1,9,7,8,5,7,9,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,3,0,9,5,3,5,7,3,-1,-1,-1,-1,-1,-1,-1,0,7,8,0,1,7,1,5,7,-1,-1,-1,-1,-1,-1,-1,1,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,7,8,9,5,7,10,1,2,-1,-1,-1,-1,-1,-1,-1,10,1,2,9,5,0,5,3,0,5,7,3,-1,-1,-1,-1,8,0,2,8,2,5,8,5,7,10,5,2,-1,-1,-1,-1,2,10,5,2,5,3,3,5,7,-1,-1,-1,-1,-1,-1,-1,7,9,5,7,8,9,3,11,2,-1,-1,-1,-1,-1,-1,-1,9,5,7,9,7,2,9,2,0,2,7,11,-1,-1,-1,-1,2,3,11,0,1,8,1,7,8,1,5,7,-1,-1,-1,-1,11,2,1,11,1,7,7,1,5,-1,-1,-1,-1,-1,-1,
-1,9,5,8,8,5,7,10,1,3,10,3,11,-1,-1,-1,-1,5,7,0,5,0,9,7,11,0,1,0,10,11,10,0,-1,11,10,0,11,0,3,10,5,0,8,0,7,5,7,0,-1,11,10,5,7,11,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,6,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,0,1,5,10,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,8,3,1,9,8,5,10,6,-1,-1,-1,-1,-1,-1,-1,1,6,5,2,6,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,6,5,1,2,6,3,0,8,-1,-1,-1,-1,-1,-1,-1,9,6,5,9,0,6,0,2,6,-1,-1,-1,-1,-1,-1,-1,5,9,8,5,8,2,5,2,6,3,2,8,-1,-1,-1,-1,2,3,11,10,6,
5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,0,8,11,2,0,10,6,5,-1,-1,-1,-1,-1,-1,-1,0,1,9,2,3,11,5,10,6,-1,-1,-1,-1,-1,-1,-1,5,10,6,1,9,2,9,11,2,9,8,11,-1,-1,-1,-1,6,3,11,6,5,3,5,1,3,-1,-1,-1,-1,-1,-1,-1,0,8,11,0,11,5,0,5,1,5,11,6,-1,-1,-1,-1,3,11,6,0,3,6,0,6,5,0,5,9,-1,-1,-1,-1,6,5,9,6,9,11,11,9,8,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,3,0,4,7,3,6,5,10,-1,-1,-1,-1,-1,-1,-1,1,9,0,5,10,6,8,4,7,-1,-1,-1,-1,-1,-1,-1,10,6,5,1,9,7,1,7,3,7,9,4,-1,-1,-1,-1,6,1,2,6,5,1,4,7,8,-1,-1,-1,-1,
-1,-1,-1,1,2,5,5,2,6,3,0,4,3,4,7,-1,-1,-1,-1,8,4,7,9,0,5,0,6,5,0,2,6,-1,-1,-1,-1,7,3,9,7,9,4,3,2,9,5,9,6,2,6,9,-1,3,11,2,7,8,4,10,6,5,-1,-1,-1,-1,-1,-1,-1,5,10,6,4,7,2,4,2,0,2,7,11,-1,-1,-1,-1,0,1,9,4,7,8,2,3,11,5,10,6,-1,-1,-1,-1,9,2,1,9,11,2,9,4,11,7,11,4,5,10,6,-1,8,4,7,3,11,5,3,5,1,5,11,6,-1,-1,-1,-1,5,1,11,5,11,6,1,0,11,7,11,4,0,4,11,-1,0,5,9,0,6,5,0,3,6,11,6,3,8,4,7,-1,6,5,9,6,9,11,4,7,9,7,11,9,-1,-1,-1,-1,10,4,9,6,4,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,10,6,4,9,10,0,8,3,-1,-1,-1,-1,-1,-1,-1,
10,0,1,10,6,0,6,4,0,-1,-1,-1,-1,-1,-1,-1,8,3,1,8,1,6,8,6,4,6,1,10,-1,-1,-1,-1,1,4,9,1,2,4,2,6,4,-1,-1,-1,-1,-1,-1,-1,3,0,8,1,2,9,2,4,9,2,6,4,-1,-1,-1,-1,0,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,3,2,8,2,4,4,2,6,-1,-1,-1,-1,-1,-1,-1,10,4,9,10,6,4,11,2,3,-1,-1,-1,-1,-1,-1,-1,0,8,2,2,8,11,4,9,10,4,10,6,-1,-1,-1,-1,3,11,2,0,1,6,0,6,4,6,1,10,-1,-1,-1,-1,6,4,1,6,1,10,4,8,1,2,1,11,8,11,1,-1,9,6,4,9,3,6,9,1,3,11,6,3,-1,-1,-1,-1,8,11,1,8,1,0,11,6,1,9,1,4,6,4,1,-1,3,11,6,3,6,0,0,6,4,-1,-1,-1,-1,-1,-1,-1,
6,4,8,11,6,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,10,6,7,8,10,8,9,10,-1,-1,-1,-1,-1,-1,-1,0,7,3,0,10,7,0,9,10,6,7,10,-1,-1,-1,-1,10,6,7,1,10,7,1,7,8,1,8,0,-1,-1,-1,-1,10,6,7,10,7,1,1,7,3,-1,-1,-1,-1,-1,-1,-1,1,2,6,1,6,8,1,8,9,8,6,7,-1,-1,-1,-1,2,6,9,2,9,1,6,7,9,0,9,3,7,3,9,-1,7,8,0,7,0,6,6,0,2,-1,-1,-1,-1,-1,-1,-1,7,3,2,6,7,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,11,10,6,8,10,8,9,8,6,7,-1,-1,-1,-1,2,0,7,2,7,11,0,9,7,6,7,10,9,10,7,-1,1,8,0,1,7,8,1,10,7,6,7,10,2,3,11,-1,11,2,1,11,1,7,10,6,1,6,7,1,-1,-1,-1,-1,
8,9,6,8,6,7,9,1,6,11,6,3,1,3,6,-1,0,9,1,11,6,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,8,0,7,0,6,3,11,0,11,6,0,-1,-1,-1,-1,7,11,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,8,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,1,9,11,7,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,1,9,8,3,1,11,7,6,-1,-1,-1,-1,-1,-1,-1,10,1,2,6,11,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,10,3,0,8,6,11,7,-1,-1,-1,-1,-1,-1,-1,2,9,0,2,10,9,6,11,7,-1,-1,-1,-1,-1,-1,-1,6,11,7,2,10,3,10,8,3,10,9,8,-1,-1,-1,-1,7,
2,3,6,2,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,7,0,8,7,6,0,6,2,0,-1,-1,-1,-1,-1,-1,-1,2,7,6,2,3,7,0,1,9,-1,-1,-1,-1,-1,-1,-1,1,6,2,1,8,6,1,9,8,8,7,6,-1,-1,-1,-1,10,7,6,10,1,7,1,3,7,-1,-1,-1,-1,-1,-1,-1,10,7,6,1,7,10,1,8,7,1,0,8,-1,-1,-1,-1,0,3,7,0,7,10,0,10,9,6,10,7,-1,-1,-1,-1,7,6,10,7,10,8,8,10,9,-1,-1,-1,-1,-1,-1,-1,6,8,4,11,8,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,6,11,3,0,6,0,4,6,-1,-1,-1,-1,-1,-1,-1,8,6,11,8,4,6,9,0,1,-1,-1,-1,-1,-1,-1,-1,9,4,6,9,6,3,9,3,1,11,3,6,-1,-1,-1,-1,6,8,4,6,11,8,2,10,1,-1,-1,-1,
-1,-1,-1,-1,1,2,10,3,0,11,0,6,11,0,4,6,-1,-1,-1,-1,4,11,8,4,6,11,0,2,9,2,10,9,-1,-1,-1,-1,10,9,3,10,3,2,9,4,3,11,3,6,4,6,3,-1,8,2,3,8,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,0,4,2,4,6,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,9,0,2,3,4,2,4,6,4,3,8,-1,-1,-1,-1,1,9,4,1,4,2,2,4,6,-1,-1,-1,-1,-1,-1,-1,8,1,3,8,6,1,8,4,6,6,10,1,-1,-1,-1,-1,10,1,0,10,0,6,6,0,4,-1,-1,-1,-1,-1,-1,-1,4,6,3,4,3,8,6,10,3,0,3,9,10,9,3,-1,10,9,4,6,10,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,5,7,6,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,5,11,7,6,
-1,-1,-1,-1,-1,-1,-1,5,0,1,5,4,0,7,6,11,-1,-1,-1,-1,-1,-1,-1,11,7,6,8,3,4,3,5,4,3,1,5,-1,-1,-1,-1,9,5,4,10,1,2,7,6,11,-1,-1,-1,-1,-1,-1,-1,6,11,7,1,2,10,0,8,3,4,9,5,-1,-1,-1,-1,7,6,11,5,4,10,4,2,10,4,0,2,-1,-1,-1,-1,3,4,8,3,5,4,3,2,5,10,5,2,11,7,6,-1,7,2,3,7,6,2,5,4,9,-1,-1,-1,-1,-1,-1,-1,9,5,4,0,8,6,0,6,2,6,8,7,-1,-1,-1,-1,3,6,2,3,7,6,1,5,0,5,4,0,-1,-1,-1,-1,6,2,8,6,8,7,2,1,8,4,8,5,1,5,8,-1,9,5,4,10,1,6,1,7,6,1,3,7,-1,-1,-1,-1,1,6,10,1,7,6,1,0,7,8,7,0,9,5,4,-1,4,0,10,4,10,5,0,3,10,6,10,7,3,7,10,
-1,7,6,10,7,10,8,5,4,10,4,8,10,-1,-1,-1,-1,6,9,5,6,11,9,11,8,9,-1,-1,-1,-1,-1,-1,-1,3,6,11,0,6,3,0,5,6,0,9,5,-1,-1,-1,-1,0,11,8,0,5,11,0,1,5,5,6,11,-1,-1,-1,-1,6,11,3,6,3,5,5,3,1,-1,-1,-1,-1,-1,-1,-1,1,2,10,9,5,11,9,11,8,11,5,6,-1,-1,-1,-1,0,11,3,0,6,11,0,9,6,5,6,9,1,2,10,-1,11,8,5,11,5,6,8,0,5,10,5,2,0,2,5,-1,6,11,3,6,3,5,2,10,3,10,5,3,-1,-1,-1,-1,5,8,9,5,2,8,5,6,2,3,8,2,-1,-1,-1,-1,9,5,6,9,6,0,0,6,2,-1,-1,-1,-1,-1,-1,-1,1,5,8,1,8,0,5,6,8,3,8,2,6,2,8,-1,1,5,6,2,1,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,
1,3,6,1,6,10,3,8,6,5,6,9,8,9,6,-1,10,1,0,10,0,6,9,5,0,5,6,0,-1,-1,-1,-1,0,3,8,5,6,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,10,5,6,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,7,5,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,11,5,10,11,7,5,8,3,0,-1,-1,-1,-1,-1,-1,-1,5,11,7,5,10,11,1,9,0,-1,-1,-1,-1,-1,-1,-1,10,7,5,10,11,7,9,8,1,8,3,1,-1,-1,-1,-1,11,1,2,11,7,1,7,5,1,-1,-1,-1,-1,-1,-1,-1,0,8,3,1,2,7,1,7,5,7,2,11,-1,-1,-1,-1,9,7,5,9,2,7,9,0,2,2,11,7,-1,-1,-1,-1,7,5,2,7,2,11,5,9,2,3,2,8,9,8,2,-1,2,5,10,2,3,5,3,7,5,-1,-1,
-1,-1,-1,-1,-1,8,2,0,8,5,2,8,7,5,10,2,5,-1,-1,-1,-1,9,0,1,5,10,3,5,3,7,3,10,2,-1,-1,-1,-1,9,8,2,9,2,1,8,7,2,10,2,5,7,5,2,-1,1,3,5,3,7,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,8,7,0,7,1,1,7,5,-1,-1,-1,-1,-1,-1,-1,9,0,3,9,3,5,5,3,7,-1,-1,-1,-1,-1,-1,-1,9,8,7,5,9,7,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,5,8,4,5,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,5,0,4,5,11,0,5,10,11,11,3,0,-1,-1,-1,-1,0,1,9,8,4,10,8,10,11,10,4,5,-1,-1,-1,-1,10,11,4,10,4,5,11,3,4,9,4,1,3,1,4,-1,2,5,1,2,8,5,2,11,8,4,5,8,-1,-1,-1,-1,0,4,11,0,11,3,4,5,11,
2,11,1,5,1,11,-1,0,2,5,0,5,9,2,11,5,4,5,8,11,8,5,-1,9,4,5,2,11,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,5,10,3,5,2,3,4,5,3,8,4,-1,-1,-1,-1,5,10,2,5,2,4,4,2,0,-1,-1,-1,-1,-1,-1,-1,3,10,2,3,5,10,3,8,5,4,5,8,0,1,9,-1,5,10,2,5,2,4,1,9,2,9,4,2,-1,-1,-1,-1,8,4,5,8,5,3,3,5,1,-1,-1,-1,-1,-1,-1,-1,0,4,5,1,0,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,8,4,5,8,5,3,9,0,5,0,3,5,-1,-1,-1,-1,9,4,5,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,11,7,4,9,11,9,10,11,-1,-1,-1,-1,-1,-1,-1,0,8,3,4,9,7,9,11,7,9,10,11,-1,-1,-1,-1,1,10,11,1,11,
4,1,4,0,7,4,11,-1,-1,-1,-1,3,1,4,3,4,8,1,10,4,7,4,11,10,11,4,-1,4,11,7,9,11,4,9,2,11,9,1,2,-1,-1,-1,-1,9,7,4,9,11,7,9,1,11,2,11,1,0,8,3,-1,11,7,4,11,4,2,2,4,0,-1,-1,-1,-1,-1,-1,-1,11,7,4,11,4,2,8,3,4,3,2,4,-1,-1,-1,-1,2,9,10,2,7,9,2,3,7,7,4,9,-1,-1,-1,-1,9,10,7,9,7,4,10,2,7,8,7,0,2,0,7,-1,3,7,10,3,10,2,7,4,10,1,10,0,4,0,10,-1,1,10,2,8,7,4,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,7,1,3,-1,-1,-1,-1,-1,-1,-1,4,9,1,4,1,7,0,8,1,8,7,1,-1,-1,-1,-1,4,0,3,7,4,3,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,4,8,7,-1,-1,-1,
-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,9,10,8,10,11,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,11,9,10,-1,-1,-1,-1,-1,-1,-1,0,1,10,0,10,8,8,10,11,-1,-1,-1,-1,-1,-1,-1,3,1,10,11,3,10,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,2,11,1,11,9,9,11,8,-1,-1,-1,-1,-1,-1,-1,3,0,9,3,9,11,1,2,9,2,11,9,-1,-1,-1,-1,0,2,11,8,0,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,3,2,11,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,10,8,9,-1,-1,-1,-1,-1,-1,-1,9,10,2,0,9,2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,2,3,8,2,8,10,0,1,8,1,10,8,-1,-1,-1,-1,1,10,
2,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,3,8,9,1,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,9,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,0,3,8,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1]);THREE.MD2Character=function(){function a(a,b){for(var d=new THREE.UVMapping,i=[],h=0;h<b.length;h++)i[h]=THREE.ImageUtils.loadTexture(a+b[h],d,c),i[h].name=b[h];return i}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:!0,shading:THREE.SmoothShading,map:c,morphTargets:!0,morphNormals:!0,metal:!1}),i=new THREE.MeshPhongMaterial({color:16777215,specular:1118481,
shininess:50,wireframe:!1,shading:THREE.SmoothShading,map:b,morphTargets:!0,morphNormals:!0,metal:!1});i.wrapAround=!0;var h=new THREE.MorphAnimMesh(a,i);h.rotation.y=-Math.PI/2;h.castShadow=!0;h.receiveShadow=!0;h.materialTexture=i;h.materialWireframe=c;h.parseAnimations();h.playAnimation(a.firstAnimation,d.animationFPS);h.baseDuration=h.duration;return h}function c(){d.loadCounter-=1;if(0===d.loadCounter)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.root=new THREE.Object3D;
this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.activeAnimation=null;this.onLoadComplete=function(){};this.loadCounter=0;this.loadParts=function(e){this.loadCounter=2*e.weapons.length+e.skins.length+1;for(var g=[],f=0;f<e.weapons.length;f++)g[f]=e.weapons[f][1];this.skinsBody=a(e.baseUrl+"skins/",e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",g);g=new THREE.JSONLoader;g.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*
a.boundingBox.min.y;var e=b(a,d.skinsBody[0]);e.scale.set(d.scale,d.scale,d.scale);d.root.add(e);d.meshBody=e;d.activeAnimation=a.firstAnimation;c()});for(var i=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=!1;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;c()}},f=0;f<e.weapons.length;f++)g.load(e.baseUrl+e.weapons[f][0],i(f,e.weapons[f][0]))};this.setPlaybackRate=function(a){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/
a);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/a)};this.setWireframe=function(a){a?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialTexture))};this.setSkin=function(a){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=
this.skinsBody[a])};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=!1;if(a=this.weapons[a])a.visible=!0,this.meshWeapon=a,a.playAnimation(this.activeAnimation,this.animationFPS),this.meshWeapon.baseDuration=this.meshWeapon.duration,this.meshWeapon.time=this.meshBody.time,this.meshWeapon.duration=this.meshBody.duration};this.setAnimation=function(a){this.meshBody&&(this.meshBody.playAnimation(a,this.animationFPS),this.meshBody.baseDuration=this.meshBody.duration);
this.meshWeapon&&(this.meshWeapon.playAnimation(a,this.animationFPS),this.meshWeapon.baseDuration=this.meshWeapon.duration,this.meshWeapon.time=this.meshBody.time);this.activeAnimation=a};this.update=function(a){this.meshBody&&this.meshBody.updateAnimation(1E3*a);this.meshWeapon&&this.meshWeapon.updateAnimation(1E3*a)}};THREE.MD2CharacterComplex=function(){function a(a,b){for(var d=new THREE.UVMapping,i=[],h=0;h<b.length;h++)i[h]=THREE.ImageUtils.loadTexture(a+b[h],d,c),i[h].name=b[h];return i}function b(a,b){a.computeMorphNormals();var c=THREE.ImageUtils.generateDataTexture(1,1,new THREE.Color(16777215)),c=new THREE.MeshPhongMaterial({color:16755200,specular:1118481,shininess:50,wireframe:!0,shading:THREE.SmoothShading,map:c,morphTargets:!0,morphNormals:!0,metal:!0}),i=new THREE.MeshPhongMaterial({color:16777215,
specular:1118481,shininess:50,wireframe:!1,shading:THREE.SmoothShading,map:b,morphTargets:!0,morphNormals:!0,metal:!0});i.wrapAround=!0;var h=new THREE.MorphBlendMesh(a,i);h.rotation.y=-Math.PI/2;h.materialTexture=i;h.materialWireframe=c;h.autoCreateAnimations(d.animationFPS);return h}function c(){d.loadCounter-=1;if(0===d.loadCounter)d.onLoadComplete()}var d=this;this.scale=1;this.animationFPS=6;this.transitionFrames=15;this.maxSpeed=275;this.maxReverseSpeed=-275;this.frontDecceleration=this.backAcceleration=
this.frontAcceleration=600;this.angularSpeed=2.5;this.root=new THREE.Object3D;this.controls=this.meshWeapon=this.meshBody=null;this.skinsBody=[];this.skinsWeapon=[];this.weapons=[];this.currentSkin=void 0;this.onLoadComplete=function(){};this.meshes=[];this.animations={};this.bodyOrientation=this.speed=this.loadCounter=0;this.walkSpeed=this.maxSpeed;this.crouchSpeed=0.5*this.maxSpeed;this.oldAnimation=this.activeAnimation=null;this.enableShadows=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].castShadow=
a,this.meshes[b].receiveShadow=a};this.setVisible=function(a){for(var b=0;b<this.meshes.length;b++)this.meshes[b].visible=a,this.meshes[b].visible=a};this.shareParts=function(a){this.animations=a.animations;this.walkSpeed=a.walkSpeed;this.crouchSpeed=a.crouchSpeed;this.skinsBody=a.skinsBody;this.skinsWeapon=a.skinsWeapon;var c=b(a.meshBody.geometry,this.skinsBody[0]);c.scale.set(this.scale,this.scale,this.scale);this.root.position.y=a.root.position.y;this.root.add(c);this.meshBody=c;this.meshes.push(c);
for(c=0;c<a.weapons.length;c++){var d=b(a.weapons[c].geometry,this.skinsWeapon[c]);d.scale.set(this.scale,this.scale,this.scale);d.visible=!1;d.name=a.weapons[c].name;this.root.add(d);this.meshWeapon=this.weapons[c]=d;this.meshes.push(d)}};this.loadParts=function(e){this.animations=e.animations;this.walkSpeed=e.walkSpeed;this.crouchSpeed=e.crouchSpeed;this.loadCounter=2*e.weapons.length+e.skins.length+1;for(var g=[],f=0;f<e.weapons.length;f++)g[f]=e.weapons[f][1];this.skinsBody=a(e.baseUrl+"skins/",
e.skins);this.skinsWeapon=a(e.baseUrl+"skins/",g);g=new THREE.JSONLoader;g.load(e.baseUrl+e.body,function(a){a.computeBoundingBox();d.root.position.y=-d.scale*a.boundingBox.min.y;a=b(a,d.skinsBody[0]);a.scale.set(d.scale,d.scale,d.scale);d.root.add(a);d.meshBody=a;d.meshes.push(a);c()});for(var i=function(a,e){return function(f){f=b(f,d.skinsWeapon[a]);f.scale.set(d.scale,d.scale,d.scale);f.visible=!1;f.name=e;d.root.add(f);d.weapons[a]=f;d.meshWeapon=f;d.meshes.push(f);c()}},f=0;f<e.weapons.length;f++)g.load(e.baseUrl+
e.weapons[f][0],i(f,e.weapons[f][0]))};this.setPlaybackRate=function(a){this.meshBody&&(this.meshBody.duration=this.meshBody.baseDuration/a);this.meshWeapon&&(this.meshWeapon.duration=this.meshWeapon.baseDuration/a)};this.setWireframe=function(a){a?(this.meshBody&&(this.meshBody.material=this.meshBody.materialWireframe),this.meshWeapon&&(this.meshWeapon.material=this.meshWeapon.materialWireframe)):(this.meshBody&&(this.meshBody.material=this.meshBody.materialTexture),this.meshWeapon&&(this.meshWeapon.material=
this.meshWeapon.materialTexture))};this.setSkin=function(a){this.meshBody&&!1===this.meshBody.material.wireframe&&(this.meshBody.material.map=this.skinsBody[a],this.currentSkin=a)};this.setWeapon=function(a){for(var b=0;b<this.weapons.length;b++)this.weapons[b].visible=!1;if(a=this.weapons[a])a.visible=!0,this.meshWeapon=a,this.activeAnimation&&(a.playAnimation(this.activeAnimation),this.meshWeapon.setAnimationTime(this.activeAnimation,this.meshBody.getAnimationTime(this.activeAnimation)))};this.setAnimation=
function(a){a!==this.activeAnimation&&a&&(this.meshBody&&(this.meshBody.setAnimationWeight(a,0),this.meshBody.playAnimation(a),this.oldAnimation=this.activeAnimation,this.activeAnimation=a,this.blendCounter=this.transitionFrames),this.meshWeapon&&(this.meshWeapon.setAnimationWeight(a,0),this.meshWeapon.playAnimation(a)))};this.update=function(a){this.controls&&this.updateMovementModel(a);this.animations&&(this.updateBehaviors(a),this.updateAnimations(a))};this.updateAnimations=function(a){var b=1;
0<this.blendCounter&&(b=(this.transitionFrames-this.blendCounter)/this.transitionFrames,this.blendCounter-=1);this.meshBody&&(this.meshBody.update(a),this.meshBody.setAnimationWeight(this.activeAnimation,b),this.meshBody.setAnimationWeight(this.oldAnimation,1-b));this.meshWeapon&&(this.meshWeapon.update(a),this.meshWeapon.setAnimationWeight(this.activeAnimation,b),this.meshWeapon.setAnimationWeight(this.oldAnimation,1-b))};this.updateBehaviors=function(){var a=this.controls,b=this.animations,c,d;
a.crouch?(c=b.crouchMove,d=b.crouchIdle):(c=b.move,d=b.idle);a.jump&&(d=c=b.jump);a.attack&&(d=a.crouch?c=b.crouchAttack:c=b.attack);(a.moveForward||a.moveBackward||a.moveLeft||a.moveRight)&&this.activeAnimation!==c&&this.setAnimation(c);Math.abs(this.speed)<0.2*this.maxSpeed&&!a.moveLeft&&!a.moveRight&&!a.moveForward&&!a.moveBackward&&this.activeAnimation!==d&&this.setAnimation(d);a.moveForward&&(this.meshBody&&(this.meshBody.setAnimationDirectionForward(this.activeAnimation),this.meshBody.setAnimationDirectionForward(this.oldAnimation)),
this.meshWeapon&&(this.meshWeapon.setAnimationDirectionForward(this.activeAnimation),this.meshWeapon.setAnimationDirectionForward(this.oldAnimation)));a.moveBackward&&(this.meshBody&&(this.meshBody.setAnimationDirectionBackward(this.activeAnimation),this.meshBody.setAnimationDirectionBackward(this.oldAnimation)),this.meshWeapon&&(this.meshWeapon.setAnimationDirectionBackward(this.activeAnimation),this.meshWeapon.setAnimationDirectionBackward(this.oldAnimation)))};this.updateMovementModel=function(a){var b=
this.controls;this.maxSpeed=b.crouch?this.crouchSpeed:this.walkSpeed;this.maxReverseSpeed=-this.maxSpeed;b.moveForward&&(this.speed=THREE.Math.clamp(this.speed+a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveBackward&&(this.speed=THREE.Math.clamp(this.speed-a*this.backAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveLeft&&(this.bodyOrientation+=a*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));b.moveRight&&
(this.bodyOrientation-=a*this.angularSpeed,this.speed=THREE.Math.clamp(this.speed+1*a*this.frontAcceleration,this.maxReverseSpeed,this.maxSpeed));!b.moveForward&&!b.moveBackward&&(0<this.speed?(b=1===this.speed/this.maxSpeed?1:-Math.pow(2,-10*(this.speed/this.maxSpeed))+1,this.speed=THREE.Math.clamp(this.speed-b*a*this.frontDecceleration,0,this.maxSpeed)):(b=1===this.speed/this.maxReverseSpeed?1:-Math.pow(2,-10*(this.speed/this.maxReverseSpeed))+1,this.speed=THREE.Math.clamp(this.speed+b*a*this.backAcceleration,
this.maxReverseSpeed,0)));a*=this.speed;this.root.position.x+=Math.sin(this.bodyOrientation)*a;this.root.position.z+=Math.cos(this.bodyOrientation)*a;this.root.rotation.y=this.bodyOrientation}};THREE.ParametricGeometries={klein:function(a,b){var b=b*Math.PI,a=a*2*Math.PI,b=2*b,c,d,e;b<Math.PI?(c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(b)*Math.cos(a),e=-8*Math.sin(b)-2*(1-Math.cos(b)/2)*Math.sin(b)*Math.cos(a)):(c=3*Math.cos(b)*(1+Math.sin(b))+2*(1-Math.cos(b)/2)*Math.cos(a+Math.PI),e=-8*Math.sin(b));d=-2*(1-Math.cos(b)/2)*Math.sin(a);return new THREE.Vector3(c,d,e)},plane:function(a,b){return function(c,d){return new THREE.Vector3(c*a,0,d*b)}},mobius:function(a,b){var a=
a-0.5,c=2*Math.PI*b,d,e;d=Math.cos(c)*(2+a*Math.cos(c/2));e=Math.sin(c)*(2+a*Math.cos(c/2));c=a*Math.sin(c/2);return new THREE.Vector3(d,e,c)},mobius3d:function(a,b){var a=a*Math.PI,b=b*2*Math.PI,a=2*a,c=a/2,d,e;d=0.125*Math.cos(b)*Math.cos(c)-0.65*Math.sin(b)*Math.sin(c);e=0.125*Math.cos(b)*Math.sin(c)+0.65*Math.sin(b)*Math.cos(c);c=(2.25+d)*Math.sin(a);d=(2.25+d)*Math.cos(a);return new THREE.Vector3(d,c,e)}};
THREE.ParametricGeometries.TubeGeometry=function(a,b,c,d,e,g){this.path=a;this.segments=b||64;this.radius=c||1;this.segmentsRadius=d||8;this.closed=e||!1;g&&(this.debug=new THREE.Object3D);var f=this,i,h,j,k=this.segments+1,m,l,q,p=new THREE.Vector3,r,e=new THREE.TubeGeometry.FrenetFrames(a,b,e),s=e.tangents,t=e.normals,x=e.binormals;this.tangents=s;this.normals=t;this.binormals=x;THREE.ParametricGeometry.call(this,function(b,d){d*=2*Math.PI;r=b*(k-1);r=Math.floor(r);q=a.getPointAt(b);i=s[r];h=t[r];
j=x[r];f.debug&&(f.debug.add(new THREE.ArrowHelper(i,q,c,255)),f.debug.add(new THREE.ArrowHelper(h,q,c,16711680)),f.debug.add(new THREE.ArrowHelper(j,q,c,65280)));m=-f.radius*Math.cos(d);l=f.radius*Math.sin(d);p.copy(q);p.x+=m*h.x+l*j.x;p.y+=m*h.y+l*j.y;p.z+=m*h.z+l*j.z;return p.clone()},b,d)};THREE.ParametricGeometries.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.TorusKnotGeometry=function(a,b,c,d,e,g,f){this.radius=a||200;this.tube=b||40;this.segmentsR=c||64;this.segmentsT=d||8;this.p=e||2;this.q=g||3;this.heightScale=f||1;var i=new (THREE.Curve.create(function(){},function(b){var b=b*2*Math.PI,c=(1+0.5*Math.cos(g*b))*Math.cos(e*b),d=(1+0.5*Math.cos(g*b))*Math.sin(e*b),b=0.5*Math.sin(g*b);return(new THREE.Vector3(c,d*f,b)).multiplyScalar(a)}));THREE.ParametricGeometries.TubeGeometry.call(this,i,c,b,d,!0,!1)};
THREE.ParametricGeometries.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometries.SphereGeometry=function(a,b,c){THREE.ParametricGeometry.call(this,function(b,c){var b=b*Math.PI,c=c*2*Math.PI,g=a*Math.sin(b)*Math.cos(c),f=a*Math.sin(b)*Math.sin(c),i=a*Math.cos(b);return new THREE.Vector3(g,f,i)},b,c,!1)};THREE.ParametricGeometries.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);
THREE.ParametricGeometries.PlaneGeometry=function(a,b,c,d){THREE.ParametricGeometry.call(this,function(c,d){return new THREE.Vector3(c*a,0,d*b)},c,d)};THREE.ParametricGeometries.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShaderGodRays={godrays_generate:{uniforms:{tInput:{type:"t",value:null},fStepSize:{type:"f",value:1},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"#define TAPS_PER_PASS 6.0\nvarying vec2 vUv;\nuniform sampler2D tInput;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fStepSize;\nvoid main() {\nvec2 delta = vSunPositionScreenSpace - vUv;\nfloat dist = length( delta );\nvec2 stepv = fStepSize * delta / dist;\nfloat iters = dist/fStepSize;\nvec2 uv = vUv.xy;\nfloat col = 0.0;\nif ( 0.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 1.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 2.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 3.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 4.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\nif ( 5.0 <= iters && uv.y < 1.0 ) col += texture2D( tInput, uv ).r;\nuv += stepv;\ngl_FragColor = vec4( col/TAPS_PER_PASS );\ngl_FragColor.a = 1.0;\n}"},
godrays_combine:{uniforms:{tColors:{type:"t",value:null},tGodRays:{type:"t",value:null},fGodRayIntensity:{type:"f",value:0.69},vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform sampler2D tColors;\nuniform sampler2D tGodRays;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fGodRayIntensity;\nvoid main() {\ngl_FragColor = texture2D( tColors, vUv ) + fGodRayIntensity * vec4( 1.0 - texture2D( tGodRays, vUv ).r );\ngl_FragColor.a = 1.0;\n}"},
godrays_fake_sun:{uniforms:{vSunPositionScreenSpace:{type:"v2",value:new THREE.Vector2(0.5,0.5)},fAspect:{type:"f",value:1},sunColor:{type:"c",value:new THREE.Color(16772608)},bgColor:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nuniform vec2 vSunPositionScreenSpace;\nuniform float fAspect;\nuniform vec3 sunColor;\nuniform vec3 bgColor;\nvoid main() {\nvec2 diff = vUv - vSunPositionScreenSpace;\ndiff.x *= fAspect;\nfloat prop = clamp( length( diff ) / 0.5, 0.0, 1.0 );\nprop = 0.35 * pow( 1.0 - prop, 3.0 );\ngl_FragColor.xyz = mix( sunColor, bgColor, 1.0 - prop );\ngl_FragColor.w = 1.0;\n}"}};THREE.ShaderSkin={skinSimple:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableBump:{type:"i",value:0},enableSpecular:{type:"i",value:0},tDiffuse:{type:"t",value:null},tBeckmann:{type:"t",value:null},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",
value:0.75},bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},specularMap:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},uWrapRGB:{type:"v3",value:new THREE.Vector3(0.75,0.375,0.1875)}}]),fragmentShader:["#define USE_BUMPMAP\n#extension GL_OES_standard_derivatives : enable\nuniform bool enableBump;\nuniform bool enableSpecular;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform vec3 uWrapRGB;\nuniform sampler2D tDiffuse;\nuniform sampler2D tBeckmann;\nuniform sampler2D specularMap;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse.rgb *= colDiffuse.rgb;\ngl_FragColor = gl_FragColor * colDiffuse;\nvec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nfloat specularStrength;\nif ( enableSpecular ) {\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n} else {\nspecularStrength = 1.0;\n}\n#ifdef USE_BUMPMAP\nif ( enableBump ) normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat pointDiffuseWeightFull = max( dot( normal, lVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, lVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), uWrapRGB );\nfloat pointSpecularWeight = KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\npointTotal    += lDistance * uDiffuseColor * pointLightColor[ i ] * pointDiffuseWeight;\nspecularTotal += lDistance * uSpecularColor * pointLightColor[ i ] * pointSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirTotal = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeightFull = max( dot( normal, dirVector ), 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3 ( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), uWrapRGB );\nfloat dirSpecularWeight =  KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\ndirTotal \t   += uDiffuseColor * directionalLightColor[ i ] * dirDiffuseWeight;\nspecularTotal += uSpecularColor * directionalLightColor[ i ] * dirSpecularWeight * specularStrength;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiTotal = vec3( 0.0 );\nfor ( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiTotal += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVector, viewPosition, uRoughness, uSpecularBrightness );\nvec3 lVectorGround = -lVector;\nhemiSpecularWeight += KS_Skin_Specular( normal, lVectorGround, viewPosition, uRoughness, uSpecularBrightness );\nspecularTotal += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * specularStrength;\n}\n#endif\nvec3 totalLight = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalLight += hemiTotal;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalLight + ambientLightColor * uAmbientColor ) + specularTotal;",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["uniform vec4 offsetRepeat;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\ngl_Position = projectionMatrix * mvPosition;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")},skin:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,{passID:{type:"i",value:0},tDiffuse:{type:"t",value:null},tNormal:{type:"t",value:null},tBlur1:{type:"t",value:null},tBlur2:{type:"t",value:null},tBlur3:{type:"t",value:null},tBlur4:{type:"t",value:null},tBeckmann:{type:"t",value:null},uNormalScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},
uAmbientColor:{type:"c",value:new THREE.Color(328965)},uOpacity:{type:"f",value:1},uRoughness:{type:"f",value:0.15},uSpecularBrightness:{type:"f",value:0.75}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uOpacity;\nuniform float uRoughness;\nuniform float uSpecularBrightness;\nuniform int passID;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tBlur1;\nuniform sampler2D tBlur2;\nuniform sampler2D tBlur3;\nuniform sampler2D tBlur4;\nuniform sampler2D tBeckmann;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.fog_pars_fragment,"float fresnelReflectance( vec3 H, vec3 V, float F0 ) {\nfloat base = 1.0 - dot( V, H );\nfloat exponential = pow( base, 5.0 );\nreturn exponential + F0 * ( 1.0 - exponential );\n}\nfloat KS_Skin_Specular( vec3 N,\nvec3 L,\nvec3 V,\nfloat m,\nfloat rho_s\n) {\nfloat result = 0.0;\nfloat ndotl = dot( N, L );\nif( ndotl > 0.0 ) {\nvec3 h = L + V;\nvec3 H = normalize( h );\nfloat ndoth = dot( N, H );\nfloat PH = pow( 2.0 * texture2D( tBeckmann, vec2( ndoth, m ) ).x, 10.0 );\nfloat F = fresnelReflectance( H, V, 0.028 );\nfloat frSpec = max( PH * F / dot( h, h ), 0.0 );\nresult = ndotl * rho_s * frSpec;\n}\nreturn result;\n}\nvoid main() {\ngl_FragColor = vec4( 1.0 );\nvec4 mColor = vec4( uDiffuseColor, uOpacity );\nvec4 mSpecular = vec4( uSpecularColor, uOpacity );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nvec4 colDiffuse = texture2D( tDiffuse, vUv );\ncolDiffuse *= colDiffuse;\ngl_FragColor = gl_FragColor * colDiffuse;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec3 specularTotal = vec3( 0.0 );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointTotal = vec4( vec3( 0.0 ), 1.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec3 pointVector = normalize( vPointLight[ i ].xyz );\nfloat pointDistance = vPointLight[ i ].w;\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\npointTotal  += pointDistance * vec4( pointLightColor[ i ], 1.0 ) * ( mColor * pointDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += pointDistance * mSpecular.xyz * pointLightColor[ i ] * KS_Skin_Specular( normal, pointVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirTotal = vec4( vec3( 0.0 ), 1.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\ndirTotal  += vec4( directionalLightColor[ i ], 1.0 ) * ( mColor * dirDiffuseWeight );\nif ( passID == 1 )\nspecularTotal += mSpecular.xyz * directionalLightColor[ i ] * KS_Skin_Specular( normal, dirVector, viewPosition, uRoughness, uSpecularBrightness );\n}\n#endif\nvec4 totalLight = vec4( vec3( 0.0 ), uOpacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirTotal;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointTotal;\n#endif\ngl_FragColor = gl_FragColor * totalLight;\nif ( passID == 0 ) {\ngl_FragColor = vec4( sqrt( gl_FragColor.xyz ), gl_FragColor.w );\n} else if ( passID == 1 ) {\n#ifdef VERSION1\nvec3 nonblurColor = sqrt( gl_FragColor.xyz );\n#else\nvec3 nonblurColor = gl_FragColor.xyz;\n#endif\nvec3 blur1Color = texture2D( tBlur1, vUv ).xyz;\nvec3 blur2Color = texture2D( tBlur2, vUv ).xyz;\nvec3 blur3Color = texture2D( tBlur3, vUv ).xyz;\nvec3 blur4Color = texture2D( tBlur4, vUv ).xyz;\ngl_FragColor = vec4( vec3( 0.22,  0.437, 0.635 ) * nonblurColor + \nvec3( 0.101, 0.355, 0.365 ) * blur1Color + \nvec3( 0.119, 0.208, 0.0 )   * blur2Color + \nvec3( 0.114, 0.0,   0.0 )   * blur3Color + \nvec3( 0.444, 0.0,   0.0 )   * blur4Color\n, gl_FragColor.w );\ngl_FragColor.xyz *= pow( colDiffuse.xyz, vec3( 0.5 ) );\ngl_FragColor.xyz += ambientLightColor * uAmbientColor * colDiffuse.xyz + specularTotal;\n#ifndef VERSION1\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif\n}",
THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}",
vertexShaderUV:"attribute vec4 tangent;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvViewPosition = -mvPosition.xyz;\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\ngl_Position = vec4( uv.x * 2.0 - 1.0, uv.y * 2.0 - 1.0, 0.0, 1.0 );\n}"},
beckmann:{uniforms:{},vertexShader:"varying vec2 vUv;\nvoid main() {\nvUv = uv;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"varying vec2 vUv;\nfloat PHBeckmann( float ndoth, float m ) {\nfloat alpha = acos( ndoth );\nfloat ta = tan( alpha );\nfloat val = 1.0 / ( m * m * pow( ndoth, 4.0 ) ) * exp( -( ta * ta ) / ( m * m ) );\nreturn val;\n}\nfloat KSTextureCompute( vec2 tex ) {\nreturn 0.5 * pow( PHBeckmann( tex.x, tex.y ), 0.1 );\n}\nvoid main() {\nfloat x = KSTextureCompute( vUv );\ngl_FragColor = vec4( x, x, x, 1.0 );\n}"}};THREE.ShaderTerrain={terrain:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableDiffuse1:{type:"i",value:0},enableDiffuse2:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},tDiffuse1:{type:"t",value:null},tDiffuse2:{type:"t",value:null},tDetail:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tDisplacement:{type:"t",value:null},uNormalScale:{type:"f",value:1},
uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},uRepeatBase:{type:"v2",value:new THREE.Vector2(1,1)},uRepeatOverlay:{type:"v2",value:new THREE.Vector2(1,1)},uOffset:{type:"v2",value:new THREE.Vector2(0,0)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse1;\nuniform bool enableDiffuse2;\nuniform bool enableSpecular;\nuniform sampler2D tDiffuse1;\nuniform sampler2D tDiffuse2;\nuniform sampler2D tDetail;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tDisplacement;\nuniform float uNormalScale;\nuniform vec2 uRepeatOverlay;\nuniform vec2 uRepeatBase;\nuniform vec2 uOffset;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;",
THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec2 uvOverlay = uRepeatOverlay * vUv + uOffset;\nvec2 uvBase = uRepeatBase * vUv;\nvec3 normalTex = texture2D( tDetail, uvOverlay ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse1 && enableDiffuse2 ) {\nvec4 colDiffuse1 = texture2D( tDiffuse1, uvOverlay );\nvec4 colDiffuse2 = texture2D( tDiffuse2, uvOverlay );\n#ifdef GAMMA_INPUT\ncolDiffuse1.xyz *= colDiffuse1.xyz;\ncolDiffuse2.xyz *= colDiffuse2.xyz;\n#endif\ngl_FragColor = gl_FragColor * mix ( colDiffuse1, colDiffuse2, 1.0 - texture2D( tDisplacement, uvBase ) );\n } else if( enableDiffuse1 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse1, uvOverlay );\n} else if( enableDiffuse2 ) {\ngl_FragColor = gl_FragColor * texture2D( tDiffuse2, uvOverlay );\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, uvOverlay ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDistance = lDistance;\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointDiffuseWeight = max( dot( normal, lVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nhemiDiffuse += uDiffuseColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nfloat hemiSpecularWeight = 0.0;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nhemiSpecularWeight += specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\nhemiSpecular += uSpecularColor * mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight ) * hemiSpecularWeight * hemiDiffuseWeight;\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uRepeatBase;\nuniform sampler2D tNormal;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_vertex,
"void main() {\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec2 uvBase = uv * uRepeatBase;\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uvBase ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec3 displacedPosition = normal * df + position;\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\n#else\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;\nvViewPosition = -mvPosition.xyz;\nvec3 normalTex = texture2D( tNormal, uvBase ).xyz * 2.0 - 1.0;\nvNormal = normalMatrix * normalTex;",
THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n")}};THREE.ShaderToon={toon1:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)}},vertexShader:"varying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize ( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvNormal = normalize( normalMatrix * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvRefract = refract( normalize( I ), worldNormal, 1.02 );\ngl_Position = projectionMatrix * mvPosition;\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvarying vec3 vRefract;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\nfloat intensity = smoothstep( - 0.5, 1.0, pow( length(lightWeighting), 20.0 ) );\nintensity += length(lightWeighting) * 0.2;\nfloat cameraWeighting = dot( normalize( vNormal ), vRefract );\nintensity += pow( 1.0 - length( cameraWeighting ), 6.0 );\nintensity = intensity * 0.2 + 0.3;\nif ( intensity < 0.50 ) {\ngl_FragColor = vec4( 2.0 * intensity * uBaseColor, 1.0 );\n} else {\ngl_FragColor = vec4( 1.0 - 2.0 * ( 1.0 - intensity ) * ( 1.0 - uBaseColor ), 1.0 );\n}\n}"},
toon2:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(15658734)},uLineColor1:{type:"c",value:new THREE.Color(8421504)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat camera = max( dot( normalize( vNormal ), vec3( 0.0, 0.0, 1.0 ) ), 0.4);\nfloat light = max( dot( normalize( vNormal ), uDirLightPos ), 0.0);\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(uAmbientLightColor + uDirLightColor * light) < 1.00 ) {\ngl_FragColor *= vec4( uLineColor1, 1.0 );\n}\nif ( length(uAmbientLightColor + uDirLightColor * camera) < 0.50 ) {\ngl_FragColor *= vec4( uLineColor2, 1.0 );\n}\n}"},
hatching:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)},uLineColor2:{type:"c",value:new THREE.Color(0)},uLineColor3:{type:"c",value:new THREE.Color(0)},uLineColor4:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",
fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( mod(gl_FragCoord.x + gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.75 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor2, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif (mod(gl_FragCoord.x + gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor3, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.3465 ) {\nif (mod(gl_FragCoord.x - gl_FragCoord.y - 5.0, 10.0) == 0.0) {\ngl_FragColor = vec4( uLineColor4, 1.0 );\n}\n}\n}"},
dotted:{uniforms:{uDirLightPos:{type:"v3",value:new THREE.Vector3},uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uBaseColor:{type:"c",value:new THREE.Color(16777215)},uLineColor1:{type:"c",value:new THREE.Color(0)}},vertexShader:"varying vec3 vNormal;\nvoid main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\n}",fragmentShader:"uniform vec3 uBaseColor;\nuniform vec3 uLineColor1;\nuniform vec3 uLineColor2;\nuniform vec3 uLineColor3;\nuniform vec3 uLineColor4;\nuniform vec3 uDirLightPos;\nuniform vec3 uDirLightColor;\nuniform vec3 uAmbientLightColor;\nvarying vec3 vNormal;\nvoid main() {\nfloat directionalLightWeighting = max( dot( normalize(vNormal), uDirLightPos ), 0.0);\nvec3 lightWeighting = uAmbientLightColor + uDirLightColor * directionalLightWeighting;\ngl_FragColor = vec4( uBaseColor, 1.0 );\nif ( length(lightWeighting) < 1.00 ) {\nif ( ( mod(gl_FragCoord.x, 4.001) + mod(gl_FragCoord.y, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\nif ( length(lightWeighting) < 0.50 ) {\nif ( ( mod(gl_FragCoord.x + 2.0, 4.001) + mod(gl_FragCoord.y + 2.0, 4.0) ) > 6.00 ) {\ngl_FragColor = vec4( uLineColor1, 1.0 );\n}\n}\n}"}};THREE.DeferredShaderChunk={unpackFloat:"vec3 float_to_vec3( float data ) {\nvec3 uncompressed;\nuncompressed.x = fract( data );\nfloat zInt = floor( data / 255.0 );\nuncompressed.z = fract( zInt / 255.0 );\nuncompressed.y = fract( floor( data - ( zInt * 255.0 ) ) / 255.0 );\nreturn uncompressed;\n}",computeVertexPositionVS:"vec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );\nvec4 normalDepth = texture2D( samplerNormalDepth, texCoord );\nfloat z = normalDepth.w;\nif ( z == 0.0 ) discard;\nvec2 xy = texCoord * 2.0 - 1.0;\nvec4 vertexPositionProjected = vec4( xy, z, 1.0 );\nvec4 vertexPositionVS = matProjInverse * vertexPositionProjected;\nvertexPositionVS.xyz /= vertexPositionVS.w;\nvertexPositionVS.w = 1.0;",
computeNormal:"vec3 normal = normalDepth.xyz * 2.0 - 1.0;",unpackColorMap:"vec4 colorMap = texture2D( samplerColor, texCoord );\nvec3 albedo = float_to_vec3( abs( colorMap.x ) );\nvec3 specularColor = float_to_vec3( abs( colorMap.y ) );\nfloat shininess = abs( colorMap.z );\nfloat wrapAround = sign( colorMap.z );\nfloat additiveSpecular = sign( colorMap.y );",computeDiffuse:"float dotProduct = dot( normal, lightVector );\nfloat diffuseFull = max( dotProduct, 0.0 );\nvec3 diffuse;\nif ( wrapAround < 0.0 ) {\nfloat diffuseHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nconst vec3 wrapRGB = vec3( 1.0, 1.0, 1.0 );\ndiffuse = mix( vec3( diffuseFull ), vec3( diffuseHalf ), wrapRGB );\n} else {\ndiffuse = vec3( diffuseFull );\n}",
computeSpecular:"vec3 halfVector = normalize( lightVector - normalize( vertexPositionVS.xyz ) );\nfloat dotNormalHalf = max( dot( normal, halfVector ), 0.0 );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specularColor + vec3( 1.0 - specularColor ) * pow( 1.0 - dot( lightVector, halfVector ), 5.0 );\nvec3 specular = schlick * max( pow( dotNormalHalf, shininess ), 0.0 ) * diffuse * specularNormalization;",combine:"vec3 light = lightIntensity * lightColor;\ngl_FragColor = vec4( light * ( albedo * diffuse + specular ), attenuation );"};
THREE.ShaderDeferred={color:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap,{emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapAround:{type:"f",value:1},additiveSpecular:{type:"f",value:1},samplerNormalDepth:{type:"t",value:null},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600}}]),fragmentShader:["uniform vec3 diffuse;\nuniform vec3 specular;\nuniform vec3 emissive;\nuniform float shininess;\nuniform float wrapAround;\nuniform float additiveSpecular;",
THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,"#ifdef USE_ENVMAP\nvarying vec3 vWorldPosition;\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\nuniform bool useRefract;\nuniform float refractionRatio;\nuniform sampler2D samplerNormalDepth;\nuniform float viewHeight;\nuniform float viewWidth;\n#endif",THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,
THREE.ShaderChunk.specularmap_pars_fragment,"const float unit = 255.0/256.0;\nfloat vec3_to_float( vec3 data ) {\nhighp float compressed = fract( data.x * unit ) + floor( data.y * unit * 255.0 ) + floor( data.z * unit * 255.0 ) * 255.0;\nreturn compressed;\n}\nvoid main() {\nconst float opacity = 1.0;\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,
"#ifdef USE_ENVMAP\nvec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );\nvec4 normalDepth = texture2D( samplerNormalDepth, texCoord );\nvec3 normal = normalDepth.xyz * 2.0 - 1.0;\nvec3 reflectVec;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",
THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"const float compressionScale = 0.999;\nvec3 diffuseMapColor;\n#ifdef USE_MAP\ndiffuseMapColor = texelColor.xyz;\n#else\ndiffuseMapColor = vec3( 1.0 );\n#endif\ngl_FragColor.x = vec3_to_float( compressionScale * gl_FragColor.xyz );\nif ( additiveSpecular < 0.0 ) {\ngl_FragColor.y = vec3_to_float( compressionScale * specular );\n} else {\ngl_FragColor.y = vec3_to_float( compressionScale * specular * diffuseMapColor );\n}\ngl_FragColor.y *= additiveSpecular;\ngl_FragColor.z = wrapAround * shininess;\n#ifdef USE_COLOR\ngl_FragColor.w = vec3_to_float( compressionScale * emissive * diffuseMapColor * vColor );\n#else\ngl_FragColor.w = vec3_to_float( compressionScale * emissive * diffuseMapColor );\n#endif\n}"].join("\n"),
vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"#ifdef USE_ENVMAP\nvarying vec3 vWorldPosition;\n#endif\nvoid main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,
THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"#ifdef USE_ENVMAP\nvWorldPosition = worldPosition.xyz;\n#endif\n}"].join("\n")},normalDepth:{uniforms:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)}},fragmentShader:["#ifdef USE_BUMPMAP\n#extension GL_OES_standard_derivatives : enable\n\nvarying vec2 vUv;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.bumpmap_pars_fragment,"#endif\nvarying vec3 normalView;\nvarying vec4 clipPos;\nvoid main() {\nvec3 normal = normalize( normalView );\n#ifdef USE_BUMPMAP\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\ngl_FragColor.xyz = normal * 0.5 + 0.5;\ngl_FragColor.w = clipPos.z / clipPos.w;\n}"].join("\n"),
vertexShader:["varying vec3 normalView;\nvarying vec4 clipPos;\n#ifdef USE_BUMPMAP\nvarying vec2 vUv;\nvarying vec3 vViewPosition;\nuniform vec4 offsetRepeat;\n#endif",THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,
"normalView = normalize( normalMatrix * objectNormal );\n#ifdef USE_BUMPMAP\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\nvViewPosition = -mvPosition.xyz;\n#endif\nclipPos = gl_Position;\n}"].join("\n")},composite:{uniforms:{samplerLight:{type:"t",value:null},brightness:{type:"f",value:1}},fragmentShader:"varying vec2 texCoord;\nuniform sampler2D samplerLight;\nuniform float brightness;\n#ifdef TONEMAP_UNCHARTED\nconst float A = 0.15;\nconst float B = 0.50;\nconst float C = 0.10;\nconst float D = 0.20;\nconst float E = 0.02;\nconst float F = 0.30;\nconst float W = 11.2;\nvec3 Uncharted2Tonemap( vec3 x ) {\nreturn ( ( x * ( A * x + C * B ) + D * E ) / ( x * ( A * x + B ) + D * F ) ) - E / F;\n}\n#endif\nvoid main() {\nvec3 inColor = texture2D( samplerLight, texCoord ).xyz;\ninColor *= brightness;\nvec3 outColor;\n#if defined( TONEMAP_SIMPLE )\noutColor = sqrt( inColor );\n#elif defined( TONEMAP_LINEAR )\noutColor = pow( inColor, vec3( 1.0 / 2.2 ) );\n#elif defined( TONEMAP_REINHARD )\ninColor = inColor / ( 1.0 + inColor );\noutColor = pow( inColor, vec3( 1.0 / 2.2 ) );\n#elif defined( TONEMAP_FILMIC )\nvec3 x = max( vec3( 0.0 ), inColor - 0.004 );\noutColor = ( x * ( 6.2 * x + 0.5 ) ) / ( x * ( 6.2 * x + 1.7 ) + 0.06 );\n#elif defined( TONEMAP_UNCHARTED )\nfloat ExposureBias = 2.0;\nvec3 curr = Uncharted2Tonemap( ExposureBias * inColor );\nvec3 whiteScale = vec3( 1.0 ) / Uncharted2Tonemap( vec3( W ) );\nvec3 color = curr * whiteScale;\noutColor = pow( color, vec3( 1.0 / 2.2 ) );\n#else\noutColor = inColor;\n#endif\ngl_FragColor = vec4( outColor, 1.0 );\n}",
vertexShader:"varying vec2 texCoord;\nvoid main() {\nvec4 pos = vec4( sign( position.xy ), 0.0, 1.0 );\ntexCoord = pos.xy * vec2( 0.5 ) + 0.5;\ngl_Position = pos;\n}"},pointLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",
value:1},lightRadius:{type:"f",value:1}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightRadius;\nuniform float lightIntensity;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColor;\nuniform vec3 lightPositionVS;\nuniform mat4 matProjInverse;",THREE.DeferredShaderChunk.unpackFloat,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,"vec3 lightVector = lightPositionVS - vertexPositionVS.xyz;\nfloat distance = length( lightVector );\nif ( distance > lightRadius ) discard;",
THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"lightVector = normalize( lightVector );",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,"float cutoff = 0.3;\nfloat denom = distance / lightRadius + 1.0;\nfloat attenuation = 1.0 / ( denom * denom );\nattenuation = ( attenuation - cutoff ) / ( 1.0 - cutoff );\nattenuation = max( attenuation, 0.0 );\nattenuation *= attenuation;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:"void main() { \nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"},
spotLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightDistance:{type:"f",value:1},lightAngle:{type:"f",value:1}},fragmentShader:["uniform vec3 lightPositionVS;\nuniform vec3 lightDirectionVS;\nuniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform float lightAngle;\nuniform float lightIntensity;\nuniform vec3 lightColor;\nuniform mat4 matProjInverse;",
THREE.DeferredShaderChunk.unpackFloat,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = normalize( lightPositionVS.xyz - vertexPositionVS.xyz );\nfloat rho = dot( lightDirectionVS, lightVector );\nfloat rhoMax = cos( lightAngle * 0.5 );\nif ( rho <= rhoMax ) discard;\nfloat theta = rhoMax + 0.0001;\nfloat phi = rhoMax + 0.05;\nfloat falloff = 4.0;\nfloat spot = 0.0;\nif ( rho >= phi ) {\nspot = 1.0;\n} else if ( rho <= theta ) {\nspot = 0.0;\n} else { \nspot = pow( ( rho - theta ) / ( phi - theta ), falloff );\n}",
THREE.DeferredShaderChunk.computeDiffuse,"diffuse *= spot;",THREE.DeferredShaderChunk.computeSpecular,"const float attenuation = 1.0;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},directionalLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightDirectionVS:{type:"v3",
value:new THREE.Vector3(0,1,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightRadius;\nuniform float lightIntensity;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColor;\nuniform vec3 lightDirectionVS;\nuniform mat4 matProjInverse;",THREE.DeferredShaderChunk.unpackFloat,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,
THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVS;",THREE.DeferredShaderChunk.computeDiffuse,THREE.DeferredShaderChunk.computeSpecular,"const float attenuation = 1.0;",THREE.DeferredShaderChunk.combine,"}"].join("\n"),vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},hemisphereLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",
value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightDirectionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightColorSky:{type:"c",value:new THREE.Color(0)},lightColorGround:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1}},fragmentShader:["uniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightRadius;\nuniform float lightIntensity;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform vec3 lightColorSky;\nuniform vec3 lightColorGround;\nuniform vec3 lightDirectionVS;\nuniform mat4 matProjInverse;",
THREE.DeferredShaderChunk.unpackFloat,"void main() {",THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"vec3 lightVector = lightDirectionVS;\nfloat dotProduct = dot( normal, lightVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( lightColorGround, lightColorSky, hemiDiffuseWeight );\nvec3 diffuse = hemiColor;\nvec3 hemiHalfVectorSky = normalize( lightVector - vertexPositionVS.xyz );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lightVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround - vertexPositionVS.xyz );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specularColor + vec3( 1.0 - specularColor ) * pow( 1.0 - dot( lightVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specularColor + vec3( 1.0 - specularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nvec3 specular = hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\ngl_FragColor = vec4( lightIntensity * ( albedo * diffuse + specular ), 1.0 );\n}"].join("\n"),
vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},areaLight:{uniforms:{samplerNormalDepth:{type:"t",value:null},samplerColor:{type:"t",value:null},matProjInverse:{type:"m4",value:new THREE.Matrix4},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600},lightPositionVS:{type:"v3",value:new THREE.Vector3(0,1,0)},lightNormalVS:{type:"v3",value:new THREE.Vector3(0,-1,0)},lightRightVS:{type:"v3",value:new THREE.Vector3(1,0,0)},lightUpVS:{type:"v3",value:new THREE.Vector3(1,
0,0)},lightColor:{type:"c",value:new THREE.Color(0)},lightIntensity:{type:"f",value:1},lightWidth:{type:"f",value:1},lightHeight:{type:"f",value:1},constantAttenuation:{type:"f",value:1.5},linearAttenuation:{type:"f",value:0.5},quadraticAttenuation:{type:"f",value:0.1}},fragmentShader:["uniform vec3 lightPositionVS;\nuniform vec3 lightNormalVS;\nuniform vec3 lightRightVS;\nuniform vec3 lightUpVS;\nuniform sampler2D samplerColor;\nuniform sampler2D samplerNormalDepth;\nuniform float lightWidth;\nuniform float lightHeight;\nuniform float constantAttenuation;\nuniform float linearAttenuation;\nuniform float quadraticAttenuation;\nuniform float lightIntensity;\nuniform vec3 lightColor;\nuniform float viewHeight;\nuniform float viewWidth;\nuniform mat4 matProjInverse;",
THREE.DeferredShaderChunk.unpackFloat,"vec3 projectOnPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {\nreturn point - dot( point - planeCenter, planeNorm ) * planeNorm;\n}\nbool sideOfPlane( vec3 point, vec3 planeCenter, vec3 planeNorm ) {\nreturn ( dot( point - planeCenter, planeNorm ) >= 0.0 );\n}\nvec3 linePlaneIntersect( vec3 lp, vec3 lv, vec3 pc, vec3 pn ) {\nreturn lp + lv * ( dot( pn, pc - lp ) / dot( pn, lv ) );\n}\nfloat calculateAttenuation( float dist ) {\nreturn ( 1.0 / ( constantAttenuation + linearAttenuation * dist + quadraticAttenuation * dist * dist ) );\n}\nvoid main() {",
THREE.DeferredShaderChunk.computeVertexPositionVS,THREE.DeferredShaderChunk.computeNormal,THREE.DeferredShaderChunk.unpackColorMap,"float w = lightWidth;\nfloat h = lightHeight;\nvec3 proj = projectOnPlane( vertexPositionVS.xyz, lightPositionVS, lightNormalVS );\nvec3 dir = proj - lightPositionVS;\nvec2 diagonal = vec2( dot( dir, lightRightVS ), dot( dir, lightUpVS ) );\nvec2 nearest2D = vec2( clamp( diagonal.x, -w, w ), clamp( diagonal.y, -h, h ) );\nvec3 nearestPointInside = vec3( lightPositionVS ) + ( lightRightVS * nearest2D.x + lightUpVS * nearest2D.y );\nvec3 lightDir = normalize( nearestPointInside - vertexPositionVS.xyz );\nfloat NdotL = max( dot( lightNormalVS, -lightDir ), 0.0 );\nfloat NdotL2 = max( dot( normal, lightDir ), 0.0 );\nif ( NdotL2 * NdotL > 0.0 ) {\nvec3 diffuse = vec3( sqrt( NdotL * NdotL2 ) );\nvec3 specular = vec3( 0.0 );\nvec3 R = reflect( normalize( -vertexPositionVS.xyz ), normal );\nvec3 E = linePlaneIntersect( vertexPositionVS.xyz, R, vec3( lightPositionVS ), lightNormalVS );\nfloat specAngle = dot( R, lightNormalVS );\nif ( specAngle > 0.0 ) {\nvec3 dirSpec = E - vec3( lightPositionVS );\nvec2 dirSpec2D = vec2( dot( dirSpec, lightRightVS ), dot( dirSpec, lightUpVS ) );\nvec2 nearestSpec2D = vec2( clamp( dirSpec2D.x, -w, w ), clamp( dirSpec2D.y, -h, h ) );\nfloat specFactor = 1.0 - clamp( length( nearestSpec2D - dirSpec2D ) * 0.05 * shininess, 0.0, 1.0 );\nspecular = specularColor * specFactor * specAngle * diffuse;\n}\nfloat dist = distance( vertexPositionVS.xyz, nearestPointInside );\nfloat attenuation = calculateAttenuation( dist );",
THREE.DeferredShaderChunk.combine,"} else {\ndiscard;\n}\n}"].join("\n"),vertexShader:"void main() {\ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"},emissiveLight:{uniforms:{samplerColor:{type:"t",value:null},viewWidth:{type:"f",value:800},viewHeight:{type:"f",value:600}},fragmentShader:["uniform sampler2D samplerColor;\nuniform float viewHeight;\nuniform float viewWidth;",THREE.DeferredShaderChunk.unpackFloat,"void main() {\nvec2 texCoord = gl_FragCoord.xy / vec2( viewWidth, viewHeight );\nvec4 colorMap = texture2D( samplerColor, texCoord );\nvec3 emissiveColor = float_to_vec3( abs( colorMap.w ) );\ngl_FragColor = vec4( emissiveColor, 1.0 );\n}"].join("\n"),
vertexShader:"void main() { \ngl_Position = vec4( sign( position.xy ), 0.0, 1.0 );\n}"}};var SPARKS={Emitter:function(a){this._counter=a?a:new SPARKS.SteadyCounter(10);this._particles=[];this._initializers=[];this._actions=[];this._activities=[];this._handlers=[];this.callbacks={}}};
SPARKS.Emitter.prototype={_TIMESTEP:15,_timer:null,_lastTime:null,_timerStep:10,_velocityVerlet:!0,start:function(){this._lastTime=Date.now();this._timer=setTimeout(this.step,this._timerStep,this);this._isRunning=!0},stop:function(){this._isRunning=!1;clearTimeout(this._timer)},isRunning:function(){return this._isRunning&1},step:function(a){var b=Date.now(),c=b-a._lastTime;if(this._velocityVerlet)a.update(c/1E3),a._lastTime=b;else{var d=20*a._TIMESTEP;for(c>=d&&(c=d);c>=a._TIMESTEP;)a.update(a._TIMESTEP/
1E3),c-=a._TIMESTEP;a._lastTime=b-c}a._isRunning&&setTimeout(a.step,a._timerStep,a)},update:function(a){var b,c,d=this._counter.updateEmitter(this,a);for(b=0;b<d;b++)this.createParticle();d=this._activities.length;for(b=0;b<d;b++)this._activities[b].update(this,a);var d=this._actions.length,e,g,f=this._particles.length;for(c=0;c<d;c++){g=this._actions[c];for(b=0;b<f;++b)e=this._particles[b],g.update(this,e,a)}for(b=f;b--;)e=this._particles[b],e.isDead?(this._particles.splice(b,1),this.dispatchEvent("dead",
e),SPARKS.VectorPool.release(e.position),SPARKS.VectorPool.release(e.velocity)):this.dispatchEvent("updated",e);this.dispatchEvent("loopUpdated")},createParticle:function(){var a=new SPARKS.Particle,b=this._initializers.length,c;for(c=0;c<b;c++)this._initializers[c].initialize(this,a);this._particles.push(a);this.dispatchEvent("created",a);return a},addInitializer:function(a){this._initializers.push(a)},addAction:function(a){this._actions.push(a)},removeInitializer:function(a){a=this._initializers.indexOf(a);
-1<a&&this._initializers.splice(a,1)},removeAction:function(a){a=this._actions.indexOf(a);-1<a&&this._actions.splice(a,1)},addCallback:function(a,b){this.callbacks[a]=b},dispatchEvent:function(a,b){var c=this.callbacks[a];c&&c(b)}};SPARKS.EVENT_PARTICLE_CREATED="created";SPARKS.EVENT_PARTICLE_UPDATED="updated";SPARKS.EVENT_PARTICLE_DEAD="dead";SPARKS.EVENT_LOOP_UPDATED="loopUpdated";SPARKS.SteadyCounter=function(a){this.rate=a;this.leftover=0};
SPARKS.SteadyCounter.prototype.updateEmitter=function(a,b){var c=b*this.rate+this.leftover,d=Math.floor(c);this.leftover=c-d;return d};SPARKS.ShotCounter=function(a){this.particles=a;this.used=!1};SPARKS.ShotCounter.prototype.updateEmitter=function(){if(this.used)return 0;this.used=!0;return this.particles};
SPARKS.Particle=function(){this.age=this.lifetime=0;this.energy=1;this.isDead=!1;this.target=null;this.position=SPARKS.VectorPool.get().set(0,0,0);this.velocity=SPARKS.VectorPool.get().set(0,0,0);this._oldvelocity=SPARKS.VectorPool.get().set(0,0,0)};SPARKS.Action=function(){this._priority=0};SPARKS.Age=function(a){this._easing=null==a?TWEEN.Easing.Linear.None:a};
SPARKS.Age.prototype.update=function(a,b,c){b.age+=c;b.age>=b.lifetime?(b.energy=0,b.isDead=!0):(a=this._easing(b.age/b.lifetime),b.energy=-1*a+1)};SPARKS.Move=function(){};SPARKS.Move.prototype.update=function(a,b,c){var a=b.position,d=b.velocity,b=b._oldvelocity;this._velocityVerlet?(a.x+=0.5*(d.x+b.x)*c,a.y+=0.5*(d.y+b.y)*c,a.z+=0.5*(d.z+b.z)*c):(a.x+=d.x*c,a.y+=d.y*c,a.z+=d.z*c)};SPARKS.DeathZone=function(a){this.zone=a};
SPARKS.DeathZone.prototype.update=function(a,b){this.zone.contains(b.position)&&(b.isDead=!0)};SPARKS.ActionZone=function(a,b){this.action=a;this.zone=b};SPARKS.ActionZone.prototype.update=function(a,b,c){this.zone.contains(b.position)&&this.action.update(a,b,c)};SPARKS.Accelerate=function(a,b,c){this.acceleration=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};
SPARKS.Accelerate.prototype.update=function(a,b,c){var a=this.acceleration,d=b.velocity;b._oldvelocity.set(d.x,d.y,d.z);d.x+=a.x*c;d.y+=a.y*c;d.z+=a.z*c};SPARKS.AccelerateFactor=function(a){this.factor=a};SPARKS.AccelerateFactor.prototype.update=function(a,b,c){var a=this.factor,b=b.velocity,d=b.length();0<d&&(c=a*c/d+1,b.multiplyScalar(c))};SPARKS.AccelerateVelocity=function(a){this.factor=a};
SPARKS.AccelerateVelocity.prototype.update=function(a,b){var c=this.factor,d=b.velocity;d.z+=-d.x*c;d.y+=d.z*c;d.x+=d.y*c};SPARKS.RandomDrift=function(a,b,c){this.drift=a instanceof THREE.Vector3?a:new THREE.Vector3(a,b,c)};SPARKS.RandomDrift.prototype.update=function(a,b,c){a=this.drift;b=b.velocity;b.x+=(Math.random()-0.5)*a.x*c;b.y+=(Math.random()-0.5)*a.y*c;b.z+=(Math.random()-0.5)*a.z*c};SPARKS.Zone=function(){};SPARKS.PointZone=function(a){this.pos=a};
SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.PointZone=function(a){this.pos=a};SPARKS.PointZone.prototype.getLocation=function(){return this.pos};SPARKS.LineZone=function(a,b){this.start=a;this.end=b;this._length=b.clone().sub(a)};SPARKS.LineZone.prototype.getLocation=function(){var a=this._length.clone();a.multiplyScalar(Math.random());return a.add(this.start)};SPARKS.ParallelogramZone=function(a,b,c){this.corner=a;this.side1=b;this.side2=c};
SPARKS.ParallelogramZone.prototype.getLocation=function(){var a=this.side1.clone().multiplyScalar(Math.random()),b=this.side2.clone().multiplyScalar(Math.random());a.add(b);return a.add(this.corner)};SPARKS.CubeZone=function(a,b,c,d){this.position=a;this.x=b;this.y=c;this.z=d};SPARKS.CubeZone.prototype.getLocation=function(){var a=this.position.clone();a.x+=Math.random()*this.x;a.y+=Math.random()*this.y;a.z+=Math.random()*this.z;return a};
SPARKS.CubeZone.prototype.contains=function(a){var b=this.position.x,c=this.position.y,d=this.position.z,e=this.x,g=this.y,f=this.z;0>e&&(b+=e,e=Math.abs(e));0>g&&(c+=g,g=Math.abs(g));0>f&&(d+=f,f=Math.abs(f));b=a.x-b;c=a.y-c;a=a.z-d;return 0<b&&b<e&&0<c&&c<g&&0<a&&a<f?!0:!1};SPARKS.SphereCapZone=function(a,b,c,d,e,g){this.x=a;this.y=b;this.z=c;this.minr=d;this.maxr=e;this.angle=g};
SPARKS.SphereCapZone.prototype.getLocation=function(){var a=2*Math.PI*SPARKS.Utils.random(),b=SPARKS.Utils.random(),a=SPARKS.VectorPool.get().set(b*Math.cos(a),-1/Math.tan(this.angle*SPARKS.Utils.DEGREE_TO_RADIAN),b*Math.sin(a)),b=this.minr-(this.minr-this.maxr)*Math.random();a.multiplyScalar(b);a.__markedForReleased=!0;return a};SPARKS.Lifetime=function(a,b){this._min=a;this._max=b?b:a};SPARKS.Lifetime.prototype.initialize=function(a,b){b.lifetime=this._min+SPARKS.Utils.random()*(this._max-this._min)};
SPARKS.Position=function(a){this.zone=a};SPARKS.Position.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.position.set(c.x,c.y,c.z)};SPARKS.Velocity=function(a){this.zone=a};SPARKS.Velocity.prototype.initialize=function(a,b){var c=this.zone.getLocation();b.velocity.set(c.x,c.y,c.z);c.__markedForReleased&&(SPARKS.VectorPool.release(c),c.__markedForReleased=!1)};SPARKS.Target=function(a,b){this.target=a;this.callback=b};
SPARKS.Target.prototype.initialize=function(a,b){b.target=this.callback?this.callback():this.target};SPARKS.VectorPool={__pools:[],get:function(){return 0<this.__pools.length?this.__pools.pop():this._addToPool()},release:function(a){this.__pools.push(a)},_addToPool:function(){for(var a=0;100>a;a++)this.__pools.push(new THREE.Vector3);return new THREE.Vector3}};
SPARKS.Utils={random:function(){return Math.random()},DEGREE_TO_RADIAN:Math.PI/180,TWOPI:2*Math.PI,getPerpendiculars:function(a){var b=this.getPerpendicular(a),a=a.cross(b);a.normalize();return[b,a]},getPerpendicular:function(a){return 0==a.x?new THREE.Vector3D(1,0,0):(new THREE.Vector3(a.y,-a.x,0)).normalize()}};THREE.UVsUtils={};THREE.UVsUtils.CylinderUVGenerator=function(){this.uRepeat=1;this.lengthCache=this.targetGeometry=null};
THREE.UVsUtils.CylinderUVGenerator.prototype={generateTopUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateTopUV,generateBottomUV:THREE.ExtrudeGeometry.WorldUVGenerator.generateBottomUV,generateSideWallUV:function(a,b,c,d,e,g,f,i,h,j,k,m){this.targetGeometry!==a&&this.prepare(a,c);b=this.lengthCache;a=h/j;h=(h+1)/j;k=b[k];m=b[m];k<m&&(k+=1);k*=this.uRepeat;m*=this.uRepeat;return[new THREE.Vector2(k,a),new THREE.Vector2(m,a),new THREE.Vector2(m,h),new THREE.Vector2(k,h)]},prepare:function(a,b){for(var c,
d,e=[],g=0,f=b.length,i=0;i<f;i++){c=b[i];d=b[(i+1)%f];var h=c.x-d.x;c=c.y-d.y;h=Math.sqrt(h*h+c*c);e.push(g);g+=h}this.normalizeArray(e,g);this.targetGeometry=a;this.lengthCache=e},normalizeArray:function(a,b){for(var c=a.length,d=0;d<c;d++)a[d]/=b;return a}};
THREE.UVsDebug=function(a){var b=a.faces,c=a.faceVertexUvs[0];console.log("debugging geometry",a);a=document.createElement("canvas");a.width=1024;a.height=1024;var d=a.getContext("2d");d.lineWidth=1;d.strokeStyle="rgba(0,0,0,0.8)";d.fillStyle="rgba(255,255,255, 1.0)";d.fillRect(0,0,1024,1024);var e,g,f,i,h,j,k=new THREE.Vector2,m=new THREE.Vector2;f=0;for(i=c.length;f<i;f++){e=c[f];d.beginPath();k.set(0,0);h=0;for(j=e.length;h<j;h++)g=e[h],k.x+=g.x,k.y+=g.y,0==h?d.moveTo(1024*g.x,1024*g.y):d.lineTo(1024*
g.x,1024*g.y);d.closePath();d.stroke();k.divideScalar(j);d.font="12pt Arial bold";d.fillStyle="rgba(0,0,0,0.8)";d.fillText(f,1024*k.x,1024*k.y);d.font="8pt Arial bold";d.fillStyle="rgba(30,30,0,0.8)";h=0;for(j=e.length;h<j;h++)g=e[h],m.set(g.x,g.y).sub(k).divideScalar(4),m.x=g.x-m.x,m.y=g.y-m.y,d.fillText("abcd"[h]+":"+b[f]["abcd"[h]],1024*m.x,1024*m.y)}return a};var ImprovedNoise=function(){function a(a){return a*a*a*(a*(6*a-15)+10)}function b(a,b,c){return b+a*(c-b)}function c(a,b,c,d){var a=a&15,e=8>a?b:c,b=4>a?c:12==a||14==a?b:d;return(0==(a&1)?e:-e)+(0==(a&2)?b:-b)}for(var d=[151,160,137,91,90,15,131,13,201,95,96,53,194,233,7,225,140,36,103,30,69,142,8,99,37,240,21,10,23,190,6,148,247,120,234,75,0,26,197,62,94,252,219,203,117,35,11,32,57,177,33,88,237,149,56,87,174,20,125,136,171,168,68,175,74,165,71,134,139,48,27,166,77,146,158,231,83,111,229,122,60,
211,133,230,220,105,92,41,55,46,245,40,244,102,143,54,65,25,63,161,1,216,80,73,209,76,132,187,208,89,18,169,200,196,135,130,116,188,159,86,164,100,109,198,173,186,3,64,52,217,226,250,124,123,5,202,38,147,118,126,255,82,85,212,207,206,59,227,47,16,58,17,182,189,28,42,223,183,170,213,119,248,152,2,44,154,163,70,221,153,101,155,167,43,172,9,129,22,39,253,19,98,108,110,79,113,224,232,178,185,112,104,218,246,97,228,251,34,242,193,238,210,144,12,191,179,162,241,81,51,145,235,249,14,239,107,49,192,214,31,
181,199,106,157,184,84,204,176,115,121,50,45,127,4,150,254,138,236,205,93,222,114,67,29,24,72,243,141,128,195,78,66,215,61,156,180],e=0;256>e;e++)d[256+e]=d[e];return{noise:function(e,f,i){var h=~~e,j=~~f,k=~~i,m=h&255,l=j&255,q=k&255,e=e-h,f=f-j,i=i-k,h=e-1,j=f-1,k=i-1,p=a(e),r=a(f),s=a(i),t=d[m]+l,x=d[t]+q,t=d[t+1]+q,l=d[m+1]+l,m=d[l]+q,q=d[l+1]+q;return b(s,b(r,b(p,c(d[x],e,f,i),c(d[m],h,f,i)),b(p,c(d[t],e,j,i),c(d[q],h,j,i))),b(r,b(p,c(d[x+1],e,f,k),c(d[m+1],h,f,i-1)),b(p,c(d[t+1],e,j,k),c(d[q+
1],h,j,k))))}}};var SimplexNoise=function(a){void 0==a&&(a=Math);this.grad3=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]];this.grad4=[[0,1,1,1],[0,1,1,-1],[0,1,-1,1],[0,1,-1,-1],[0,-1,1,1],[0,-1,1,-1],[0,-1,-1,1],[0,-1,-1,-1],[1,0,1,1],[1,0,1,-1],[1,0,-1,1],[1,0,-1,-1],[-1,0,1,1],[-1,0,1,-1],[-1,0,-1,1],[-1,0,-1,-1],[1,1,0,1],[1,1,0,-1],[1,-1,0,1],[1,-1,0,-1],[-1,1,0,1],[-1,1,0,-1],[-1,-1,0,1],[-1,-1,0,-1],[1,1,1,0],[1,1,-1,0],[1,-1,1,0],[1,-1,-1,0],
[-1,1,1,0],[-1,1,-1,0],[-1,-1,1,0],[-1,-1,-1,0]];this.p=[];for(var b=0;256>b;b++)this.p[b]=Math.floor(256*a.random());this.perm=[];for(b=0;512>b;b++)this.perm[b]=this.p[b&255];this.simplex=[[0,1,2,3],[0,1,3,2],[0,0,0,0],[0,2,3,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,3,0],[0,2,1,3],[0,0,0,0],[0,3,1,2],[0,3,2,1],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,3,2,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[1,2,0,3],[0,0,0,0],[1,3,0,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,3,0,1],[2,
3,1,0],[1,0,2,3],[1,0,3,2],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,3,1],[0,0,0,0],[2,1,3,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[0,0,0,0],[2,0,1,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,0,1,2],[3,0,2,1],[0,0,0,0],[3,1,2,0],[2,1,0,3],[0,0,0,0],[0,0,0,0],[0,0,0,0],[3,1,0,2],[0,0,0,0],[3,2,0,1],[3,2,1,0]]};SimplexNoise.prototype.dot=function(a,b,c){return a[0]*b+a[1]*c};SimplexNoise.prototype.dot3=function(a,b,c,d){return a[0]*b+a[1]*c+a[2]*d};
SimplexNoise.prototype.dot4=function(a,b,c,d,e){return a[0]*b+a[1]*c+a[2]*d+a[3]*e};
SimplexNoise.prototype.noise=function(a,b){var c,d,e;e=0.5*(Math.sqrt(3)-1);e*=a+b;var g=Math.floor(a+e),f=Math.floor(b+e),i=(3-Math.sqrt(3))/6;e=(g+f)*i;c=a-(g-e);var h=b-(f-e),j,k;c>h?(j=1,k=0):(j=0,k=1);d=c-j+i;var m=h-k+i;e=c-1+2*i;var i=h-1+2*i,l=g&255,f=f&255,g=this.perm[l+this.perm[f]]%12;j=this.perm[l+j+this.perm[f+k]]%12;k=this.perm[l+1+this.perm[f+1]]%12;f=0.5-c*c-h*h;0>f?c=0:(f*=f,c=f*f*this.dot(this.grad3[g],c,h));h=0.5-d*d-m*m;0>h?d=0:(h*=h,d=h*h*this.dot(this.grad3[j],d,m));m=0.5-e*
e-i*i;0>m?e=0:(m*=m,e=m*m*this.dot(this.grad3[k],e,i));return 70*(c+d+e)};
SimplexNoise.prototype.noise3d=function(a,b,c){var d,e,g,f=(a+b+c)*(1/3),i=Math.floor(a+f),h=Math.floor(b+f),j=Math.floor(c+f),f=1/6;g=(i+h+j)*f;d=a-(i-g);e=b-(h-g);var k=c-(j-g),m,l,q,p,r,s;d>=e?e>=k?(m=1,q=l=0,r=p=1,s=0):(d>=k?(m=1,q=l=0):(l=m=0,q=1),p=1,r=0,s=1):e<k?(l=m=0,q=1,p=0,s=r=1):d<k?(m=0,l=1,p=q=0,s=r=1):(m=0,l=1,q=0,r=p=1,s=0);var t=d-m+f,x=e-l+f,v=k-q+f;g=d-p+2*f;var a=e-r+2*f,w=k-s+2*f,c=d-1+3*f,b=e-1+3*f,f=k-1+3*f,i=i&255,y=h&255,D=j&255,h=this.perm[i+this.perm[y+this.perm[D]]]%12,
j=this.perm[i+m+this.perm[y+l+this.perm[D+q]]]%12;p=this.perm[i+p+this.perm[y+r+this.perm[D+s]]]%12;i=this.perm[i+1+this.perm[y+1+this.perm[D+1]]]%12;r=0.6-d*d-e*e-k*k;0>r?d=0:(r*=r,d=r*r*this.dot3(this.grad3[h],d,e,k));e=0.6-t*t-x*x-v*v;0>e?e=0:(e*=e,e=e*e*this.dot3(this.grad3[j],t,x,v));t=0.6-g*g-a*a-w*w;0>t?g=0:(t*=t,g=t*t*this.dot3(this.grad3[p],g,a,w));a=0.6-c*c-b*b-f*f;0>a?c=0:(a*=a,c=a*a*this.dot3(this.grad3[i],c,b,f));return 32*(d+e+g+c)};
SimplexNoise.prototype.noise4d=function(a,b,c,d){var e=this.grad4,g=this.simplex,f=this.perm,i=(Math.sqrt(5)-1)/4,h=(5-Math.sqrt(5))/20,j,k,i=(a+b+c+d)*i,m=Math.floor(a+i),l=Math.floor(b+i),q=Math.floor(c+i),p=Math.floor(d+i),i=(m+l+q+p)*h,a=a-(m-i);j=b-(l-i);k=c-(q-i);var r=d-(p-i),d=(a>j?32:0)+(a>k?16:0)+(j>k?8:0)+(a>r?4:0)+(j>r?2:0)+(k>r?1:0),s,t,x,v,w,y,D,C,u,E,z,H;s=3<=g[d][0]?1:0;t=3<=g[d][1]?1:0;x=3<=g[d][2]?1:0;v=3<=g[d][3]?1:0;w=2<=g[d][0]?1:0;y=2<=g[d][1]?1:0;D=2<=g[d][2]?1:0;C=2<=g[d][3]?
1:0;u=1<=g[d][0]?1:0;E=1<=g[d][1]?1:0;z=1<=g[d][2]?1:0;H=1<=g[d][3]?1:0;var O=a-s+h,F=j-t+h,R=k-x+h,I=r-v+h,K=a-w+2*h,L=j-y+2*h,S=k-D+2*h,ca=r-C+2*h,b=a-u+3*h,i=j-E+3*h,Y=k-z+3*h,N=r-H+3*h,g=a-1+4*h,d=j-1+4*h,c=k-1+4*h,h=r-1+4*h,m=m&255,l=l&255,G=q&255,p=p&255,q=f[m+f[l+f[G+f[p]]]]%32;s=f[m+s+f[l+t+f[G+x+f[p+v]]]]%32;w=f[m+w+f[l+y+f[G+D+f[p+C]]]]%32;u=f[m+u+f[l+E+f[G+z+f[p+H]]]]%32;f=f[m+1+f[l+1+f[G+1+f[p+1]]]]%32;p=0.6-a*a-j*j-k*k-r*r;0>p?a=0:(p*=p,a=p*p*this.dot4(e[q],a,j,k,r));j=0.6-O*O-F*F-R*
R-I*I;0>j?j=0:(j*=j,j=j*j*this.dot4(e[s],O,F,R,I));k=0.6-K*K-L*L-S*S-ca*ca;0>k?k=0:(k*=k,k=k*k*this.dot4(e[w],K,L,S,ca));K=0.6-b*b-i*i-Y*Y-N*N;0>K?b=0:(K*=K,b=K*K*this.dot4(e[u],b,i,Y,N));i=0.6-g*g-d*d-c*c-h*h;0>i?e=0:(i*=i,e=i*i*this.dot4(e[f],g,d,c,h));return 27*(a+j+k+b+e)};var Detector={canvas:!!window.CanvasRenderingContext2D,webgl:function(){try{return!!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return!1}}(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.id="webgl-error-message";a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.fontWeight="normal";a.style.textAlign="center";
a.style.background="#fff";a.style.color="#000";a.style.padding="1.5em";a.style.width="400px";a.style.margin="5em auto 0";this.webgl||(a.innerHTML=window.WebGLRenderingContext?'Your graphics card does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br />\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.':'Your browser does not seem to support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation" style="color:#000">WebGL</a>.<br/>\nFind out how to get it <a href="http://get.webgl.org/" style="color:#000">here</a>.');
return a},addGetWebGLMessage:function(a){var b,c,a=a||{};b=void 0!==a.parent?a.parent:document.body;a=void 0!==a.id?a.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=a;b.appendChild(c)}};
